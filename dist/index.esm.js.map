{"version":3,"file":"index.esm.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/lodash.clonedeep/index.js","../src/utils/bignumber.ts","../src/config.ts","../src/types.ts","../node_modules/cross-fetch/node_modules/node-fetch/lib/index.mjs","../node_modules/cross-fetch/dist/node-ponyfill.js","../node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","../node_modules/graphql/jsutils/inspect.mjs","../node_modules/graphql/jsutils/invariant.mjs","../node_modules/graphql/jsutils/defineInspect.mjs","../node_modules/graphql/language/ast.mjs","../node_modules/graphql/language/visitor.mjs","../node_modules/graphql/language/blockString.mjs","../node_modules/graphql/language/printer.mjs","../node_modules/extract-files/public/ReactNativeFile.js","../node_modules/extract-files/public/isExtractableFile.js","../node_modules/extract-files/public/extractFiles.js","../node_modules/extract-files/public/index.js","../node_modules/delayed-stream/lib/delayed_stream.js","../node_modules/combined-stream/lib/combined_stream.js","../node_modules/mime-db/index.js","../node_modules/mime-types/index.js","../node_modules/asynckit/lib/defer.js","../node_modules/asynckit/lib/async.js","../node_modules/asynckit/lib/abort.js","../node_modules/asynckit/lib/iterate.js","../node_modules/asynckit/lib/state.js","../node_modules/asynckit/lib/terminator.js","../node_modules/asynckit/parallel.js","../node_modules/asynckit/serialOrdered.js","../node_modules/asynckit/serial.js","../node_modules/asynckit/index.js","../node_modules/form-data/lib/populate.js","../node_modules/form-data/lib/form_data.js","../node_modules/graphql-request/dist/createRequestBody.js","../node_modules/graphql-request/dist/types.js","../node_modules/graphql-request/dist/index.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/subgraph/index.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/utils/big-number.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/utils/common.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/utils/math/math.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/pools/base/index.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/utils/math/log-exp.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/utils/math/fixed-point.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/pools/stable/math.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/pools/stable/index.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/pools/weighted/math.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/pools/weighted/index.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/index.js","../src/pools/weightedPool/weightedMath.ts","../src/pools/weightedPool/weightedPool.ts","../src/pools/stablePool/stableMath.ts","../src/pools/stablePool/stablePool.ts","../src/pools/elementPool/elementMath.ts","../src/pools/elementPool/elementPool.ts","../src/pools/metaStablePool/metaStableMath.ts","../src/pools/metaStablePool/metaStablePool.ts","../src/pools/index.ts","../src/router/helpersClass.ts","../src/router/sorClass.ts","../src/constants.ts","../src/pools/lido/index.ts","../src/utils/index.ts","../src/wrapInfo.ts","../src/formatSwaps.ts","../node_modules/lodash.set/index.js","../src/utils/multicaller.ts","../src/poolCaching/onchainData.ts","../src/poolCaching/subgraph.ts","../src/poolCaching/index.ts","../src/routeProposal/filtering.ts","../src/routeProposal/pathLimits.ts","../src/routeProposal/index.ts","../src/swapCost/coingecko.ts","../src/swapCost/index.ts","../src/wrapper.ts","../src/frontendHelpers/weightedHelpers.ts","../src/frontendHelpers/stableHelpers.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","import { BigNumber } from 'bignumber.js';\nBigNumber.config({\n    EXPONENTIAL_AT: [-100, 100],\n    ROUNDING_MODE: 1,\n    DECIMAL_PLACES: 18,\n});\n\nexport const ZERO = bnum(0);\nexport const ONE = bnum(1);\nexport const INFINITY = bnum('Infinity');\nexport const BONE = new BigNumber(10).pow(18);\n\nexport function scale(input: BigNumber, decimalPlaces: number): BigNumber {\n    const scalePow = new BigNumber(decimalPlaces.toString());\n    const scaleMul = new BigNumber(10).pow(scalePow);\n    return input.times(scaleMul);\n}\n\nexport function bnum(val: string | number | BigNumber): BigNumber {\n    return new BigNumber(val.toString());\n}\n\nexport { BigNumber };\n","import { BigNumber } from './utils/bignumber';\n\nlet allowAddRemove: string | boolean = process.env.ALLOW_ADD_REMOVE || false;\nif (typeof allowAddRemove === 'string') {\n    if (allowAddRemove === 'true' || allowAddRemove === 'True')\n        allowAddRemove = true;\n    else allowAddRemove = false;\n}\nexport const ALLOW_ADD_REMOVE: boolean = allowAddRemove;\n// priceErrorTolerance is how close we expect prices after swap to be in SOR\n// suggested paths\nconst priceErrorTolerance: string =\n    process.env.PRICE_ERROR_TOLERANCE || '0.00001';\nexport const PRICE_ERROR_TOLERANCE: BigNumber = new BigNumber(\n    priceErrorTolerance\n);\n// infinitesimal is an amount that's used to initialize swap amounts so they are\n// not zero or the path's limit.\n// It's also used in the calculation of derivatives in pool maths\n// const infinitesimal: string = process.env.INFINITESIMAL || '0.000001';\nconst infinitesimal = '0.01'; // Increasing INFINITESIMAL to '0.01' to test derivative sensitivity\nexport const INFINITESIMAL = new BigNumber(infinitesimal);\n","import { BigNumber } from './utils/bignumber';\n\nexport enum SwapTypes {\n    SwapExactIn,\n    SwapExactOut,\n}\n\nexport enum PoolTypes {\n    Weighted,\n    Stable,\n    Element,\n    MetaStable,\n}\n\nexport enum SwapPairType {\n    Direct,\n    HopIn,\n    HopOut,\n}\n\nexport enum PairTypes {\n    BptToToken,\n    TokenToBpt,\n    TokenToToken,\n}\n\nexport interface SwapOptions {\n    gasPrice: BigNumber;\n    swapGas: BigNumber;\n    timestamp: number;\n    maxPools: number;\n    poolTypeFilter: PoolFilter;\n    forceRefresh: boolean;\n}\n\nexport interface PoolPairBase {\n    balanceIn: BigNumber;\n    balanceOut: BigNumber;\n    poolType: PoolTypes;\n    pairType: PairTypes;\n    tokenIn: string;\n    tokenOut: string;\n    decimalsIn: number;\n    decimalsOut: number;\n}\n\nexport interface Swap {\n    pool: string;\n    tokenIn: string;\n    tokenOut: string;\n    swapAmount?: string;\n    limitReturnAmount?: string;\n    maxPrice?: string;\n    tokenInDecimals: number;\n    tokenOutDecimals: number;\n}\n\nexport interface SubgraphPoolBase {\n    id: string;\n    address: string;\n    poolType: string;\n    swapFee: string;\n    totalShares: string;\n    tokens: SubGraphToken[];\n    tokensList: string[];\n\n    // Weighted & Element field\n    totalWeight?: string;\n\n    // Stable specific fields\n    amp?: string;\n\n    // Element specific fields\n    expiryTime?: number;\n    unitSeconds?: number;\n    principalToken?: string;\n    baseToken?: string;\n\n    // LBP specific fields\n    swapEnabled?: boolean;\n}\n\nexport interface SubGraphToken {\n    address: string;\n    balance: string;\n    decimals: string | number;\n    // Stable & Element field\n    weight?: string;\n    // MetaStablePool field\n    priceRate?: string;\n}\n\nexport interface SwapV2 {\n    poolId: string;\n    assetInIndex: number;\n    assetOutIndex: number;\n    amount: string;\n    userData: string;\n}\n\nexport interface SwapInfo {\n    tokenAddresses: string[];\n    swaps: SwapV2[];\n    swapAmount: BigNumber;\n    swapAmountForSwaps?: BigNumber; // Used with stETH/wstETH\n    returnAmount: BigNumber;\n    returnAmountFromSwaps?: BigNumber; // Used with stETH/wstETH\n    returnAmountConsideringFees: BigNumber;\n    tokenIn: string;\n    tokenOut: string;\n    marketSp: BigNumber;\n}\n\nexport interface PoolDictionary {\n    [poolId: string]: PoolBase;\n}\n\nexport interface PoolPairDictionary {\n    [tokenInOut: string]: PoolPairBase;\n}\n\nexport interface NewPath {\n    id: string; // pool address if direct path, contactenation of pool addresses if multihop\n    swaps: Swap[];\n    poolPairData: PoolPairBase[];\n    limitAmount: BigNumber;\n    pools: PoolBase[];\n    filterEffectivePrice?: BigNumber; // TODO: This is just used for filtering, maybe there is a better way to filter?\n}\n\nexport enum PoolFilter {\n    All = 'All',\n    Weighted = 'Weighted',\n    Stable = 'Stable',\n    MetaStable = 'MetaStable',\n    LBP = 'LiquidityBootstrapping',\n}\n\nexport interface PoolBase {\n    poolType: PoolTypes;\n    swapPairType: SwapPairType;\n    id: string;\n    address: string;\n    tokensList: string[];\n    parsePoolPairData: (tokenIn: string, tokenOut: string) => PoolPairBase;\n    getNormalizedLiquidity: (poolPairData: PoolPairBase) => BigNumber;\n    getLimitAmountSwap: (\n        poolPairData: PoolPairBase,\n        swapType: SwapTypes\n    ) => BigNumber;\n    updateTokenBalanceForPool: (token: string, newBalance: BigNumber) => void;\n    _exactTokenInForTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _exactTokenInForBPTOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _exactBPTInForTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _tokenInForExactTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _tokenInForExactBPTOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _BPTInForExactTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _spotPriceAfterSwapExactTokenInForTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _spotPriceAfterSwapExactTokenInForBPTOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _spotPriceAfterSwapExactBPTInForTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _spotPriceAfterSwapTokenInForExactTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _spotPriceAfterSwapTokenInForExactBPTOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _spotPriceAfterSwapBPTInForExactTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _derivativeSpotPriceAfterSwapExactTokenInForBPTOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _derivativeSpotPriceAfterSwapExactBPTInForTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _derivativeSpotPriceAfterSwapTokenInForExactBPTOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _derivativeSpotPriceAfterSwapBPTInForExactTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _evmoutGivenIn: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _evmexactTokenInForBPTOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _evmexactBPTInForTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _evminGivenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _evmtokenInForExactBPTOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n    _evmbptInForExactTokenOut: (\n        poolPairData: PoolPairBase,\n        amount: BigNumber\n    ) => BigNumber;\n}\n\nexport interface WeightedPool extends PoolBase {\n    totalWeight: string;\n}\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","const nodeFetch = require('node-fetch')\nconst realFetch = nodeFetch.default || nodeFetch\n\nconst fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nfetch.ponyfill = true\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n","// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable flowtype/no-weak-types */\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(rawString);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  var startLine = 0;\n\n  while (startLine < lines.length && isBlank(lines[startLine])) {\n    ++startLine;\n  }\n\n  var endLine = lines.length;\n\n  while (endLine > startLine && isBlank(lines[endLine - 1])) {\n    --endLine;\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.slice(startLine, endLine).join('\\n');\n}\n\nfunction isBlank(str) {\n  for (var i = 0; i < str.length; ++i) {\n    if (str[i] !== ' ' && str[i] !== '\\t') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @internal\n */\n\n\nexport function getBlockStringIndentation(value) {\n  var _commonIndent;\n\n  var isFirstLine = true;\n  var isEmptyLine = true;\n  var indent = 0;\n  var commonIndent = null;\n\n  for (var i = 0; i < value.length; ++i) {\n    switch (value.charCodeAt(i)) {\n      case 13:\n        //  \\r\n        if (value.charCodeAt(i + 1) === 10) {\n          ++i; // skip \\r\\n as one symbol\n        }\n\n      // falls through\n\n      case 10:\n        //  \\n\n        isFirstLine = false;\n        isEmptyLine = true;\n        indent = 0;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        ++indent;\n        break;\n\n      default:\n        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {\n          commonIndent = indent;\n        }\n\n        isEmptyLine = false;\n    }\n  }\n\n  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n}\nvar MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    var prefix = wrap('', alias, ': ') + name;\n    var argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n    if (argsLine.length > MAX_LINE_LENGTH) {\n      argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n    }\n\n    return join([argsLine, join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction isMultiline(str) {\n  return str.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray != null && maybeArray.some(isMultiline);\n}\n","'use strict';\n\nmodule.exports = function ReactNativeFile(_ref) {\n  var uri = _ref.uri,\n    name = _ref.name,\n    type = _ref.type;\n  this.uri = uri;\n  this.name = name;\n  this.type = type;\n};\n","'use strict';\n\nvar ReactNativeFile = require('./ReactNativeFile');\n\nmodule.exports = function isExtractableFile(value) {\n  return (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  );\n};\n","'use strict';\n\nvar defaultIsExtractableFile = require('./isExtractableFile');\n\nmodule.exports = function extractFiles(value, path, isExtractableFile) {\n  if (path === void 0) {\n    path = '';\n  }\n\n  if (isExtractableFile === void 0) {\n    isExtractableFile = defaultIsExtractableFile;\n  }\n\n  var clone;\n  var files = new Map();\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file);\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths);\n    else files.set(file, paths);\n  }\n\n  if (isExtractableFile(value)) {\n    clone = null;\n    addFile([path], value);\n  } else {\n    var prefix = path ? path + '.' : '';\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function (file, i) {\n        addFile(['' + prefix + i], file);\n        return null;\n      });\n    else if (Array.isArray(value))\n      clone = value.map(function (child, i) {\n        var result = extractFiles(child, '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        return result.clone;\n      });\n    else if (value && value.constructor === Object) {\n      clone = {};\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        clone[i] = result.clone;\n      }\n    } else clone = value;\n  }\n\n  return {\n    clone: clone,\n    files: files,\n  };\n};\n","'use strict';\n\nexports.ReactNativeFile = require('./ReactNativeFile');\nexports.extractFiles = require('./extractFiles');\nexports.isExtractableFile = require('./isExtractableFile');\n","var Stream = require('stream').Stream;\nvar util = require('util');\n\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n  this.source = null;\n  this.dataSize = 0;\n  this.maxDataSize = 1024 * 1024;\n  this.pauseStream = true;\n\n  this._maxDataSizeExceeded = false;\n  this._released = false;\n  this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream, Stream);\n\nDelayedStream.create = function(source, options) {\n  var delayedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    delayedStream[option] = options[option];\n  }\n\n  delayedStream.source = source;\n\n  var realEmit = source.emit;\n  source.emit = function() {\n    delayedStream._handleEmit(arguments);\n    return realEmit.apply(source, arguments);\n  };\n\n  source.on('error', function() {});\n  if (delayedStream.pauseStream) {\n    source.pause();\n  }\n\n  return delayedStream;\n};\n\nObject.defineProperty(DelayedStream.prototype, 'readable', {\n  configurable: true,\n  enumerable: true,\n  get: function() {\n    return this.source.readable;\n  }\n});\n\nDelayedStream.prototype.setEncoding = function() {\n  return this.source.setEncoding.apply(this.source, arguments);\n};\n\nDelayedStream.prototype.resume = function() {\n  if (!this._released) {\n    this.release();\n  }\n\n  this.source.resume();\n};\n\nDelayedStream.prototype.pause = function() {\n  this.source.pause();\n};\n\nDelayedStream.prototype.release = function() {\n  this._released = true;\n\n  this._bufferedEvents.forEach(function(args) {\n    this.emit.apply(this, args);\n  }.bind(this));\n  this._bufferedEvents = [];\n};\n\nDelayedStream.prototype.pipe = function() {\n  var r = Stream.prototype.pipe.apply(this, arguments);\n  this.resume();\n  return r;\n};\n\nDelayedStream.prototype._handleEmit = function(args) {\n  if (this._released) {\n    this.emit.apply(this, args);\n    return;\n  }\n\n  if (args[0] === 'data') {\n    this.dataSize += args[1].length;\n    this._checkIfMaxDataSizeExceeded();\n  }\n\n  this._bufferedEvents.push(args);\n};\n\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n  if (this._maxDataSizeExceeded) {\n    return;\n  }\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  this._maxDataSizeExceeded = true;\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\n  this.emit('error', new Error(message));\n};\n","var util = require('util');\nvar Stream = require('stream').Stream;\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n  this._insideLoop = false;\n  this._pendingNext = false;\n}\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams,\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n\n  if (this._insideLoop) {\n    this._pendingNext = true;\n    return; // defer call\n  }\n\n  this._insideLoop = true;\n  try {\n    do {\n      this._pendingNext = false;\n      this._realGetNext();\n    } while (this._pendingNext);\n  } finally {\n    this._insideLoop = false;\n  }\n};\n\nCombinedStream.prototype._realGetNext = function() {\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error', function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error', err);\n};\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","module.exports = defer;\n\n/**\n * Runs provided function on next iteration of the event loop\n *\n * @param {function} fn - function to run\n */\nfunction defer(fn)\n{\n  var nextTick = typeof setImmediate == 'function'\n    ? setImmediate\n    : (\n      typeof process == 'object' && typeof process.nextTick == 'function'\n      ? process.nextTick\n      : null\n    );\n\n  if (nextTick)\n  {\n    nextTick(fn);\n  }\n  else\n  {\n    setTimeout(fn, 0);\n  }\n}\n","var defer = require('./defer.js');\n\n// API\nmodule.exports = async;\n\n/**\n * Runs provided callback asynchronously\n * even if callback itself is not\n *\n * @param   {function} callback - callback to invoke\n * @returns {function} - augmented callback\n */\nfunction async(callback)\n{\n  var isAsync = false;\n\n  // check if async happened\n  defer(function() { isAsync = true; });\n\n  return function async_callback(err, result)\n  {\n    if (isAsync)\n    {\n      callback(err, result);\n    }\n    else\n    {\n      defer(function nextTick_callback()\n      {\n        callback(err, result);\n      });\n    }\n  };\n}\n","// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n","var async = require('./async.js')\n  , abort = require('./abort.js')\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list, iterator, state, callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error, state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator, key, item, callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item, async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item, key, async(callback));\n  }\n\n  return aborter;\n}\n","// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n","var abort = require('./abort.js')\n  , async = require('./async.js')\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null, this.results);\n}\n","var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list, iterator, state, function(error, result)\n    {\n      if (error)\n      {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null, state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state, callback);\n}\n","var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n","var serialOrdered = require('./serialOrdered.js');\n\n// Public API\nmodule.exports = serial;\n\n/**\n * Runs iterator over provided array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serial(list, iterator, callback)\n{\n  return serialOrdered(list, iterator, null, callback);\n}\n","module.exports =\n{\n  parallel      : require('./parallel.js'),\n  serial        : require('./serial.js'),\n  serialOrdered : require('./serialOrdered.js')\n};\n","// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n","var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) )) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity –> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.setBoundary = function(boundary) {\n  this._boundary = boundary;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err) {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    request.setHeader('Content-Length', length);\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extract_files_1 = require(\"extract-files\");\nvar form_data_1 = __importDefault(require(\"form-data\"));\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\nvar isExtractableFileEnhanced = function (value) {\n    return extract_files_1.isExtractableFile(value) ||\n        (value !== null && typeof value === 'object' && typeof value.pipe === 'function');\n};\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\nfunction createRequestBody(query, variables) {\n    var _a = extract_files_1.extractFiles({ query: query, variables: variables }, '', isExtractableFileEnhanced), clone = _a.clone, files = _a.files;\n    if (files.size === 0) {\n        return JSON.stringify(clone);\n    }\n    var Form = typeof FormData === 'undefined' ? form_data_1.default : FormData;\n    var form = new Form();\n    form.append('operations', JSON.stringify(clone));\n    var map = {};\n    var i = 0;\n    files.forEach(function (paths) {\n        map[++i] = paths;\n    });\n    form.append('map', JSON.stringify(map));\n    i = 0;\n    files.forEach(function (paths, file) {\n        form.append(\"\" + ++i, file);\n    });\n    return form;\n}\nexports.default = createRequestBody;\n//# sourceMappingURL=createRequestBody.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientError = void 0;\nvar ClientError = /** @class */ (function (_super) {\n    __extends(ClientError, _super);\n    function ClientError(response, request) {\n        var _this = this;\n        var message = ClientError.extractMessage(response) + \": \" + JSON.stringify({\n            response: response,\n            request: request,\n        });\n        _this = _super.call(this, message) || this;\n        Object.setPrototypeOf(_this, ClientError.prototype);\n        _this.response = response;\n        _this.request = request;\n        // this is needed as Safari doesn't support .captureStackTrace\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, ClientError);\n        }\n        return _this;\n    }\n    ClientError.extractMessage = function (response) {\n        try {\n            return response.errors[0].message;\n        }\n        catch (e) {\n            return \"GraphQL Error (Code: \" + response.status + \")\";\n        }\n    };\n    return ClientError;\n}(Error));\nexports.ClientError = ClientError;\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gql = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")), CrossFetch = cross_fetch_1;\nvar printer_1 = require(\"graphql/language/printer\");\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\nvar types_1 = require(\"./types\");\nvar types_2 = require(\"./types\");\nObject.defineProperty(exports, \"ClientError\", { enumerable: true, get: function () { return types_2.ClientError; } });\n/**\n * Convert the given headers configuration into a plain object.\n */\nvar resolveHeaders = function (headers) {\n    var oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== 'undefined' && headers instanceof Headers) ||\n            headers instanceof CrossFetch.Headers) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(function (_a) {\n                var name = _a[0], value = _a[1];\n                oHeaders[name] = value;\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * todo\n */\nvar GraphQLClient = /** @class */ (function () {\n    function GraphQLClient(url, options) {\n        this.url = url;\n        this.options = options || {};\n    }\n    GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, localFetch, others, body, response, result, headers_1, status_1, errorResult;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, localFetch = _b === void 0 ? cross_fetch_1.default : _b, others = __rest(_a, [\"headers\", \"fetch\"]);\n                        body = createRequestBody_1.default(query, variables);\n                        return [4 /*yield*/, localFetch(this.url, __assign({ method: 'POST', headers: __assign(__assign(__assign({}, (typeof body === 'string' ? { 'Content-Type': 'application/json' } : {})), resolveHeaders(headers)), resolveHeaders(requestHeaders)), body: body }, others))];\n                    case 1:\n                        response = _c.sent();\n                        return [4 /*yield*/, getResult(response)];\n                    case 2:\n                        result = _c.sent();\n                        if (response.ok && !result.errors && result.data) {\n                            headers_1 = response.headers, status_1 = response.status;\n                            return [2 /*return*/, __assign(__assign({}, result), { headers: headers_1, status: status_1 })];\n                        }\n                        else {\n                            errorResult = typeof result === 'string' ? { error: result } : result;\n                            throw new types_1.ClientError(__assign(__assign({}, errorResult), { status: response.status, headers: response.headers }), { query: query, variables: variables });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, localFetch, others, resolvedDoc, body, response, result, errorResult;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, localFetch = _b === void 0 ? cross_fetch_1.default : _b, others = __rest(_a, [\"headers\", \"fetch\"]);\n                        resolvedDoc = resolveRequestDocument(document);\n                        body = createRequestBody_1.default(resolvedDoc, variables);\n                        return [4 /*yield*/, localFetch(this.url, __assign({ method: 'POST', headers: __assign(__assign(__assign({}, (typeof body === 'string' ? { 'Content-Type': 'application/json' } : {})), resolveHeaders(headers)), resolveHeaders(requestHeaders)), body: body }, others))];\n                    case 1:\n                        response = _c.sent();\n                        return [4 /*yield*/, getResult(response)];\n                    case 2:\n                        result = _c.sent();\n                        if (response.ok && !result.errors && result.data) {\n                            return [2 /*return*/, result.data];\n                        }\n                        else {\n                            errorResult = typeof result === 'string' ? { error: result } : result;\n                            throw new types_1.ClientError(__assign(__assign({}, errorResult), { status: response.status }), { query: resolvedDoc, variables: variables });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.setHeaders = function (headers) {\n        this.options.headers = headers;\n        return this;\n    };\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    GraphQLClient.prototype.setHeader = function (key, value) {\n        var _a;\n        var headers = this.options.headers;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-ignore\n            headers[key] = value;\n        }\n        else {\n            this.options.headers = (_a = {}, _a[key] = value, _a);\n        }\n        return this;\n    };\n    return GraphQLClient;\n}());\nexports.GraphQLClient = GraphQLClient;\n/**\n * todo\n */\nfunction rawRequest(url, query, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.rawRequest(query, variables)];\n        });\n    });\n}\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nfunction request(url, document, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.request(document, variables)];\n        });\n    });\n}\nexports.request = request;\nexports.default = request;\n/**\n * todo\n */\nfunction getResult(response) {\n    var contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.startsWith('application/json')) {\n        return response.json();\n    }\n    else {\n        return response.text();\n    }\n}\n/**\n * helpers\n */\nfunction resolveRequestDocument(document) {\n    if (typeof document === 'string')\n        return document;\n    return printer_1.print(document);\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nfunction gql(chunks) {\n    var variables = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        variables[_i - 1] = arguments[_i];\n    }\n    return chunks.reduce(function (accumulator, chunk, index) { return \"\" + accumulator + chunk + (index in variables ? variables[index] : ''); }, '');\n}\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers) {\n    var o = {};\n    headers.forEach(function (v, k) {\n        o[k] = v;\n    });\n    return o;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPool = void 0;\nconst graphql_request_1 = require(\"graphql-request\");\nconst getPool = async (poolId, blockNumber, testnet) => {\n    const data = `\n    id\n    address\n    poolType\n    swapFee\n    totalShares\n    amp\n    tokens {\n      id\n      address\n      symbol\n      balance\n      decimals\n      weight\n    }\n  `;\n    let query;\n    if (blockNumber) {\n        query = graphql_request_1.gql `\n      query getPool($poolId: ID!, $blockNumber: Int!) {\n        pools(where: { id: $poolId }, block: { number: $blockNumber }) {\n          ${data}\n        }\n      }\n    `;\n    }\n    else {\n        query = graphql_request_1.gql `\n      query getPool($poolId: ID!) {\n        pools(where: { id: $poolId }) {\n          ${data}\n        }\n      }\n    `;\n    }\n    const result = await graphql_request_1.request(testnet\n        ? \"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-kovan-v2\"\n        : \"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-v2\", query, { poolId, blockNumber });\n    if (result && result.pools && result.pools.length) {\n        return result.pools[0];\n    }\n    return null;\n};\nexports.getPool = getPool;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scaleAll = exports.scale = exports.bn = void 0;\nconst bignumber_js_1 = require(\"bignumber.js\");\nbignumber_js_1.BigNumber.config({\n    EXPONENTIAL_AT: [-100, 100],\n    ROUNDING_MODE: 1,\n    DECIMAL_PLACES: 18,\n});\nexports.default = bignumber_js_1.BigNumber;\nconst bn = (value) => new bignumber_js_1.BigNumber(value);\nexports.bn = bn;\nconst scale = (value, decimalPlaces) => exports.bn(value).times(exports.bn(10).pow(decimalPlaces));\nexports.scale = scale;\nconst scaleAll = (values, decimalPlaces) => values.map((x) => exports.scale(x, decimalPlaces));\nexports.scaleAll = scaleAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shallowCopyAll = exports.shallowCopy = void 0;\nconst shallowCopy = (obj) => {\n    return Object.assign({}, obj);\n};\nexports.shallowCopy = shallowCopy;\nconst shallowCopyAll = (objs) => {\n    return objs.map(exports.shallowCopy);\n};\nexports.shallowCopyAll = shallowCopyAll;\n","\"use strict\";\n// Ported from Solidity:\n// https://github.com/balancer-labs/balancer-v2-monorepo/blob/ce70f7663e0ac94b25ed60cb86faaa8199fd9e13/pkg/solidity-utils/contracts/math/Math.sol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.divUp = exports.divDown = exports.div = exports.mul = exports.min = exports.max = exports.sub = exports.add = exports.TWO = exports.ONE = exports.ZERO = void 0;\nconst big_number_1 = require(\"../big-number\");\nexports.ZERO = big_number_1.bn(0);\nexports.ONE = big_number_1.bn(1);\nexports.TWO = big_number_1.bn(2);\nconst add = (a, b) => {\n    return a.plus(b);\n};\nexports.add = add;\nconst sub = (a, b) => {\n    if (b.gt(a)) {\n        throw new Error(\"SUB_OVERFLOW\");\n    }\n    return a.minus(b);\n};\nexports.sub = sub;\nconst max = (a, b) => {\n    return a.gte(b) ? a : b;\n};\nexports.max = max;\nconst min = (a, b) => {\n    return a.lt(b) ? a : b;\n};\nexports.min = min;\nconst mul = (a, b) => {\n    return a.times(b);\n};\nexports.mul = mul;\nconst div = (a, b, roundUp) => {\n    return roundUp ? exports.divUp(a, b) : exports.divDown(a, b);\n};\nexports.div = div;\nconst divDown = (a, b) => {\n    if (b.isZero()) {\n        throw new Error(\"ZERO_DIVISION\");\n    }\n    return a.idiv(b);\n};\nexports.divDown = divDown;\nconst divUp = (a, b) => {\n    if (b.isZero()) {\n        throw new Error(\"ZERO_DIVISION\");\n    }\n    return a.isZero() ? exports.ZERO : exports.ONE.plus(a.minus(exports.ONE).idiv(b));\n};\nexports.divUp = divUp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst big_number_1 = require(\"../../utils/big-number\");\nconst math = require(\"../../utils/math/math\");\nclass BasePool {\n    // ---------------------- Constructor ----------------------\n    constructor(params) {\n        this.MIN_SWAP_FEE_PERCENTAGE = big_number_1.bn(\"0.000001\"); // 0.0001%\n        this.MAX_SWAP_FEE_PERCENTAGE = big_number_1.bn(\"0.1\"); // 10%\n        this._query = false;\n        this._id = params.id;\n        this._address = params.address;\n        this._bptTotalSupply = params.bptTotalSupply;\n        this.setSwapFeePercentage(params.swapFeePercentage);\n        if (params.query) {\n            this._query = params.query;\n        }\n    }\n    // ---------------------- Getters ----------------------\n    get id() {\n        return this._id;\n    }\n    get address() {\n        return this._address;\n    }\n    get bptTotalSupply() {\n        return this._bptTotalSupply;\n    }\n    get swapFeePercentage() {\n        return this._swapFeePercentage;\n    }\n    get query() {\n        return this._query;\n    }\n    // ---------------------- Setters ----------------------\n    setSwapFeePercentage(swapFeePercentage) {\n        if (big_number_1.bn(swapFeePercentage).lt(this.MIN_SWAP_FEE_PERCENTAGE)) {\n            throw new Error(\"MIN_SWAP_FEE_PERCENTAGE\");\n        }\n        if (big_number_1.bn(swapFeePercentage).gt(this.MAX_SWAP_FEE_PERCENTAGE)) {\n            throw new Error(\"MAX_SWAP_FEE_PERCENTAGE\");\n        }\n        this._swapFeePercentage = swapFeePercentage;\n    }\n    setQuery(query) {\n        this._query = query;\n    }\n    // ---------------------- Internal ----------------------\n    _upScale(amount, decimals) {\n        return math.mul(big_number_1.scale(amount, decimals), big_number_1.bn(10).pow(18 - decimals));\n    }\n    _downScaleDown(amount, decimals) {\n        return big_number_1.scale(math.divDown(big_number_1.bn(amount), big_number_1.bn(10).pow(18 - decimals)), -decimals);\n    }\n    _downScaleUp(amount, decimals) {\n        return big_number_1.scale(math.divUp(big_number_1.bn(amount), big_number_1.bn(10).pow(18 - decimals)), -decimals);\n    }\n}\nexports.default = BasePool;\n","\"use strict\";\n// Ported from Solidity:\n// https://github.com/balancer-labs/balancer-core-v2/blob/70843e6a61ad11208c1cfabf5cfe15be216ca8d3/pkg/solidity-utils/contracts/math/LogExpMath.sol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ln = exports.log = exports.exp = exports.pow = void 0;\nconst big_number_1 = require(\"../big-number\");\n// All fixed point multiplications and divisions are inlined\n// This means we need to divide by ONE when multiplying two numbers, and multiply by ONE when dividing them\n// All arguments and return values are 18 decimal fixed point numbers\nconst ONE_18 = big_number_1.bn(\"1000000000000000000\"); // 1e18\n// Internally, intermediate values are computed with higher precision as 20 decimal fixed point numbers, and in the case of ln36, 36 decimals\nconst ONE_20 = big_number_1.bn(\"100000000000000000000\"); // 1e20\nconst ONE_36 = big_number_1.bn(\"1000000000000000000000000000000000000\"); // 1e36\n// The domain of natural exponentiation is bound by the word size and number of decimals used\n// Because internally the result will be stored using 20 decimals, the largest possible result is\n// (2^255 - 1) / 10^20, which makes the largest exponent ln((2^255 - 1) / 10^20) = 130.700829182905140221\n// The smallest possible result is 10^(-18), which makes largest negative argument\n// ln(10^(-18)) = -41.446531673892822312.\n// We use 130.0 and -41.0 to have some safety margin\nconst MAX_NATURAL_EXPONENT = big_number_1.bn(\"130000000000000000000\"); // 130e18\nconst MIN_NATURAL_EXPONENT = big_number_1.bn(\"-41000000000000000000\"); // (-41)e18\n// Bounds for ln_36's argument\n// Both ln(0.9) and ln(1.1) can be represented with 36 decimal places in a fixed point 256 bit integer\nconst LN_36_LOWER_BOUND = ONE_18.minus(big_number_1.bn(\"100000000000000000\")); // 1e18 - 1e17\nconst LN_36_UPPER_BOUND = ONE_18.plus(big_number_1.bn(\"100000000000000000\")); // 1e18 + 1e17\nconst MILD_EXPONENT_BOUND = big_number_1.bn(2).pow(254).idiv(ONE_20);\n// 18 decimal constants\nconst x0 = big_number_1.bn(\"128000000000000000000\"); // 2ˆ7\nconst a0 = big_number_1.bn(\"38877084059945950922200000000000000000000000000000000000\"); // eˆ(x0) (no decimals)\nconst x1 = big_number_1.bn(\"64000000000000000000\"); // 2ˆ6\nconst a1 = big_number_1.bn(\"6235149080811616882910000000\"); // eˆ(x1) (no decimals)\n// 20 decimal constants\nconst x2 = big_number_1.bn(\"3200000000000000000000\"); // 2ˆ5\nconst a2 = big_number_1.bn(\"7896296018268069516100000000000000\"); // eˆ(x2)\nconst x3 = big_number_1.bn(\"1600000000000000000000\"); // 2ˆ4\nconst a3 = big_number_1.bn(\"888611052050787263676000000\"); // eˆ(x3)\nconst x4 = big_number_1.bn(\"800000000000000000000\"); // 2ˆ3\nconst a4 = big_number_1.bn(\"298095798704172827474000\"); // eˆ(x4)\nconst x5 = big_number_1.bn(\"400000000000000000000\"); // 2ˆ2\nconst a5 = big_number_1.bn(\"5459815003314423907810\"); // eˆ(x5)\nconst x6 = big_number_1.bn(\"200000000000000000000\"); // 2ˆ1\nconst a6 = big_number_1.bn(\"738905609893065022723\"); // eˆ(x6)\nconst x7 = big_number_1.bn(\"100000000000000000000\"); // 2ˆ0\nconst a7 = big_number_1.bn(\"271828182845904523536\"); // eˆ(x7)\nconst x8 = big_number_1.bn(\"50000000000000000000\"); // 2ˆ(-1)\nconst a8 = big_number_1.bn(\"164872127070012814685\"); // eˆ(x8)\nconst x9 = big_number_1.bn(\"25000000000000000000\"); // 2ˆ(-2)\nconst a9 = big_number_1.bn(\"128402541668774148407\"); // eˆ(x9)\nconst x10 = big_number_1.bn(\"12500000000000000000\"); // 2ˆ(-3)\nconst a10 = big_number_1.bn(\"113314845306682631683\"); // eˆ(x10)\nconst x11 = big_number_1.bn(\"6250000000000000000\"); // 2ˆ(-4)\nconst a11 = big_number_1.bn(\"106449445891785942956\"); // eˆ(x11)\nconst pow = (x, y) => {\n    if (y.isZero()) {\n        // We solve the 0^0 indetermination by making it equal one.\n        return ONE_18;\n    }\n    if (x.isZero()) {\n        return big_number_1.bn(0);\n    }\n    // Instead of computing x^y directly, we instead rely on the properties of logarithms and exponentiation to\n    // arrive at that result. In particular, exp(ln(x)) = x, and ln(x^y) = y * ln(x). This means\n    // x^y = exp(y * ln(x)).\n    // The ln function takes a signed value, so we need to make sure x fits in the signed 256 bit range.\n    if (x.gte(big_number_1.bn(2).pow(255))) {\n        throw new Error(\"X_OUT_OF_BOUNDS\");\n    }\n    // We will compute y * ln(x) in a single step. Depending on the value of x, we can either use ln or ln_36. In\n    // both cases, we leave the division by ONE_18 (due to fixed point multiplication) to the end.\n    // This prevents y * ln(x) from overflowing, and at the same time guarantees y fits in the signed 256 bit range.\n    if (y.gte(MILD_EXPONENT_BOUND)) {\n        throw new Error(\"Y_OUT_OF_BOUNDS\");\n    }\n    let logx_times_y;\n    if (LN_36_LOWER_BOUND.lt(x) && x.lt(LN_36_UPPER_BOUND)) {\n        let ln_36_x = _ln_36(x);\n        // ln_36_x has 36 decimal places, so multiplying by y_int256 isn't as straightforward, since we can't just\n        // bring y_int256 to 36 decimal places, as it might overflow. Instead, we perform two 18 decimal\n        // multiplications and add the results: one with the first 18 decimals of ln_36_x, and one with the\n        // (downscaled) last 18 decimals.\n        logx_times_y = ln_36_x\n            .idiv(ONE_18)\n            .times(y)\n            .plus(ln_36_x.mod(ONE_18).times(y).idiv(ONE_18));\n    }\n    else {\n        logx_times_y = _ln(x).times(y);\n    }\n    logx_times_y = logx_times_y.idiv(ONE_18);\n    // Finally, we compute exp(y * ln(x)) to arrive at x^y\n    if (logx_times_y.lt(MIN_NATURAL_EXPONENT) ||\n        logx_times_y.gt(MAX_NATURAL_EXPONENT)) {\n        throw new Error(\"PRODUCT_OUT_OF_BOUNDS\");\n    }\n    return exports.exp(logx_times_y);\n};\nexports.pow = pow;\nconst exp = (x) => {\n    if (x.lt(MIN_NATURAL_EXPONENT) || x.gt(MAX_NATURAL_EXPONENT)) {\n        throw new Error(\"INVALID_EXPONENT\");\n    }\n    if (x.lt(0)) {\n        // We only handle positive exponents: e^(-x) is computed as 1 / e^x. We can safely make x positive since it\n        // fits in the signed 256 bit range (as it is larger than MIN_NATURAL_EXPONENT).\n        // Fixed point division requires multiplying by ONE_18.\n        return ONE_18.times(ONE_18).idiv(exports.exp(x.negated()));\n    }\n    // First, we use the fact that e^(x+y) = e^x * e^y to decompose x into a sum of powers of two, which we call x_n,\n    // where x_n == 2^(7 - n), and e^x_n = a_n has been precomputed. We choose the first x_n, x0, to equal 2^7\n    // because all larger powers are larger than MAX_NATURAL_EXPONENT, and therefore not present in the\n    // decomposition.\n    // At the end of this process we will have the product of all e^x_n = a_n that apply, and the remainder of this\n    // decomposition, which will be lower than the smallest x_n.\n    // exp(x) = k_0 * a_0 * k_1 * a_1 * ... + k_n * a_n * exp(remainder), where each k_n equals either 0 or 1.\n    // We mutate x by subtracting x_n, making it the remainder of the decomposition.\n    // The first two a_n (e^(2^7) and e^(2^6)) are too large if stored as 18 decimal numbers, and could cause\n    // intermediate overflows. Instead we store them as plain integers, with 0 decimals.\n    // Additionally, x0 + x1 is larger than MAX_NATURAL_EXPONENT, which means they will not both be present in the\n    // decomposition.\n    // For each x_n, we test if that term is present in the decomposition (if x is larger than it), and if so deduct\n    // it and compute the accumulated product.\n    let firstAN;\n    if (x.gte(x0)) {\n        x = x.minus(x0);\n        firstAN = a0;\n    }\n    else if (x.gte(x1)) {\n        x = x.minus(x1);\n        firstAN = a1;\n    }\n    else {\n        firstAN = big_number_1.bn(1); // One with no decimal places\n    }\n    // We now transform x into a 20 decimal fixed point number, to have enhanced precision when computing the\n    // smaller terms.\n    x = x.times(100);\n    // `product` is the accumulated product of all a_n (except a0 and a1), which starts at 20 decimal fixed point\n    // one. Recall that fixed point multiplication requires dividing by ONE_20.\n    let product = ONE_20;\n    if (x.gte(x2)) {\n        x = x.minus(x2);\n        product = product.times(a2).idiv(ONE_20);\n    }\n    if (x.gte(x3)) {\n        x = x.minus(x3);\n        product = product.times(a3).idiv(ONE_20);\n    }\n    if (x.gte(x4)) {\n        x = x.minus(x4);\n        product = product.times(a4).idiv(ONE_20);\n    }\n    if (x.gte(x5)) {\n        x = x.minus(x5);\n        product = product.times(a5).idiv(ONE_20);\n    }\n    if (x.gte(x6)) {\n        x = x.minus(x6);\n        product = product.times(a6).idiv(ONE_20);\n    }\n    if (x.gte(x7)) {\n        x = x.minus(x7);\n        product = product.times(a7).idiv(ONE_20);\n    }\n    if (x.gte(x8)) {\n        x = x.minus(x8);\n        product = product.times(a8).idiv(ONE_20);\n    }\n    if (x.gte(x9)) {\n        x = x.minus(x9);\n        product = product.times(a9).idiv(ONE_20);\n    }\n    // x10 and x11 are unnecessary here since we have high enough precision already.\n    // Now we need to compute e^x, where x is small (in particular, it is smaller than x9). We use the Taylor series\n    // expansion for e^x: 1 + x + (x^2 / 2!) + (x^3 / 3!) + ... + (x^n / n!).\n    let seriesSum = ONE_20; // The initial one in the sum, with 20 decimal places.\n    let term; // Each term in the sum, where the nth term is (x^n / n!).\n    // The first term is simply x.\n    term = x;\n    seriesSum = seriesSum.plus(term);\n    // Each term (x^n / n!) equals the previous one times x, divided by n. Since x is a fixed point number,\n    // multiplying by it requires dividing by ONE_20, but dividing by the non-fixed point n values does not.\n    term = term.times(x).idiv(ONE_20).idiv(2);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(3);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(4);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(5);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(6);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(7);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(8);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(9);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(10);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(11);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(12);\n    seriesSum = seriesSum.plus(term);\n    // 12 Taylor terms are sufficient for 18 decimal precision.\n    // We now have the first a_n (with no decimals), and the product of all other a_n present, and the Taylor\n    // approximation of the exponentiation of the remainder (both with 20 decimals). All that remains is to multiply\n    // all three (one 20 decimal fixed point multiplication, dividing by ONE_20, and one integer multiplication),\n    // and then drop two digits to return an 18 decimal value.\n    return product.times(seriesSum).idiv(ONE_20).times(firstAN).idiv(100);\n};\nexports.exp = exp;\nconst log = (arg, base) => {\n    // This performs a simple base change: log(arg, base) = ln(arg) / ln(base).\n    // Both logBase and logArg are computed as 36 decimal fixed point numbers, either by using ln_36, or by\n    // upscaling.\n    let logBase;\n    if (LN_36_LOWER_BOUND.lt(base) && base.lt(LN_36_UPPER_BOUND)) {\n        logBase = _ln_36(base);\n    }\n    else {\n        logBase = _ln(base).times(ONE_18);\n    }\n    let logArg;\n    if (LN_36_LOWER_BOUND.lt(arg) && arg.lt(LN_36_UPPER_BOUND)) {\n        logArg = _ln_36(arg);\n    }\n    else {\n        logArg = _ln(arg).times(ONE_18);\n    }\n    // When dividing, we multiply by ONE_18 to arrive at a result with 18 decimal places\n    return logArg.times(ONE_18).idiv(logBase);\n};\nexports.log = log;\nconst ln = (a) => {\n    // The real natural logarithm is not defined for negative numbers or zero.\n    if (a.lte(0)) {\n        throw new Error(\"OUT_OF_BOUNDS\");\n    }\n    if (LN_36_LOWER_BOUND.lt(a) && a.lt(LN_36_UPPER_BOUND)) {\n        return _ln_36(a).idiv(ONE_18);\n    }\n    else {\n        return _ln(a);\n    }\n};\nexports.ln = ln;\nconst _ln = (a) => {\n    if (a.lt(ONE_18)) {\n        // Since ln(a^k) = k * ln(a), we can compute ln(a) as ln(a) = ln((1/a)^(-1)) = - ln((1/a))\n        // If a is less than one, 1/a will be greater than one, and this if statement will not be entered in the recursive call\n        // Fixed point division requires multiplying by ONE_18\n        return _ln(ONE_18.times(ONE_18).idiv(a)).negated();\n    }\n    // First, we use the fact that ln^(a * b) = ln(a) + ln(b) to decompose ln(a) into a sum of powers of two, which\n    // we call x_n, where x_n == 2^(7 - n), which are the natural logarithm of precomputed quantities a_n (that is,\n    // ln(a_n) = x_n). We choose the first x_n, x0, to equal 2^7 because the exponential of all larger powers cannot\n    // be represented as 18 fixed point decimal numbers in 256 bits, and are therefore larger than a.\n    // At the end of this process we will have the sum of all x_n = ln(a_n) that apply, and the remainder of this\n    // decomposition, which will be lower than the smallest a_n.\n    // ln(a) = k_0 * x_0 + k_1 * x_1 + ... + k_n * x_n + ln(remainder), where each k_n equals either 0 or 1\n    // We mutate a by subtracting a_n, making it the remainder of the decomposition\n    // For reasons related to how `exp` works, the first two a_n (e^(2^7) and e^(2^6)) are not stored as fixed point\n    // numbers with 18 decimals, but instead as plain integers with 0 decimals, so we need to multiply them by\n    // ONE_18 to convert them to fixed point.\n    // For each a_n, we test if that term is present in the decomposition (if a is larger than it), and if so divide\n    // by it and compute the accumulated sum.\n    let sum = big_number_1.bn(0);\n    if (a.gte(a0.times(ONE_18))) {\n        a = a.idiv(a0); // Integer, not fixed point division\n        sum = sum.plus(x0);\n    }\n    if (a.gte(a1.times(ONE_18))) {\n        a = a.idiv(a1); // Integer, not fixed point division\n        sum = sum.plus(x1);\n    }\n    // All other a_n and x_n are stored as 20 digit fixed point numbers, so we convert the sum and a to this format.\n    sum = sum.times(100);\n    a = a.times(100);\n    // Because further a_n are  20 digit fixed point numbers, we multiply by ONE_20 when dividing by them.\n    if (a.gte(a2)) {\n        a = a.times(ONE_20).idiv(a2);\n        sum = sum.plus(x2);\n    }\n    if (a.gte(a3)) {\n        a = a.times(ONE_20).idiv(a3);\n        sum = sum.plus(x3);\n    }\n    if (a.gte(a4)) {\n        a = a.times(ONE_20).idiv(a4);\n        sum = sum.plus(x4);\n    }\n    if (a.gte(a5)) {\n        a = a.times(ONE_20).idiv(a5);\n        sum = sum.plus(x5);\n    }\n    if (a.gte(a6)) {\n        a = a.times(ONE_20).idiv(a6);\n        sum = sum.plus(x6);\n    }\n    if (a.gte(a7)) {\n        a = a.times(ONE_20).idiv(a7);\n        sum = sum.plus(x7);\n    }\n    if (a.gte(a8)) {\n        a = a.times(ONE_20).idiv(a8);\n        sum = sum.plus(x8);\n    }\n    if (a.gte(a9)) {\n        a = a.times(ONE_20).idiv(a9);\n        sum = sum.plus(x9);\n    }\n    if (a.gte(a10)) {\n        a = a.times(ONE_20).idiv(a10);\n        sum = sum.plus(x10);\n    }\n    if (a.gte(a11)) {\n        a = a.times(ONE_20).idiv(a11);\n        sum = sum.plus(x11);\n    }\n    // a is now a small number (smaller than a_11, which roughly equals 1.06). This means we can use a Taylor series\n    // that converges rapidly for values of `a` close to one - the same one used in ln_36.\n    // Let z = (a - 1) / (a + 1).\n    // ln(a) = 2 * (z + z^3 / 3 + z^5 / 5 + z^7 / 7 + ... + z^(2 * n + 1) / (2 * n + 1))\n    // Recall that 20 digit fixed point division requires multiplying by ONE_20, and multiplication requires\n    // division by ONE_20.\n    const z = a.minus(ONE_20).times(ONE_20).idiv(a.plus(ONE_20));\n    const z_squared = z.times(z).idiv(ONE_20);\n    // num is the numerator of the series: the z^(2 * n + 1) term\n    let num = z;\n    // seriesSum holds the accumulated sum of each term in the series, starting with the initial z\n    let seriesSum = num;\n    // In each step, the numerator is multiplied by z^2\n    num = num.times(z_squared).idiv(ONE_20);\n    seriesSum = seriesSum.plus(num.idiv(3));\n    num = num.times(z_squared).idiv(ONE_20);\n    seriesSum = seriesSum.plus(num.idiv(5));\n    num = num.times(z_squared).idiv(ONE_20);\n    seriesSum = seriesSum.plus(num.idiv(7));\n    num = num.times(z_squared).idiv(ONE_20);\n    seriesSum = seriesSum.plus(num.idiv(9));\n    num = num.times(z_squared).idiv(ONE_20);\n    seriesSum = seriesSum.plus(num.idiv(11));\n    // 6 Taylor terms are sufficient for 36 decimal precision.\n    // Finally, we multiply by 2 (non fixed point) to compute ln(remainder)\n    seriesSum = seriesSum.times(2);\n    // We now have the sum of all x_n present, and the Taylor approximation of the logarithm of the remainder (both\n    // with 20 decimals). All that remains is to sum these two, and then drop two digits to return a 18 decimal\n    // value.\n    return sum.plus(seriesSum).idiv(100);\n};\nconst _ln_36 = (x) => {\n    // Since ln(1) = 0, a value of x close to one will yield a very small result, which makes using 36 digits worthwhile\n    // First, we transform x to a 36 digit fixed point value\n    x = x.times(ONE_18);\n    // We will use the following Taylor expansion, which converges very rapidly. Let z = (x - 1) / (x + 1)\n    // ln(x) = 2 * (z + z^3 / 3 + z^5 / 5 + z^7 / 7 + ... + z^(2 * n + 1) / (2 * n + 1))\n    // Recall that 36 digit fixed point division requires multiplying by ONE_36, and multiplication requires division by ONE_36\n    const z = x.minus(ONE_36).times(ONE_36).idiv(x.plus(ONE_36));\n    const z_squared = z.times(z).idiv(ONE_36);\n    // num is the numerator of the series: the z^(2 * n + 1) term\n    let num = z;\n    // seriesSum holds the accumulated sum of each term in the series, starting with the initial z\n    let seriesSum = num;\n    // In each step, the numerator is multiplied by z^2\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(3));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(5));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(7));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(9));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(11));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(13));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(15));\n    // 8 Taylor terms are sufficient for 36 decimal precision\n    // All that remains is multiplying by 2 (non fixed point)\n    return seriesSum.times(2);\n};\n","\"use strict\";\n// Ported from Solidity:\n// https://github.com/balancer-labs/balancer-core-v2/blob/70843e6a61ad11208c1cfabf5cfe15be216ca8d3/pkg/solidity-utils/contracts/math/FixedPoint.sol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.complement = exports.powUp = exports.powDown = exports.divUp = exports.divDown = exports.mulUp = exports.mulDown = exports.sub = exports.add = exports.MIN_POW_BASE_FREE_EXPONENT = exports.MAX_POW_RELATIVE_ERROR = exports.ONE = exports.ZERO = void 0;\nconst big_number_1 = require(\"../big-number\");\nconst logExp = require(\"./log-exp\");\nexports.ZERO = big_number_1.bn(0);\nexports.ONE = big_number_1.bn(\"1000000000000000000\"); // 10^18\nexports.MAX_POW_RELATIVE_ERROR = big_number_1.bn(10000); // 10^(-14)\n// Minimum base for the power function when the exponent is 'free' (larger than ONE)\nexports.MIN_POW_BASE_FREE_EXPONENT = big_number_1.bn(\"700000000000000000\"); // 0.7e18\nconst add = (a, b) => {\n    // Fixed Point addition is the same as regular checked addition\n    return a.plus(b);\n};\nexports.add = add;\nconst sub = (a, b) => {\n    // Fixed Point subtraction is the same as regular checked subtraction\n    if (b.gt(a)) {\n        throw new Error(\"SUB_OVERFLOW\");\n    }\n    return a.minus(b);\n};\nexports.sub = sub;\nconst mulDown = (a, b) => {\n    return a.times(b).idiv(exports.ONE);\n};\nexports.mulDown = mulDown;\nconst mulUp = (a, b) => {\n    const product = a.times(b);\n    if (product.isZero()) {\n        return product;\n    }\n    else {\n        // The traditional divUp formula is:\n        // divUp(x, y) := (x + y - 1) / y\n        // To avoid intermediate overflow in the addition, we distribute the division and get:\n        // divUp(x, y) := (x - 1) / y + 1\n        // Note that this requires x != 0, which we already tested for\n        return product.minus(big_number_1.bn(1)).idiv(exports.ONE).plus(big_number_1.bn(1));\n    }\n};\nexports.mulUp = mulUp;\nconst divDown = (a, b) => {\n    if (b.isZero()) {\n        throw new Error(\"ZERO_DIVISION\");\n    }\n    if (a.isZero()) {\n        return a;\n    }\n    else {\n        return a.times(exports.ONE).idiv(b);\n    }\n};\nexports.divDown = divDown;\nconst divUp = (a, b) => {\n    if (b.isZero()) {\n        throw new Error(\"ZERO_DIVISION\");\n    }\n    if (a.isZero()) {\n        return a;\n    }\n    else {\n        // The traditional divUp formula is:\n        // divUp(x, y) := (x + y - 1) / y\n        // To avoid intermediate overflow in the addition, we distribute the division and get:\n        // divUp(x, y) := (x - 1) / y + 1\n        // Note that this requires x != 0, which we already tested for.\n        return a.times(exports.ONE).minus(big_number_1.bn(1)).idiv(b).plus(big_number_1.bn(1));\n    }\n};\nexports.divUp = divUp;\nconst powDown = (x, y) => {\n    const raw = logExp.pow(x, y);\n    const maxError = exports.add(exports.mulUp(raw, exports.MAX_POW_RELATIVE_ERROR), big_number_1.bn(1));\n    if (raw.lt(maxError)) {\n        return big_number_1.bn(0);\n    }\n    else {\n        return exports.sub(raw, maxError);\n    }\n};\nexports.powDown = powDown;\nconst powUp = (x, y) => {\n    const raw = logExp.pow(x, y);\n    const maxError = exports.add(exports.mulUp(raw, exports.MAX_POW_RELATIVE_ERROR), big_number_1.bn(1));\n    return exports.add(raw, maxError);\n};\nexports.powUp = powUp;\nconst complement = (x) => {\n    return x.lt(exports.ONE) ? exports.ONE.minus(x) : big_number_1.bn(0);\n};\nexports.complement = complement;\n","\"use strict\";\n// Ported from Solidity:\n// https://github.com/balancer-labs/balancer-core-v2/blob/70843e6a61ad11208c1cfabf5cfe15be216ca8d3/pkg/pool-stable/contracts/StableMath.sol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._calcDueTokenProtocolSwapFeeAmount = exports._calcTokensOutGivenExactBptIn = exports._calcTokenOutGivenExactBptIn = exports._calcBptInGivenExactTokensOut = exports._calcTokenInGivenExactBptOut = exports._calcBptOutGivenExactTokensIn = exports._calcInGivenOut = exports._calcOutGivenIn = exports._calculateInvariant = exports.MAX_STABLE_TOKENS = exports.AMP_PRECISION = exports.MAX_AMP = exports.MIN_AMP = void 0;\nconst big_number_1 = require(\"../../utils/big-number\");\nconst fp = require(\"../../utils/math/fixed-point\");\nconst math = require(\"../../utils/math/math\");\nexports.MIN_AMP = big_number_1.bn(1);\nexports.MAX_AMP = big_number_1.bn(5000);\nexports.AMP_PRECISION = big_number_1.bn(1000);\nexports.MAX_STABLE_TOKENS = 5;\n// Computes the invariant given the current balances, using the Newton-Raphson approximation.\n// The amplification parameter equals: A n^(n-1)\nconst _calculateInvariant = (amplificationParameter, balances, roundUp) => {\n    /**********************************************************************************************\n    // invariant                                                                                 //\n    // D = invariant                                                  D^(n+1)                    //\n    // A = amplification coefficient      A  n^n S + D = A D n^n + -----------                   //\n    // S = sum of balances                                             n^n P                     //\n    // P = product of balances                                                                   //\n    // n = number of tokens                                                                      //\n    **********************************************************************************************/\n    // We support rounding up or down.\n    let sum = math.ZERO;\n    let numTokens = big_number_1.bn(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        sum = fp.add(sum, balances[i]);\n    }\n    if (sum.isZero()) {\n        return math.ZERO;\n    }\n    let prevInvariant = math.ZERO;\n    let invariant = sum;\n    let ampTimesTotal = math.mul(amplificationParameter, numTokens);\n    for (let i = 0; i < 255; i++) {\n        let P_D = math.mul(numTokens, balances[0]);\n        for (let j = 1; j < balances.length; j++) {\n            P_D = math.div(math.mul(math.mul(P_D, balances[j]), numTokens), invariant, roundUp);\n        }\n        prevInvariant = invariant;\n        invariant = math.div(fp.add(math.mul(math.mul(numTokens, invariant), invariant), math.div(math.mul(math.mul(ampTimesTotal, sum), P_D), exports.AMP_PRECISION, roundUp)), fp.add(math.mul(fp.add(numTokens, math.ONE), invariant), math.div(math.mul(fp.sub(ampTimesTotal, exports.AMP_PRECISION), P_D), exports.AMP_PRECISION, !roundUp)), roundUp);\n        if (invariant.gt(prevInvariant)) {\n            if (fp.sub(invariant, prevInvariant).lte(math.ONE)) {\n                return invariant;\n            }\n        }\n        else if (fp.sub(prevInvariant, invariant).lte(math.ONE)) {\n            return invariant;\n        }\n    }\n    throw new Error(\"STABLE_GET_BALANCE_DIDNT_CONVERGE\");\n};\nexports._calculateInvariant = _calculateInvariant;\n// Computes how many tokens can be taken out of a pool if `tokenAmountIn` are sent, given the current balances.\n// The amplification parameter equals: A n^(n-1)\nconst _calcOutGivenIn = (amplificationParameter, balances, tokenIndexIn, tokenIndexOut, tokenAmountIn, swapFeePercentage) => {\n    /**************************************************************************************************************\n    // outGivenIn token x for y - polynomial equation to solve                                                   //\n    // ay = amount out to calculate                                                                              //\n    // by = balance token out                                                                                    //\n    // y = by - ay (finalBalanceOut)                                                                             //\n    // D = invariant                                               D                     D^(n+1)                 //\n    // A = amplification coefficient               y^2 + ( S - ----------  - D) * y -  ------------- = 0         //\n    // n = number of tokens                                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but y                                                                           //\n    // P = product of final balances but y                                                                       //\n    **************************************************************************************************************/\n    // Subtract the fee from the amount in if requested\n    if (swapFeePercentage) {\n        tokenAmountIn = fp.sub(tokenAmountIn, fp.mulUp(tokenAmountIn, swapFeePercentage));\n    }\n    // Amount out, so we round down overall.\n    // Given that we need to have a greater final balance out, the invariant needs to be rounded up\n    const invariant = exports._calculateInvariant(amplificationParameter, balances, true);\n    balances[tokenIndexIn] = fp.add(balances[tokenIndexIn], tokenAmountIn);\n    const finalBalanceOut = _getTokenBalanceGivenInvariantAndAllOtherBalances(amplificationParameter, balances, invariant, tokenIndexOut);\n    balances[tokenIndexIn] = fp.sub(balances[tokenIndexIn], tokenAmountIn);\n    return fp.sub(fp.sub(balances[tokenIndexOut], finalBalanceOut), math.ONE);\n};\nexports._calcOutGivenIn = _calcOutGivenIn;\n// Computes how many tokens must be sent to a pool if `tokenAmountOut` are sent given the\n// current balances, using the Newton-Raphson approximation.\n// The amplification parameter equals: A n^(n-1)\nconst _calcInGivenOut = (amplificationParameter, balances, tokenIndexIn, tokenIndexOut, tokenAmountOut, swapFeePercentage) => {\n    /**************************************************************************************************************\n    // inGivenOut token x for y - polynomial equation to solve                                                   //\n    // ax = amount in to calculate                                                                               //\n    // bx = balance token in                                                                                     //\n    // x = bx + ax (finalBalanceIn)                                                                              //\n    // D = invariant                                                D                     D^(n+1)                //\n    // A = amplification coefficient               x^2 + ( S - ----------  - D) * x -  ------------- = 0         //\n    // n = number of tokens                                     (A * n^n)               A * n^2n * P             //\n    // S = sum of final balances but x                                                                           //\n    // P = product of final balances but x                                                                       //\n    **************************************************************************************************************/\n    // Amount in, so we round up overall.\n    // Given that we need to have a greater final balance in, the invariant needs to be rounded up\n    const invariant = exports._calculateInvariant(amplificationParameter, balances, true);\n    balances[tokenIndexOut] = fp.sub(balances[tokenIndexOut], tokenAmountOut);\n    const finalBalanceIn = _getTokenBalanceGivenInvariantAndAllOtherBalances(amplificationParameter, balances, invariant, tokenIndexIn);\n    balances[tokenIndexOut] = fp.add(balances[tokenIndexOut], tokenAmountOut);\n    let amountIn = fp.add(fp.sub(finalBalanceIn, balances[tokenIndexIn]), math.ONE);\n    // Add the fee to the amount in if requested\n    if (swapFeePercentage) {\n        amountIn = fp.divUp(amountIn, fp.complement(swapFeePercentage));\n    }\n    return amountIn;\n};\nexports._calcInGivenOut = _calcInGivenOut;\nconst _calcBptOutGivenExactTokensIn = (amp, balances, amountsIn, bptTotalSupply, swapFeePercentage) => {\n    // BPT out, so we round down overall.\n    // First loop calculates the sum of all token balances, which will be used to calculate\n    // the current weights of each token, relative to this sum\n    let sumBalances = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = fp.add(sumBalances, balances[i]);\n    }\n    // Calculate the weighted balance ratio without considering fees\n    const balanceRatiosWithFee = new Array(amountsIn.length);\n    // The weighted sum of token balance ratios without fee\n    let invariantRatioWithFees = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        const currentWeight = fp.divDown(balances[i], sumBalances);\n        balanceRatiosWithFee[i] = fp.divDown(fp.add(balances[i], amountsIn[i]), balances[i]);\n        invariantRatioWithFees = fp.add(invariantRatioWithFees, fp.mulDown(balanceRatiosWithFee[i], currentWeight));\n    }\n    // Second loop calculates new amounts in, taking into account the fee on the percentage excess\n    const newBalances = new Array(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        let amountInWithoutFee;\n        // Check if the balance ratio is greater than the ideal ratio to charge fees or not\n        if (balanceRatiosWithFee[i].gt(invariantRatioWithFees)) {\n            const nonTaxableAmount = fp.mulDown(balances[i], fp.sub(invariantRatioWithFees, fp.ONE));\n            const taxableAmount = fp.sub(amountsIn[i], nonTaxableAmount);\n            amountInWithoutFee = fp.add(nonTaxableAmount, fp.mulDown(taxableAmount, fp.sub(fp.ONE, swapFeePercentage)));\n        }\n        else {\n            amountInWithoutFee = amountsIn[i];\n        }\n        newBalances[i] = fp.add(balances[i], amountInWithoutFee);\n    }\n    // Get current and new invariants, taking swap fees into account\n    const currentInvariant = exports._calculateInvariant(amp, balances, true);\n    const newInvariant = exports._calculateInvariant(amp, newBalances, false);\n    const invariantRatio = fp.divDown(newInvariant, currentInvariant);\n    // If the invariant didn't increase for any reason, we simply don't mint BPT\n    if (invariantRatio.gt(fp.ONE)) {\n        return fp.mulDown(bptTotalSupply, fp.sub(invariantRatio, fp.ONE));\n    }\n    else {\n        return math.ZERO;\n    }\n};\nexports._calcBptOutGivenExactTokensIn = _calcBptOutGivenExactTokensIn;\nconst _calcTokenInGivenExactBptOut = (amp, balances, tokenIndex, bptAmountOut, bptTotalSupply, swapFeePercentage) => {\n    // Token in, so we round up overall.\n    // Get the current invariant\n    const currentInvariant = exports._calculateInvariant(amp, balances, true);\n    // Calculate new invariant\n    const newInvariant = fp.mulUp(fp.divUp(fp.add(bptTotalSupply, bptAmountOut), bptTotalSupply), currentInvariant);\n    // Calculate amount in without fee.\n    const newBalanceTokenIndex = _getTokenBalanceGivenInvariantAndAllOtherBalances(amp, balances, newInvariant, tokenIndex);\n    const amountInWithoutFee = fp.sub(newBalanceTokenIndex, balances[tokenIndex]);\n    // First calculate the sum of all token balances, which will be used to calculate\n    // the current weight of each token\n    let sumBalances = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = fp.add(sumBalances, balances[i]);\n    }\n    // We can now compute how much extra balance is being deposited and used in virtual swaps, and charge swap fees\n    // accordingly.\n    const currentWeight = fp.divDown(balances[tokenIndex], sumBalances);\n    const taxablePercentage = fp.complement(currentWeight);\n    const taxableAmount = fp.mulUp(amountInWithoutFee, taxablePercentage);\n    const nonTaxableAmount = fp.sub(amountInWithoutFee, taxableAmount);\n    return fp.add(nonTaxableAmount, fp.divUp(taxableAmount, fp.sub(fp.ONE, swapFeePercentage)));\n};\nexports._calcTokenInGivenExactBptOut = _calcTokenInGivenExactBptOut;\n/*\n  Flow of calculations:\n  amountsTokenOut -> amountsOutProportional ->\n  amountOutPercentageExcess -> amountOutBeforeFee -> newInvariant -> amountBPTIn\n*/\nconst _calcBptInGivenExactTokensOut = (amp, balances, amountsOut, bptTotalSupply, swapFeePercentage) => {\n    // BPT in, so we round up overall.\n    // First loop calculates the sum of all token balances, which will be used to calculate\n    // the current weights of each token relative to this sum\n    let sumBalances = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = fp.add(sumBalances, balances[i]);\n    }\n    // Calculate the weighted balance ratio without considering fees\n    const balanceRatiosWithoutFee = new Array(amountsOut.length);\n    let invariantRatioWithoutFees = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        const currentWeight = fp.divUp(balances[i], sumBalances);\n        balanceRatiosWithoutFee[i] = fp.divUp(fp.sub(balances[i], amountsOut[i]), balances[i]);\n        invariantRatioWithoutFees = fp.add(invariantRatioWithoutFees, fp.mulUp(balanceRatiosWithoutFee[i], currentWeight));\n    }\n    // Second loop calculates new amounts in, taking into account the fee on the percentage excess\n    const newBalances = new Array(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        // Swap fees are typically charged on 'token in', but there is no 'token in' here, so we apply it to\n        // 'token out'. This results in slightly larger price impact.\n        let amountOutWithFee;\n        if (invariantRatioWithoutFees.gt(balanceRatiosWithoutFee[i])) {\n            const nonTaxableAmount = fp.mulDown(balances[i], fp.complement(invariantRatioWithoutFees));\n            const taxableAmount = fp.sub(amountsOut[i], nonTaxableAmount);\n            amountOutWithFee = fp.add(nonTaxableAmount, fp.divUp(taxableAmount, fp.sub(fp.ONE, swapFeePercentage)));\n        }\n        else {\n            amountOutWithFee = amountsOut[i];\n        }\n        newBalances[i] = fp.sub(balances[i], amountOutWithFee);\n    }\n    // Get current and new invariants, taking into account swap fees\n    const currentInvariant = exports._calculateInvariant(amp, balances, true);\n    const newInvariant = exports._calculateInvariant(amp, newBalances, false);\n    const invariantRatio = fp.divDown(newInvariant, currentInvariant);\n    // return amountBPTIn\n    return fp.mulUp(bptTotalSupply, fp.complement(invariantRatio));\n};\nexports._calcBptInGivenExactTokensOut = _calcBptInGivenExactTokensOut;\nconst _calcTokenOutGivenExactBptIn = (amp, balances, tokenIndex, bptAmountIn, bptTotalSupply, swapFeePercentage) => {\n    // Token out, so we round down overall.\n    // Get the current and new invariants. Since we need a bigger new invariant, we round the current one up.\n    const currentInvariant = exports._calculateInvariant(amp, balances, true);\n    const newInvariant = fp.mulUp(fp.divUp(fp.sub(bptTotalSupply, bptAmountIn), bptTotalSupply), currentInvariant);\n    // Calculate amount out without fee\n    const newBalanceTokenIndex = _getTokenBalanceGivenInvariantAndAllOtherBalances(amp, balances, newInvariant, tokenIndex);\n    const amountOutWithoutFee = fp.sub(balances[tokenIndex], newBalanceTokenIndex);\n    // First calculate the sum of all token balances, which will be used to calculate\n    // the current weight of each token\n    let sumBalances = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = fp.add(sumBalances, balances[i]);\n    }\n    // We can now compute how much excess balance is being withdrawn as a result of the virtual swaps, which result\n    // in swap fees.\n    const currentWeight = fp.divDown(balances[tokenIndex], sumBalances);\n    const taxablePercentage = fp.complement(currentWeight);\n    // Swap fees are typically charged on 'token in', but there is no 'token in' here, so we apply it\n    // to 'token out'. This results in slightly larger price impact. Fees are rounded up.\n    const taxableAmount = fp.mulUp(amountOutWithoutFee, taxablePercentage);\n    const nonTaxableAmount = fp.sub(amountOutWithoutFee, taxableAmount);\n    return fp.add(nonTaxableAmount, fp.mulDown(taxableAmount, fp.sub(fp.ONE, swapFeePercentage)));\n};\nexports._calcTokenOutGivenExactBptIn = _calcTokenOutGivenExactBptIn;\nconst _calcTokensOutGivenExactBptIn = (balances, bptAmountIn, bptTotalSupply) => {\n    /**********************************************************************************************\n    // exactBPTInForTokensOut                                                                    //\n    // (per token)                                                                               //\n    // aO = tokenAmountOut             /        bptIn         \\                                  //\n    // b = tokenBalance      a0 = b * | ---------------------  |                                 //\n    // bptIn = bptAmountIn             \\     bptTotalSupply    /                                 //\n    // bpt = bptTotalSupply                                                                      //\n    **********************************************************************************************/\n    // Since we're computing an amount out, we round down overall. This means rounding down on both the\n    // multiplication and division.\n    const bptRatio = fp.divDown(bptAmountIn, bptTotalSupply);\n    const amountsOut = new Array(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        amountsOut[i] = fp.mulDown(balances[i], bptRatio);\n    }\n    return amountsOut;\n};\nexports._calcTokensOutGivenExactBptIn = _calcTokensOutGivenExactBptIn;\n// The amplification parameter equals: A n^(n-1)\nconst _calcDueTokenProtocolSwapFeeAmount = (amplificationParameter, balances, lastInvariant, tokenIndex, protocolSwapFeePercentage) => {\n    /**************************************************************************************************************\n    // oneTokenSwapFee - polynomial equation to solve                                                            //\n    // af = fee amount to calculate in one token                                                                 //\n    // bf = balance of fee token                                                                                 //\n    // f = bf - af (finalBalanceFeeToken)                                                                        //\n    // D = old invariant                                            D                     D^(n+1)                //\n    // A = amplification coefficient               f^2 + ( S - ----------  - D) * f -  ------------- = 0         //\n    // n = number of tokens                                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but f                                                                           //\n    // P = product of final balances but f                                                                       //\n    **************************************************************************************************************/\n    // Protocol swap fee amount, so we round down overall.\n    const finalBalanceFeeToken = _getTokenBalanceGivenInvariantAndAllOtherBalances(amplificationParameter, balances, lastInvariant, tokenIndex);\n    if (balances[tokenIndex].lte(finalBalanceFeeToken)) {\n        // This shouldn't happen outside of rounding errors, but have this safeguard nonetheless to prevent the Pool\n        // from entering a locked state in which joins and exits revert while computing accumulated swap fees.\n        return math.ZERO;\n    }\n    // Result is rounded down\n    const accumulatedTokenSwapFees = fp.sub(balances[tokenIndex], finalBalanceFeeToken);\n    return fp.divDown(fp.mulDown(accumulatedTokenSwapFees, protocolSwapFeePercentage), fp.ONE);\n};\nexports._calcDueTokenProtocolSwapFeeAmount = _calcDueTokenProtocolSwapFeeAmount;\n// This function calculates the balance of a given token (tokenIndex)\n// given all the other balances and the invariant\nconst _getTokenBalanceGivenInvariantAndAllOtherBalances = (amplificationParameter, balances, invariant, tokenIndex) => {\n    // Rounds result up overall\n    const numTokens = big_number_1.bn(balances.length);\n    const ampTimesTotal = math.mul(amplificationParameter, numTokens);\n    let sum = balances[0];\n    let P_D = math.mul(numTokens, balances[0]);\n    for (let j = 1; j < balances.length; j++) {\n        P_D = math.divDown(math.mul(math.mul(P_D, balances[j]), numTokens), invariant);\n        sum = fp.add(sum, balances[j]);\n    }\n    sum = fp.sub(sum, balances[tokenIndex]);\n    const inv2 = math.mul(invariant, invariant);\n    // We remove the balance fromm c by multiplying it\n    const c = math.mul(math.mul(math.divUp(inv2, math.mul(ampTimesTotal, P_D)), exports.AMP_PRECISION), balances[tokenIndex]);\n    const b = fp.add(sum, math.mul(math.divDown(invariant, ampTimesTotal), exports.AMP_PRECISION));\n    // We iterate to find the balance\n    let prevTokenBalance = math.ZERO;\n    // We multiply the first iteration outside the loop with the invariant to set the value of the\n    // initial approximation.\n    let tokenBalance = math.divUp(fp.add(inv2, c), fp.add(invariant, b));\n    for (let i = 0; i < 255; i++) {\n        prevTokenBalance = tokenBalance;\n        tokenBalance = math.divUp(fp.add(math.mul(tokenBalance, tokenBalance), c), fp.sub(fp.add(math.mul(tokenBalance, math.TWO), b), invariant));\n        if (tokenBalance.gt(prevTokenBalance)) {\n            if (fp.sub(tokenBalance, prevTokenBalance).lte(math.ONE)) {\n                return tokenBalance;\n            }\n        }\n        else if (fp.sub(prevTokenBalance, tokenBalance).lte(math.ONE)) {\n            return tokenBalance;\n        }\n    }\n    throw new Error(\"STABLE_GET_BALANCE_DIDNT_CONVERGE\");\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_1 = require(\"../../subgraph/index\");\nconst big_number_1 = require(\"../../utils/big-number\");\nconst common_1 = require(\"../../utils/common\");\nconst base_1 = require(\"../base\");\nconst math = require(\"./math\");\nclass StablePool extends base_1.default {\n    // ---------------------- Constructor ----------------------\n    constructor(params) {\n        super(params);\n        if (params.tokens.length > math.MAX_STABLE_TOKENS) {\n            throw new Error(\"MAX_STABLE_TOKENS\");\n        }\n        this._tokens = common_1.shallowCopyAll(params.tokens);\n        if (big_number_1.bn(params.amplificationParameter).lt(math.MIN_AMP)) {\n            throw new Error(\"MIN_AMP\");\n        }\n        if (big_number_1.bn(params.amplificationParameter).gt(math.MAX_AMP)) {\n            throw new Error(\"MAX_AMP\");\n        }\n        this._amplificationParameter = big_number_1.bn(params.amplificationParameter)\n            .times(math.AMP_PRECISION)\n            .toString();\n    }\n    // ---------------------- Getters ----------------------\n    get tokens() {\n        // Shallow-copy to disallow direct changes\n        return common_1.shallowCopyAll(this._tokens);\n    }\n    get amplificationParameter() {\n        return big_number_1.bn(this._amplificationParameter).idiv(math.AMP_PRECISION).toString();\n    }\n    // ---------------------- Subgraph initializer ----------------------\n    static async initFromRealPool(poolId, query = false, blockNumber, testnet) {\n        const pool = await index_1.getPool(poolId, blockNumber, testnet);\n        if (!pool) {\n            throw new Error(\"Could not fetch pool data\");\n        }\n        if (pool.poolType !== \"Stable\") {\n            throw new Error(\"Pool must be stable\");\n        }\n        const id = pool.id;\n        const address = pool.address;\n        const bptTotalSupply = pool.totalShares;\n        const swapFeePercentage = pool.swapFee;\n        const amplificationParameter = pool.amp;\n        const tokens = [];\n        for (const token of pool.tokens) {\n            tokens.push({\n                address: token.address,\n                symbol: token.symbol,\n                balance: token.balance,\n                decimals: token.decimals,\n            });\n        }\n        return new StablePool({\n            id,\n            address,\n            tokens,\n            bptTotalSupply,\n            swapFeePercentage,\n            amplificationParameter,\n            query,\n        });\n    }\n    // ---------------------- Swap actions ----------------------\n    swapGivenIn(tokenInSymbol, tokenOutSymbol, amountIn) {\n        const tokenIndexIn = this._tokens.findIndex((t) => t.symbol === tokenInSymbol);\n        const tokenIndexOut = this._tokens.findIndex((t) => t.symbol === tokenOutSymbol);\n        const tokenIn = this._tokens[tokenIndexIn];\n        const tokenOut = this._tokens[tokenIndexOut];\n        const scaledAmountOut = math._calcOutGivenIn(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), tokenIndexIn, tokenIndexOut, this._upScale(amountIn, tokenIn.decimals), this._upScale(this._swapFeePercentage, 18));\n        const amountOut = this._downScaleDown(scaledAmountOut, tokenOut.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n        }\n        return amountOut.toString();\n    }\n    swapGivenOut(tokenInSymbol, tokenOutSymbol, amountOut) {\n        const tokenIndexIn = this._tokens.findIndex((t) => t.symbol === tokenInSymbol);\n        const tokenIndexOut = this._tokens.findIndex((t) => t.symbol === tokenOutSymbol);\n        const tokenIn = this._tokens[tokenIndexIn];\n        const tokenOut = this._tokens[tokenIndexOut];\n        const scaledAmountIn = math._calcInGivenOut(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), tokenIndexIn, tokenIndexOut, this._upScale(amountOut, tokenOut.decimals), this._upScale(this._swapFeePercentage, 18));\n        const amountIn = this._downScaleUp(scaledAmountIn, tokenIn.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n        }\n        return amountIn.toString();\n    }\n    // ---------------------- LP actions ----------------------\n    joinExactTokensInForBptOut(amountsIn) {\n        if (Object.keys(amountsIn).length !== this._tokens.length) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledBptOut = math._calcBptOutGivenExactTokensIn(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._tokens.map((t) => this._upScale(amountsIn[t.symbol], t.decimals)), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const bptOut = this._downScaleDown(scaledBptOut, 18);\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance)\n                    .plus(amountsIn[token.symbol])\n                    .toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).plus(bptOut).toString();\n        }\n        return bptOut.toString();\n    }\n    joinTokenInForExactBptOut(tokenInSymbol, bptOut) {\n        const tokenIndex = this._tokens.findIndex((t) => t.symbol === tokenInSymbol);\n        const tokenIn = this._tokens[tokenIndex];\n        if (!tokenIn) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledAmountIn = math._calcTokenInGivenExactBptOut(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), tokenIndex, this._upScale(bptOut, 18), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const amountIn = this._downScaleUp(scaledAmountIn, tokenIn.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).plus(bptOut).toString();\n        }\n        return amountIn.toString();\n    }\n    exitExactBptInForTokenOut(tokenOutSymbol, bptIn) {\n        const tokenIndex = this._tokens.findIndex((t) => t.symbol === tokenOutSymbol);\n        const tokenOut = this._tokens[tokenIndex];\n        if (!tokenOut) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledAmountOut = math._calcTokenOutGivenExactBptIn(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), tokenIndex, this._upScale(bptIn, 18), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const amountOut = this._downScaleDown(scaledAmountOut, tokenOut.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return amountOut.toString();\n    }\n    exitExactBptInForTokensOut(bptIn) {\n        // Exactly match the EVM version\n        if (big_number_1.bn(bptIn).gt(this._bptTotalSupply)) {\n            throw new Error(\"BPT in exceeds total supply\");\n        }\n        const scaledAmountsOut = math._calcTokensOutGivenExactBptIn(this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._upScale(bptIn, 18), this._upScale(this._bptTotalSupply, 18));\n        const amountsOut = scaledAmountsOut.map((amount, i) => this._downScaleDown(amount, this._tokens[i].decimals));\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance).minus(amountsOut[i]).toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return amountsOut.map((a) => a.toString());\n    }\n    exitBptInForExactTokensOut(amountsOut) {\n        if (Object.keys(amountsOut).length !== this._tokens.length) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledBptIn = math._calcBptInGivenExactTokensOut(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._tokens.map((t) => this._upScale(amountsOut[t.symbol], t.decimals)), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const bptIn = this._downScaleDown(scaledBptIn, 18);\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance)\n                    .minus(amountsOut[token.symbol])\n                    .toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return bptIn.toString();\n    }\n}\nexports.default = StablePool;\n","\"use strict\";\n// Ported from Solidity:\n// https://github.com/balancer-labs/balancer-core-v2/blob/70843e6a61ad11208c1cfabf5cfe15be216ca8d3/pkg/pool-weighted/contracts/WeightedMath.sol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._calcBptInGivenExactTokenOut = exports._calcBptOutGivenExactTokenIn = exports._calcDueTokenProtocolSwapFeeAmount = exports._calcTokensOutGivenExactBptIn = exports._calcTokenOutGivenExactBptIn = exports._calcBptInGivenExactTokensOut = exports._calcTokenInGivenExactBptOut = exports._calcBptOutGivenExactTokensIn = exports._calcInGivenOut = exports._calcOutGivenIn = exports._calculateInvariant = void 0;\nconst big_number_1 = require(\"../../utils/big-number\");\nconst fp = require(\"../../utils/math/fixed-point\");\n// Swap limits: amounts swapped may not be larger than this percentage of total balance\nconst MAX_IN_RATIO = big_number_1.bn(\"300000000000000000\"); // 0.3e18\nconst MAX_OUT_RATIO = big_number_1.bn(\"300000000000000000\"); // 0.3e18\n// Invariant growth limit: non-proportional joins cannot cause the invariant to increase by more than this ratio\nconst MAX_INVARIANT_RATIO = big_number_1.bn(\"3000000000000000000\"); // 3e18\n// Invariant shrink limit: non-proportional exits cannot cause the invariant to decrease by less than this ratio\nconst MIN_INVARIANT_RATIO = big_number_1.bn(\"700000000000000000\"); // 0.7e18\nconst _calculateInvariant = (normalizedWeights, balances) => {\n    /*****************************************************************************************\n    // invariant               _____                                                        //\n    // wi = weight index i      | |      wi                                                 //\n    // bi = balance index i     | |  bi ^   = i                                             //\n    // i = invariant                                                                        //\n    *****************************************************************************************/\n    let invariant = fp.ONE;\n    for (let i = 0; i < normalizedWeights.length; i++) {\n        invariant = fp.mulDown(invariant, fp.powDown(balances[i], normalizedWeights[i]));\n    }\n    if (invariant.lte(fp.ZERO)) {\n        throw new Error(\"ZERO_INVARIANT\");\n    }\n    return invariant;\n};\nexports._calculateInvariant = _calculateInvariant;\n// Computes how many tokens can be taken out of a pool if `amountIn` is sent, given the\n// current balances and weights.\nconst _calcOutGivenIn = (balanceIn, weightIn, balanceOut, weightOut, amountIn, swapFeePercentage) => {\n    /*****************************************************************************************\n    // outGivenIn                                                                           //\n    // ao = amountOut                                                                       //\n    // bo = balanceOut                                                                      //\n    // bi = balanceIn              /      /            bi             \\    (wi / wo) \\      //\n    // ai = amountIn    ao = bo * |  1 - | --------------------------  | ^            |     //\n    // wi = weightIn               \\      \\       ( bi + ai )         /              /      //\n    // wo = weightOut                                                                       //\n    *****************************************************************************************/\n    // Subtract the fee from the amount in if requested\n    if (swapFeePercentage) {\n        amountIn = fp.sub(amountIn, fp.mulUp(amountIn, swapFeePercentage));\n    }\n    // Amount out, so we round down overall\n    // The multiplication rounds down, and the subtrahend (power) rounds up (so the base rounds up too)\n    // Because bi / (bi + ai) <= 1, the exponent rounds down\n    // Cannot exceed maximum in ratio\n    if (amountIn.gt(fp.mulDown(balanceIn, MAX_IN_RATIO))) {\n        throw new Error(\"MAX_IN_RATIO\");\n    }\n    const denominator = fp.add(balanceIn, amountIn);\n    const base = fp.divUp(balanceIn, denominator);\n    const exponent = fp.divDown(weightIn, weightOut);\n    const power = fp.powUp(base, exponent);\n    return fp.mulDown(balanceOut, fp.complement(power));\n};\nexports._calcOutGivenIn = _calcOutGivenIn;\n// Computes how many tokens must be sent to a pool in order to take `amountOut`, given the\n// current balances and weights.\nconst _calcInGivenOut = (balanceIn, weightIn, balanceOut, weightOut, amountOut, swapFeePercentage) => {\n    /*****************************************************************************************\n    // inGivenOut                                                                           //\n    // ao = amountOut                                                                       //\n    // bo = balanceOut                                                                      //\n    // bi = balanceIn              /  /            bo             \\    (wo / wi)      \\     //\n    // ai = amountIn    ai = bi * |  | --------------------------  | ^            - 1  |    //\n    // wi = weightIn               \\  \\       ( bo - ao )         /                   /     //\n    // wo = weightOut                                                                       //\n    *****************************************************************************************/\n    // Amount in, so we round up overall\n    // The multiplication rounds up, and the power rounds up (so the base rounds up too)\n    // Because bo / (bo - ao) >= 1, the exponent rounds up\n    // Cannot exceed maximum out ratio\n    if (amountOut.gt(fp.mulDown(balanceOut, MAX_OUT_RATIO))) {\n        throw new Error(\"MAX_OUT_RATIO\");\n    }\n    const base = fp.divUp(balanceOut, fp.sub(balanceOut, amountOut));\n    const exponent = fp.divUp(weightOut, weightIn);\n    const power = fp.powUp(base, exponent);\n    const ratio = fp.sub(power, fp.ONE);\n    let amountIn = fp.mulUp(balanceIn, ratio);\n    // Add the fee to the amount in if requested\n    if (swapFeePercentage) {\n        amountIn = fp.divUp(amountIn, fp.complement(swapFeePercentage));\n    }\n    return amountIn;\n};\nexports._calcInGivenOut = _calcInGivenOut;\nconst _calcBptOutGivenExactTokensIn = (balances, normalizedWeights, amountsIn, bptTotalSupply, swapFee) => {\n    // BPT out, so we round down overall\n    const balanceRatiosWithFee = new Array(amountsIn.length);\n    let invariantRatioWithFees = fp.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        balanceRatiosWithFee[i] = fp.divDown(fp.add(balances[i], amountsIn[i]), balances[i]);\n        invariantRatioWithFees = fp.add(invariantRatioWithFees, fp.mulDown(balanceRatiosWithFee[i], normalizedWeights[i]));\n    }\n    let invariantRatio = fp.ONE;\n    for (let i = 0; i < balances.length; i++) {\n        let amountInWithoutFee;\n        if (balanceRatiosWithFee[i].gt(invariantRatioWithFees)) {\n            const nonTaxableAmount = fp.mulDown(balances[i], fp.sub(invariantRatioWithFees, fp.ONE));\n            const taxableAmount = fp.sub(amountsIn[i], nonTaxableAmount);\n            amountInWithoutFee = fp.add(nonTaxableAmount, fp.mulDown(taxableAmount, fp.sub(fp.ONE, swapFee)));\n        }\n        else {\n            amountInWithoutFee = amountsIn[i];\n        }\n        const balanceRatio = fp.divDown(fp.add(balances[i], amountInWithoutFee), balances[i]);\n        invariantRatio = fp.mulDown(invariantRatio, fp.powDown(balanceRatio, normalizedWeights[i]));\n    }\n    if (invariantRatio.gte(fp.ONE)) {\n        return fp.mulDown(bptTotalSupply, fp.sub(invariantRatio, fp.ONE));\n    }\n    else {\n        return fp.ZERO;\n    }\n};\nexports._calcBptOutGivenExactTokensIn = _calcBptOutGivenExactTokensIn;\nconst _calcTokenInGivenExactBptOut = (balance, normalizedWeight, bptAmountOut, bptTotalSupply, swapFee) => {\n    /*****************************************************************************************\n    // tokenInForExactBptOut                                                                //\n    // a = amountIn                                                                         //\n    // b = balance                      /  /     bpt + bptOut     \\    (1 / w)      \\       //\n    // bptOut = bptAmountOut   a = b * |  | ---------------------- | ^          - 1  |      //\n    // bpt = bptTotalSupply             \\  \\         bpt          /                 /       //\n    // w = normalizedWeight                                                                 //\n    *****************************************************************************************/\n    // Token in, so we round up overall\n    // Calculate the factor by which the invariant will increase after minting `bptAmountOut`\n    const invariantRatio = fp.divUp(fp.add(bptTotalSupply, bptAmountOut), bptTotalSupply);\n    if (invariantRatio.gt(MAX_INVARIANT_RATIO)) {\n        throw new Error(\"MAX_OUT_BPT_FOR_TOKEN_IN\");\n    }\n    // Calculate by how much the token balance has to increase to cause `invariantRatio`\n    const balanceRatio = fp.powUp(invariantRatio, fp.divUp(fp.ONE, normalizedWeight));\n    const amountInWithoutFee = fp.mulUp(balance, fp.sub(balanceRatio, fp.ONE));\n    // We can now compute how much extra balance is being deposited and used in virtual swaps, and charge swap fees accordingly\n    const taxablePercentage = fp.complement(normalizedWeight);\n    const taxableAmount = fp.mulUp(amountInWithoutFee, taxablePercentage);\n    const nonTaxableAmount = fp.sub(amountInWithoutFee, taxableAmount);\n    return fp.add(nonTaxableAmount, fp.divUp(taxableAmount, fp.complement(swapFee)));\n};\nexports._calcTokenInGivenExactBptOut = _calcTokenInGivenExactBptOut;\nconst _calcBptInGivenExactTokensOut = (balances, normalizedWeights, amountsOut, bptTotalSupply, swapFee) => {\n    // BPT in, so we round up overall\n    const balanceRatiosWithoutFee = new Array(amountsOut.length);\n    let invariantRatioWithoutFees = fp.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        balanceRatiosWithoutFee[i] = fp.divUp(fp.sub(balances[i], amountsOut[i]), balances[i]);\n        invariantRatioWithoutFees = fp.add(invariantRatioWithoutFees, fp.mulUp(balanceRatiosWithoutFee[i], normalizedWeights[i]));\n    }\n    let invariantRatio = fp.ONE;\n    for (let i = 0; i < balances.length; i++) {\n        // Swap fees are typically charged on 'tokenIn', but there is no 'tokenIn' here, so we apply it to\n        // 'tokenOut' - this results in slightly larger price impact\n        let amountOutWithFee;\n        if (invariantRatioWithoutFees.gt(balanceRatiosWithoutFee[i])) {\n            const nonTaxableAmount = fp.mulDown(balances[i], fp.complement(invariantRatioWithoutFees));\n            const taxableAmount = fp.sub(amountsOut[i], nonTaxableAmount);\n            amountOutWithFee = fp.add(nonTaxableAmount, fp.divUp(taxableAmount, fp.complement(swapFee)));\n        }\n        else {\n            amountOutWithFee = amountsOut[i];\n        }\n        const balanceRatio = fp.divDown(fp.sub(balances[i], amountOutWithFee), balances[i]);\n        invariantRatio = fp.mulDown(invariantRatio, fp.powDown(balanceRatio, normalizedWeights[i]));\n    }\n    return fp.mulUp(bptTotalSupply, fp.complement(invariantRatio));\n};\nexports._calcBptInGivenExactTokensOut = _calcBptInGivenExactTokensOut;\nconst _calcTokenOutGivenExactBptIn = (balance, normalizedWeight, bptAmountIn, bptTotalSupply, swapFee) => {\n    /*****************************************************************************************\n    // exactBptInForTokenOut                                                                //\n    // a = amountOut                                                                        //\n    // b = balance                     /      /    bpt - bptIn    \\    (1 / w)  \\           //\n    // bptIn = bptAmountIn    a = b * |  1 - | ------------------- | ^           |          //\n    // bpt = bptTotalSupply            \\      \\        bpt        /             /           //\n    // w = weight                                                                           //\n    *****************************************************************************************/\n    // Token out, so we round down overall\n    // The multiplication rounds down, but the power rounds up (so the base rounds up)\n    // Because (bpt - bptIn) / bpt <= 1, the exponent rounds down\n    // Calculate the factor by which the invariant will decrease after burning `bptAmountIn`\n    const invariantRatio = fp.divUp(fp.sub(bptTotalSupply, bptAmountIn), bptTotalSupply);\n    if (invariantRatio.lt(MIN_INVARIANT_RATIO)) {\n        throw new Error(\"MIN_BPT_IN_FOR_TOKEN_OUT\");\n    }\n    // Calculate by how much the token balance has to increase to cause `invariantRatio`\n    const balanceRatio = fp.powUp(invariantRatio, fp.divDown(fp.ONE, normalizedWeight));\n    // Because of rounding up, `balanceRatio` can be greater than one, so we use its complement\n    const amountOutWithoutFee = fp.mulDown(balance, fp.complement(balanceRatio));\n    // We can now compute how much excess balance is being withdrawn as a result of the virtual swaps,\n    // which result in swap fees\n    const taxablePercentage = fp.complement(normalizedWeight);\n    // Swap fees are typically charged on 'tokenIn', but there is no 'tokenIn' here, so we apply it\n    // to 'tokenOut' - this results in slightly larger price impact (fees are rounded up)\n    const taxableAmount = fp.mulUp(amountOutWithoutFee, taxablePercentage);\n    const nonTaxableAmount = fp.sub(amountOutWithoutFee, taxableAmount);\n    return fp.add(nonTaxableAmount, fp.mulDown(taxableAmount, fp.complement(swapFee)));\n};\nexports._calcTokenOutGivenExactBptIn = _calcTokenOutGivenExactBptIn;\nconst _calcTokensOutGivenExactBptIn = (balances, bptAmountIn, bptTotalSupply) => {\n    /*****************************************************************************************\n    // exactBptInForTokensOut                                                               //\n    // (formula per token)                                                                  //\n    // ao = amountOut                  /   bptIn   \\                                        //\n    // b = balance           ao = b * | ----------- |                                       //\n    // bptIn = bptAmountIn             \\    bpt    /                                        //\n    // bpt = bptTotalSupply                                                                 //\n    *****************************************************************************************/\n    // Token out, so we round down overall\n    // This means rounding down on both multiplication and division\n    const bptRatio = fp.divDown(bptAmountIn, bptTotalSupply);\n    const amountsOut = new Array(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        amountsOut[i] = fp.mulDown(balances[i], bptRatio);\n    }\n    return amountsOut;\n};\nexports._calcTokensOutGivenExactBptIn = _calcTokensOutGivenExactBptIn;\nconst _calcDueTokenProtocolSwapFeeAmount = (balance, normalizedWeight, previousInvariant, currentInvariant, protocolSwapFeePercentage) => {\n    /*********************************************************************************\n    /*  protocolSwapFeePercentage * balanceToken * ( 1 - (previousInvariant / currentInvariant) ^ (1 / weightToken))\n    *********************************************************************************/\n    if (currentInvariant.lte(previousInvariant)) {\n        // This shouldn't happen outside of rounding errors, but have this safeguard nonetheless to prevent the Pool\n        // from entering a locked state in which joins and exits revert while computing accumulated swap fees.\n        return fp.ZERO;\n    }\n    // We round down to prevent issues in the Pool's accounting, even if it means paying slightly less in protocol\n    // fees to the Vault.\n    // Fee percentage and balance multiplications round down, while the subtrahend (power) rounds up (as does the\n    // base). Because previousInvariant / currentInvariant <= 1, the exponent rounds down.\n    let base = fp.divUp(previousInvariant, currentInvariant);\n    const exponent = fp.divDown(fp.ONE, normalizedWeight);\n    // Because the exponent is larger than one, the base of the power function has a lower bound. We cap to this\n    // value to avoid numeric issues, which means in the extreme case (where the invariant growth is larger than\n    // 1 / min exponent) the Pool will pay less in protocol fees than it should.\n    base = base.gte(fp.MIN_POW_BASE_FREE_EXPONENT)\n        ? base\n        : fp.MIN_POW_BASE_FREE_EXPONENT;\n    const power = fp.powUp(base, exponent);\n    const tokenAccruedFees = fp.mulDown(balance, fp.complement(power));\n    return fp.mulDown(tokenAccruedFees, protocolSwapFeePercentage);\n};\nexports._calcDueTokenProtocolSwapFeeAmount = _calcDueTokenProtocolSwapFeeAmount;\n// Convenience method needed by the SOR package (adapted from _calcBptOutGivenExactTokensIn)\nconst _calcBptOutGivenExactTokenIn = (balance, normalizedWeight, amountIn, bptTotalSupply, swapFee) => {\n    // BPT out, so we round down overall\n    const tokenBalanceRatioWithoutFee = fp.divDown(fp.add(balance, amountIn), balance);\n    const weightedBalanceRatio = fp.mulDown(tokenBalanceRatioWithoutFee, normalizedWeight);\n    let invariantRatio = fp.ONE;\n    // Percentage of the amount supplied that will be swapped for other tokens in the pool\n    let tokenBalancePercentageExcess;\n    // Some tokens might have amounts supplied in excess of a 'balanced' join: these are identified if\n    // the token's balance ratio sans fee is larger than the weighted balance ratio, and swap fees charged\n    // on the amount to swap\n    if (weightedBalanceRatio.gte(tokenBalanceRatioWithoutFee)) {\n        tokenBalancePercentageExcess = fp.ZERO;\n    }\n    else {\n        tokenBalancePercentageExcess = fp.divUp(fp.sub(tokenBalanceRatioWithoutFee, weightedBalanceRatio), fp.sub(tokenBalanceRatioWithoutFee, fp.ONE));\n    }\n    const swapFeeExcess = fp.mulUp(swapFee, tokenBalancePercentageExcess);\n    const amountInAfterFee = fp.mulDown(amountIn, fp.complement(swapFeeExcess));\n    const tokenBalanceRatio = fp.add(fp.ONE, fp.divDown(amountInAfterFee, balance));\n    invariantRatio = fp.mulDown(invariantRatio, fp.powDown(tokenBalanceRatio, normalizedWeight));\n    return fp.mulDown(bptTotalSupply, fp.sub(invariantRatio, fp.ONE));\n};\nexports._calcBptOutGivenExactTokenIn = _calcBptOutGivenExactTokenIn;\n// Convenience method needed by the SOR package (adapted from _calcBptInGivenExactTokensOut)\nfunction _calcBptInGivenExactTokenOut(balance, normalizedWeight, amountOut, bptTotalSupply, swapFee) {\n    // BPT in, so we round up overall\n    const tokenBalanceRatioWithoutFee = fp.divUp(fp.sub(balance, amountOut), balance);\n    const weightedBalanceRatio = fp.mulUp(tokenBalanceRatioWithoutFee, normalizedWeight);\n    let invariantRatio = fp.ONE;\n    // Percentage of the amount supplied that will be swapped for other tokens in the pool\n    let tokenBalancePercentageExcess;\n    // For each ratioSansFee, compare with the total weighted ratio (weightedBalanceRatio) and\n    // decrease the fee from what goes above it\n    if (weightedBalanceRatio.lte(tokenBalanceRatioWithoutFee)) {\n        tokenBalancePercentageExcess = fp.ZERO;\n    }\n    else {\n        tokenBalancePercentageExcess = fp.divUp(fp.sub(weightedBalanceRatio, tokenBalanceRatioWithoutFee), fp.complement(tokenBalanceRatioWithoutFee));\n    }\n    const swapFeeExcess = fp.mulUp(swapFee, tokenBalancePercentageExcess);\n    const amountOutBeforeFee = fp.divUp(amountOut, fp.complement(swapFeeExcess));\n    const tokenBalanceRatio = fp.complement(fp.divUp(amountOutBeforeFee, balance));\n    invariantRatio = fp.mulDown(invariantRatio, fp.powDown(tokenBalanceRatio, normalizedWeight));\n    return fp.mulUp(bptTotalSupply, fp.complement(invariantRatio));\n}\nexports._calcBptInGivenExactTokenOut = _calcBptInGivenExactTokenOut;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_1 = require(\"../../subgraph/index\");\nconst big_number_1 = require(\"../../utils/big-number\");\nconst common_1 = require(\"../../utils/common\");\nconst base_1 = require(\"../base\");\nconst math = require(\"./math\");\nclass WeightedPool extends base_1.default {\n    // ---------------------- Constructor ----------------------\n    constructor(params) {\n        super(params);\n        this.MIN_TOKENS = 2;\n        this.MAX_TOKENS = 8;\n        // A minimum normalized weight imposes a maximum weight ratio\n        // We need this due to limitations in the implementation of the power function, as these ratios are often exponents\n        this.MIN_WEIGHT = big_number_1.bn(\"0.01\"); // 0.01e18\n        if (params.tokens.length < this.MIN_TOKENS) {\n            throw new Error(\"MIN_TOKENS\");\n        }\n        if (params.tokens.length > this.MAX_TOKENS) {\n            throw new Error(\"MAX_TOKENS\");\n        }\n        this._tokens = common_1.shallowCopyAll(params.tokens);\n        let normalizedSum = big_number_1.bn(0);\n        for (let i = 0; i < params.tokens.length; i++) {\n            if (big_number_1.bn(params.tokens[i].weight).lt(this.MIN_WEIGHT)) {\n                throw new Error(\"MIN_WEIGHT\");\n            }\n            normalizedSum = normalizedSum.plus(params.tokens[i].weight);\n        }\n        if (!normalizedSum.eq(1)) {\n            throw new Error(\"NORMALIZED_WEIGHT_INVARIANT\");\n        }\n    }\n    // ---------------------- Getters ----------------------\n    get tokens() {\n        // Shallow-copy to disallow direct changes\n        return common_1.shallowCopyAll(this._tokens);\n    }\n    // ---------------------- Subgraph initializer ----------------------\n    static async initFromRealPool(poolId, query = false, blockNumber, testnet) {\n        const pool = await index_1.getPool(poolId, blockNumber, testnet);\n        if (!pool) {\n            throw new Error(\"Could not fetch pool data\");\n        }\n        if (pool.poolType !== \"Weighted\") {\n            throw new Error(\"Pool must be weighted\");\n        }\n        const id = pool.id;\n        const address = pool.address;\n        const bptTotalSupply = pool.totalShares;\n        const swapFeePercentage = pool.swapFee;\n        const tokens = [];\n        for (const token of pool.tokens) {\n            tokens.push({\n                address: token.address,\n                symbol: token.symbol,\n                balance: token.balance,\n                decimals: token.decimals,\n                weight: token.weight,\n            });\n        }\n        return new WeightedPool({\n            id,\n            address,\n            tokens,\n            bptTotalSupply,\n            swapFeePercentage,\n            query,\n        });\n    }\n    // ---------------------- Misc ----------------------\n    getInvariant() {\n        const invariant = math._calculateInvariant(this._tokens.map((t) => this._upScale(t.weight, 18)), this._tokens.map((t) => this._upScale(t.balance, t.decimals)));\n        return invariant.toString();\n    }\n    // ---------------------- Swap actions ----------------------\n    swapGivenIn(tokenInSymbol, tokenOutSymbol, amountIn) {\n        const tokenIn = this._tokens.find((t) => t.symbol === tokenInSymbol);\n        const tokenOut = this._tokens.find((t) => t.symbol === tokenOutSymbol);\n        const scaledAmountOut = math._calcOutGivenIn(this._upScale(tokenIn.balance, tokenIn.decimals), this._upScale(tokenIn.weight, 18), this._upScale(tokenOut.balance, tokenOut.decimals), this._upScale(tokenOut.weight, 18), this._upScale(amountIn, tokenIn.decimals), this._upScale(this._swapFeePercentage, 18));\n        const amountOut = this._downScaleDown(scaledAmountOut, tokenOut.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n        }\n        return amountOut.toString();\n    }\n    swapGivenOut(tokenInSymbol, tokenOutSymbol, amountOut) {\n        const tokenIn = this._tokens.find((t) => t.symbol === tokenInSymbol);\n        const tokenOut = this._tokens.find((t) => t.symbol === tokenOutSymbol);\n        const scaledAmountIn = math._calcInGivenOut(this._upScale(tokenIn.balance, tokenIn.decimals), this._upScale(tokenIn.weight, 18), this._upScale(tokenOut.balance, tokenOut.decimals), this._upScale(tokenOut.weight, 18), this._upScale(amountOut, tokenOut.decimals), this._upScale(this._swapFeePercentage, 18));\n        const amountIn = this._downScaleUp(scaledAmountIn, tokenIn.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n        }\n        return amountIn.toString();\n    }\n    // ---------------------- LP actions ----------------------\n    joinExactTokensInForBptOut(amountsIn) {\n        if (Object.keys(amountsIn).length !== this._tokens.length) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledBptOut = math._calcBptOutGivenExactTokensIn(this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._tokens.map((t) => this._upScale(t.weight, 18)), this._tokens.map((t) => this._upScale(amountsIn[t.symbol], t.decimals)), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const bptOut = this._downScaleDown(scaledBptOut, 18);\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance)\n                    .plus(amountsIn[token.symbol])\n                    .toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).plus(bptOut).toString();\n        }\n        return bptOut.toString();\n    }\n    joinTokenInForExactBptOut(tokenInSymbol, bptOut) {\n        const tokenIn = this._tokens.find((t) => t.symbol === tokenInSymbol);\n        if (!tokenIn) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledAmountIn = math._calcTokenInGivenExactBptOut(this._upScale(tokenIn.balance, tokenIn.decimals), this._upScale(tokenIn.weight, 18), this._upScale(bptOut, 18), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const amountIn = this._downScaleUp(scaledAmountIn, tokenIn.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).plus(bptOut).toString();\n        }\n        return amountIn.toString();\n    }\n    exitExactBptInForTokenOut(tokenOutSymbol, bptIn) {\n        const tokenOut = this._tokens.find((t) => t.symbol === tokenOutSymbol);\n        if (!tokenOut) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledAmountOut = math._calcTokenOutGivenExactBptIn(this._upScale(tokenOut.balance, tokenOut.decimals), this._upScale(tokenOut.weight, 18), this._upScale(bptIn, 18), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const amountOut = this._downScaleDown(scaledAmountOut, tokenOut.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return amountOut.toString();\n    }\n    exitExactBptInForTokensOut(bptIn) {\n        // Exactly match the EVM version\n        if (big_number_1.bn(bptIn).gt(this._bptTotalSupply)) {\n            throw new Error(\"BPT in exceeds total supply\");\n        }\n        const scaledAmountsOut = math._calcTokensOutGivenExactBptIn(this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._upScale(bptIn, 18), this._upScale(this._bptTotalSupply, 18));\n        const amountsOut = scaledAmountsOut.map((amount, i) => this._downScaleDown(amount, this._tokens[i].decimals));\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance).minus(amountsOut[i]).toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return amountsOut.map((a) => a.toString());\n    }\n    exitBptInForExactTokensOut(amountsOut) {\n        if (Object.keys(amountsOut).length !== this._tokens.length) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledBptIn = math._calcBptInGivenExactTokensOut(this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._tokens.map((t) => this._upScale(t.weight, 18)), this._tokens.map((t) => this._upScale(amountsOut[t.symbol], t.decimals)), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const bptIn = this._downScaleUp(scaledBptIn, 18);\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance)\n                    .minus(amountsOut[token.symbol])\n                    .toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return bptIn.toString();\n    }\n}\nexports.default = WeightedPool;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeightedMath = exports.WeightedPool = exports.StableMath = exports.StablePool = void 0;\nconst stable_1 = require(\"./pools/stable\");\nexports.StablePool = stable_1.default;\nconst StableMath = require(\"./pools/stable/math\");\nexports.StableMath = StableMath;\nconst weighted_1 = require(\"./pools/weighted\");\nexports.WeightedPool = weighted_1.default;\nconst WeightedMath = require(\"./pools/weighted/math\");\nexports.WeightedMath = WeightedMath;\n","import { BigNumber } from '../../utils/bignumber';\nimport { bnum } from '../../utils/bignumber';\n// All functions came from https://www.wolframcloud.com/obj/fernando.martinel/Published/SOR_equations_published.nb\n\n/////////\n/// Swap functions\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _exactTokenInForTokenOut(amount, poolPairData): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Ai = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(Bo * (1 - (Bi / (Bi + Ai * (1 - f))) ** (wi / wo)));\n    // return Bo.times(\n    //     bnum(1).minus(\n    //         bnum(\n    //             Bi.div(\n    //                 Bi.plus(Ai.times(bnum(1).minus(f)))\n    //             ).toNumber() ** wi.div(wo).toNumber()\n    //         )\n    //     )\n    // )\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _tokenInForExactTokenOut(amount, poolPairData): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Ao = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum((Bi * (-1 + (Bo / (-Ao + Bo)) ** (wo / wi))) / (1 - f));\n    // return Bi.times(\n    //     bnum(-1).plus(\n    //         Bo.div(Bo.minus(Ao)).toNumber() **\n    //             wo.div(wi).toNumber()\n    //     )\n    // ).div(bnum(1).minus(f));\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _exactTokenInForBPTOut(amount, poolPairData): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bbpt = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const Ai = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(Bbpt * (-1 + (1 + (Ai * (1 - f * (1 - wi))) / Bi) ** wi));\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _tokenInForExactBPTOut(amount, poolPairData): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bbpt = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const Aobpt = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        ((-1 + (1 + Aobpt / Bbpt) ** (1 / wi)) * Bi) / (1 - f * (1 - wi))\n    );\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _BPTInForExactTokenOut(amount, poolPairData): BigNumber {\n    const Bbpt = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Aibpt = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        ((1 - (1 - Aibpt / Bbpt) ** (1 / wo)) * Bo) / (1 - f * (1 - wo))\n    );\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _exactBPTInForTokenOut(amount, poolPairData): BigNumber {\n    const Bbpt = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Ao = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(Bbpt * (1 - (1 - (Ao * (1 - f * (1 - wo))) / Bo) ** wo));\n}\n\n/////////\n/// SpotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Ai = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        -(\n            (Bi * wo) /\n            (Bo * (-1 + f) * (Bi / (Ai + Bi - Ai * f)) ** ((wi + wo) / wo) * wi)\n        )\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Ao = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        -(\n            (Bi * (Bo / (-Ao + Bo)) ** ((wi + wo) / wi) * wo) /\n            (Bo * (-1 + f) * wi)\n        )\n    );\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bbpt = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const Ai = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        (Bi * ((Ai + Bi + Ai * f * (-1 + wi)) / Bi) ** (1 - wi)) /\n            (Bbpt * (1 + f * (-1 + wi)) * wi)\n    );\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bbpt = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const Aobpt = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        (((Aobpt + Bbpt) / Bbpt) ** (1 / wi) * Bi) /\n            ((Aobpt + Bbpt) * (1 + f * (-1 + wi)) * wi)\n    );\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactBPTInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bbpt = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Aibpt = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        ((1 - Aibpt / Bbpt) ** ((-1 + wo) / wo) *\n            Bbpt *\n            (1 + f * (-1 + wo)) *\n            wo) /\n            Bo\n    );\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapBPTInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bbpt = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Ao = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        (Bbpt *\n            (1 + f * (-1 + wo)) *\n            wo *\n            (1 + (Ao * (-1 + f - f * wo)) / Bo) ** (-1 + wo)) /\n            Bo\n    );\n}\n\n/////////\n///  Derivatives of spotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Ai = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum((wi + wo) / (Bo * (Bi / (Ai + Bi - Ai * f)) ** (wi / wo) * wi));\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Ao = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        -(\n            (Bi * (Bo / (-Ao + Bo)) ** (wo / wi) * wo * (wi + wo)) /\n            ((Ao - Bo) ** 2 * (-1 + f) * wi ** 2)\n        )\n    );\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bbpt = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const Ai = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        -((-1 + wi) / (Bbpt * ((Ai + Bi + Ai * f * (-1 + wi)) / Bi) ** wi * wi))\n    );\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bbpt = poolPairData.balanceOut.toNumber();\n    const wi = poolPairData.weightIn.toNumber();\n    const Aobpt = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        -(\n            (((Aobpt + Bbpt) / Bbpt) ** (1 / wi) * Bi * (-1 + wi)) /\n            ((Aobpt + Bbpt) ** 2 * (1 + f * (-1 + wi)) * wi ** 2)\n        )\n    );\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bbpt = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Aibpt = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        -(\n            ((1 + f * (-1 + wo)) * (-1 + wo)) /\n            ((1 - Aibpt / Bbpt) ** (1 / wo) * Bo)\n        )\n    );\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const Bbpt = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const wo = poolPairData.weightOut.toNumber();\n    const Ao = amount.toNumber();\n    const f = poolPairData.swapFee.toNumber();\n    return bnum(\n        -(\n            (Bbpt *\n                (1 + f * (-1 + wo)) ** 2 *\n                (-1 + wo) *\n                wo *\n                (1 + (Ao * (-1 + f - f * wo)) / Bo) ** (-2 + wo)) /\n            Bo ** 2\n        )\n    );\n}\n","import { getAddress } from '@ethersproject/address';\nimport { bnum, scale, ZERO, ONE } from '../../utils/bignumber';\nimport { BigNumber } from '../../utils/bignumber';\nimport * as SDK from '@georgeroman/balancer-v2-pools';\nimport {\n    PoolBase,\n    PoolTypes,\n    SwapPairType,\n    PairTypes,\n    PoolPairBase,\n    SwapTypes,\n    SubgraphPoolBase,\n} from '../../types';\nimport {\n    _exactTokenInForTokenOut,\n    _exactTokenInForBPTOut,\n    _exactBPTInForTokenOut,\n    _tokenInForExactTokenOut,\n    _tokenInForExactBPTOut,\n    _BPTInForExactTokenOut,\n    _spotPriceAfterSwapExactTokenInForTokenOut,\n    _spotPriceAfterSwapExactTokenInForBPTOut,\n    _spotPriceAfterSwapExactBPTInForTokenOut,\n    _spotPriceAfterSwapTokenInForExactTokenOut,\n    _spotPriceAfterSwapTokenInForExactBPTOut,\n    _spotPriceAfterSwapBPTInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForBPTOut,\n    _derivativeSpotPriceAfterSwapExactBPTInForTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactBPTOut,\n    _derivativeSpotPriceAfterSwapBPTInForExactTokenOut,\n} from './weightedMath';\n\nexport interface WeightedPoolToken {\n    address: string;\n    balance: string;\n    decimals: string | number;\n    weight?: string;\n}\n\nexport interface WeightedPoolPairData extends PoolPairBase {\n    id: string;\n    address: string;\n    poolType: PoolTypes;\n    pairType: PairTypes;\n    tokenIn: string;\n    tokenOut: string;\n    balanceIn: BigNumber;\n    balanceOut: BigNumber;\n    weightIn: BigNumber; // Weights are only defined for weighted pools\n    weightOut: BigNumber; // Weights are only defined for weighted pools\n    swapFee: BigNumber;\n    decimalsIn: number;\n    decimalsOut: number;\n}\n\nexport class WeightedPool implements PoolBase {\n    poolType: PoolTypes = PoolTypes.Weighted;\n    swapPairType: SwapPairType;\n    id: string;\n    address: string;\n    swapFee: BigNumber;\n    totalShares: string;\n    tokens: WeightedPoolToken[];\n    totalWeight: BigNumber;\n    tokensList: string[];\n    MAX_IN_RATIO = bnum(0.3);\n    MAX_OUT_RATIO = bnum(0.3);\n\n    static fromPool(pool: SubgraphPoolBase): WeightedPool {\n        return new WeightedPool(\n            pool.id,\n            pool.address,\n            pool.swapFee,\n            pool.totalWeight,\n            pool.totalShares,\n            pool.tokens,\n            pool.tokensList\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        swapFee: string,\n        totalWeight: string,\n        totalShares: string,\n        tokens: WeightedPoolToken[],\n        tokensList: string[]\n    ) {\n        this.id = id;\n        this.address = address;\n        this.swapFee = bnum(swapFee);\n        this.totalShares = totalShares;\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n        this.totalWeight = bnum(totalWeight);\n    }\n\n    setTypeForSwap(type: SwapPairType) {\n        this.swapPairType = type;\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): WeightedPoolPairData {\n        let pairType: PairTypes;\n        let tI: WeightedPoolToken;\n        let tO: WeightedPoolToken;\n        let balanceIn: string;\n        let balanceOut: string;\n        let decimalsOut: string | number;\n        let decimalsIn: string | number;\n        let weightIn: BigNumber;\n        let weightOut: BigNumber;\n\n        // Check if tokenIn is the pool token itself (BPT)\n        if (tokenIn == this.address) {\n            pairType = PairTypes.BptToToken;\n            if (this.totalShares === undefined)\n                throw 'Pool missing totalShares field';\n            balanceIn = this.totalShares;\n            decimalsIn = '18'; // Not used but has to be defined\n            weightIn = ONE; // Not used but has to be defined\n        } else if (tokenOut == this.address) {\n            pairType = PairTypes.TokenToBpt;\n            if (this.totalShares === undefined)\n                throw 'Pool missing totalShares field';\n            balanceOut = this.totalShares;\n            decimalsOut = '18'; // Not used but has to be defined\n            weightOut = ONE; // Not used but has to be defined\n        } else {\n            pairType = PairTypes.TokenToToken;\n        }\n\n        if (pairType != PairTypes.BptToToken) {\n            const tokenIndexIn = this.tokens.findIndex(\n                (t) => getAddress(t.address) === getAddress(tokenIn)\n            );\n            if (tokenIndexIn < 0) throw 'Pool does not contain tokenIn';\n            tI = this.tokens[tokenIndexIn];\n            balanceIn = tI.balance;\n            decimalsIn = tI.decimals;\n            weightIn = bnum(tI.weight).div(this.totalWeight);\n        }\n        if (pairType != PairTypes.TokenToBpt) {\n            const tokenIndexOut = this.tokens.findIndex(\n                (t) => getAddress(t.address) === getAddress(tokenOut)\n            );\n            if (tokenIndexOut < 0) throw 'Pool does not contain tokenOut';\n            tO = this.tokens[tokenIndexOut];\n            balanceOut = tO.balance;\n            decimalsOut = tO.decimals;\n            weightOut = bnum(tO.weight).div(this.totalWeight);\n        }\n\n        const poolPairData: WeightedPoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            pairType: pairType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            balanceIn: bnum(balanceIn),\n            balanceOut: bnum(balanceOut),\n            weightIn: weightIn,\n            weightOut: weightOut,\n            swapFee: this.swapFee,\n        };\n\n        return poolPairData;\n    }\n\n    // Normalized liquidity is an abstract term that can be thought of the\n    // inverse of the slippage. It is proportional to the token balances in the\n    // pool but also depends on the shape of the invariant curve.\n    // As a standard, we define normalized liquidity in tokenOut\n    getNormalizedLiquidity(poolPairData: WeightedPoolPairData) {\n        if (poolPairData.pairType == PairTypes.TokenToToken) {\n            return poolPairData.balanceOut\n                .times(poolPairData.weightIn)\n                .div(poolPairData.weightIn.plus(poolPairData.weightOut));\n        } else if (poolPairData.pairType == PairTypes.TokenToBpt) {\n            return poolPairData.balanceOut; // Liquidity in tokenOut is totalShares\n        } else if (poolPairData.pairType == PairTypes.BptToToken) {\n            return poolPairData.balanceOut.div(\n                ONE.plus(poolPairData.weightOut)\n            ); // Liquidity in tokenOut is Bo/wo\n        }\n    }\n\n    getLimitAmountSwap(\n        poolPairData: PoolPairBase,\n        swapType: SwapTypes\n    ): BigNumber {\n        if (swapType === SwapTypes.SwapExactIn) {\n            return poolPairData.balanceIn.times(this.MAX_IN_RATIO);\n        } else {\n            return poolPairData.balanceOut.times(this.MAX_OUT_RATIO);\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (this.address == token) {\n            this.totalShares = newBalance.toString();\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => t.address === token);\n            T.balance = newBalance.toString();\n        }\n    }\n\n    // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n    // i.e. when using token with 2decimals 0.002 should be returned as 0\n    // Uses ROUND_DOWN mode (1)\n    _exactTokenInForTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _exactTokenInForTokenOut(amount, poolPairData).dp(\n            poolPairData.decimalsOut,\n            1\n        );\n    }\n\n    _exactTokenInForBPTOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _exactTokenInForBPTOut(amount, poolPairData);\n    }\n\n    _exactBPTInForTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _exactBPTInForTokenOut(amount, poolPairData);\n    }\n\n    // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n    // i.e. when using token with 2decimals 0.002 should be returned as 0\n    // Uses ROUND_UP mode (0)\n    _tokenInForExactTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _tokenInForExactTokenOut(amount, poolPairData).dp(\n            poolPairData.decimalsIn,\n            0\n        );\n    }\n\n    _tokenInForExactBPTOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _tokenInForExactBPTOut(amount, poolPairData);\n    }\n\n    _BPTInForExactTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _BPTInForExactTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapExactTokenInForTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapExactTokenInForBPTOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapExactTokenInForBPTOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapExactBPTInForTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapExactBPTInForTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapTokenInForExactTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapTokenInForExactBPTOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapTokenInForExactBPTOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapBPTInForExactTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapBPTInForExactTokenOut(amount, poolPairData);\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _evmoutGivenIn(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // poolPair balances are normalised so must be scaled before use\n            const amt = SDK.WeightedMath._calcOutGivenIn(\n                scale(poolPairData.balanceIn, poolPairData.decimalsIn),\n                scale(poolPairData.weightIn, 18),\n                scale(poolPairData.balanceOut, poolPairData.decimalsOut),\n                scale(poolPairData.weightOut, 18),\n                scale(amount, poolPairData.decimalsIn),\n                scale(poolPairData.swapFee, 18)\n            );\n            // return normalised amount\n            return scale(amt, -poolPairData.decimalsOut);\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _evmexactTokenInForBPTOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // balance: BigNumber, normalizedWeight: BigNumber, amountIn: BigNumber, bptTotalSupply: BigNumber, swapFee: BigNumber\n            const amt = SDK.WeightedMath._calcBptOutGivenExactTokenIn(\n                scale(poolPairData.balanceIn, poolPairData.decimalsIn),\n                scale(poolPairData.weightIn, 18),\n                scale(amount, poolPairData.decimalsIn),\n                scale(poolPairData.balanceOut, 18), // BPT is always 18 decimals\n                scale(poolPairData.swapFee, 18)\n            );\n            // return normalised amount\n            return scale(amt, -18); // BPT is always 18 decimals\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _evmexactBPTInForTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // poolPair balances are normalised so must be scaled before use\n            const amt = SDK.WeightedMath._calcTokenOutGivenExactBptIn(\n                scale(poolPairData.balanceOut, poolPairData.decimalsOut),\n                scale(poolPairData.weightOut, 18),\n                scale(amount, 18), // BPT is always 18 decimals\n                scale(poolPairData.balanceIn, 18), // BPT is always 18 decimals\n                scale(poolPairData.swapFee, 18)\n            );\n            // return normalised amount\n            return scale(amt, -poolPairData.decimalsOut);\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _evminGivenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // poolPair balances are normalised so must be scaled before use\n            const amt = SDK.WeightedMath._calcInGivenOut(\n                scale(poolPairData.balanceIn, poolPairData.decimalsIn),\n                scale(poolPairData.weightIn, 18),\n                scale(poolPairData.balanceOut, poolPairData.decimalsOut),\n                scale(poolPairData.weightOut, 18),\n                scale(amount, poolPairData.decimalsOut),\n                scale(poolPairData.swapFee, 18)\n            );\n\n            // return normalised amount\n            return scale(amt, -poolPairData.decimalsIn);\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _evmtokenInForExactBPTOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // poolPair balances are normalised so must be scaled before use\n            const amt = SDK.WeightedMath._calcTokenInGivenExactBptOut(\n                scale(poolPairData.balanceIn, poolPairData.decimalsIn),\n                scale(poolPairData.weightIn, 18),\n                scale(amount, 18),\n                scale(poolPairData.balanceOut, 18), // BPT is always 18 decimals\n                scale(poolPairData.swapFee, 18)\n            );\n\n            // return normalised amount\n            return scale(amt, -poolPairData.decimalsIn);\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _evmbptInForExactTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // poolPair balances are normalised so must be scaled before use\n            const amt = SDK.WeightedMath._calcBptInGivenExactTokenOut(\n                scale(poolPairData.balanceOut, poolPairData.decimalsOut),\n                scale(poolPairData.weightOut, 18),\n                scale(amount, poolPairData.decimalsOut),\n                scale(poolPairData.balanceIn, 18), // BPT is always 18 decimals\n                scale(poolPairData.swapFee, 18)\n            );\n\n            // return normalised amount\n            return scale(amt, -18); // BPT always 18 decimals\n        } catch (err) {\n            return ZERO;\n        }\n    }\n}\n","import { BigNumber } from '../../utils/bignumber';\nimport { bnum, ZERO, ONE } from '../../utils/bignumber';\n// All functions are adapted from the solidity ones to be found on:\n// https://github.com/balancer-labs/balancer-core-v2/blob/master/contracts/pools/stable/StableMath.sol\n\n// TODO: implement all up and down rounding variations\n\n/**********************************************************************************************\n    // invariant                                                                                 //\n    // D = invariant to compute                                                                  //\n    // A = amplifier                n * D^2 + A * n^n * S * (n^n * P / D^(n−1))                  //\n    // S = sum of balances         ____________________________________________                  //\n    // P = product of balances    (n+1) * D + ( A * n^n − 1)* (n^n * P / D^(n−1))                //\n    // n = number of tokens                                                                      //\n    **********************************************************************************************/\nexport function _invariant(\n    amp: BigNumber, // amp\n    balances: BigNumber[] // balances\n): BigNumber {\n    let sum = ZERO;\n    const totalCoins = balances.length;\n    for (let i = 0; i < totalCoins; i++) {\n        sum = sum.plus(balances[i]);\n    }\n    if (sum.isZero()) {\n        return ZERO;\n    }\n    let prevInv = ZERO;\n    let inv = sum;\n    const ampTimesNpowN = amp.times(totalCoins ** totalCoins); // A*n^n\n\n    for (let i = 0; i < 255; i++) {\n        let P_D = bnum(totalCoins).times(balances[0]);\n        for (let j = 1; j < totalCoins; j++) {\n            //P_D is rounded up\n            P_D = P_D.times(balances[j]).times(totalCoins).div(inv);\n        }\n        prevInv = inv;\n        //inv is rounded up\n        inv = bnum(totalCoins)\n            .times(inv)\n            .times(inv)\n            .plus(ampTimesNpowN.times(sum).times(P_D))\n            .div(\n                bnum(totalCoins + 1)\n                    .times(inv)\n                    .plus(ampTimesNpowN.minus(1).times(P_D))\n            );\n        // Equality with the precision of 1\n        if (inv.gt(prevInv)) {\n            if (inv.minus(prevInv).lt(bnum(10 ** -18))) {\n                break;\n            }\n        } else if (prevInv.minus(inv).lt(bnum(10 ** -18))) {\n            break;\n        }\n    }\n    //Result is rounded up\n    return inv;\n}\n\n// // This function has to be zero if the invariant D was calculated correctly\n// // It was only used for double checking that the invariant was correct\n// export function _invariantValueFunction(\n//     amp: BigNumber, // amp\n//     balances: BigNumber[], // balances\n//     D: BigNumber\n// ): BigNumber {\n//     let invariantValueFunction;\n//     let prod = ONE;\n//     let sum = ZERO;\n//     for (let i = 0; i < balances.length; i++) {\n//         prod = prod.times(balances[i]);\n//         sum = sum.plus(balances[i]);\n//     }\n//     let n = bnum(balances.length);\n\n//     // NOT! working based on Daniel's equation: https://www.notion.so/Analytical-for-2-tokens-1cd46debef6648dd81f2d75bae941fea\n//     // invariantValueFunction = amp.times(sum)\n//     //     .plus((ONE.div(n.pow(n)).minus(amp)).times(D))\n//     //     .minus((ONE.div(n.pow(n.times(2)).times(prod))).times(D.pow(n.plus(ONE))));\n//     invariantValueFunction = D.pow(n.plus(ONE))\n//         .div(n.pow(n).times(prod))\n//         .plus(D.times(amp.times(n.pow(n)).minus(ONE)))\n//         .minus(amp.times(n.pow(n)).times(sum));\n\n//     return invariantValueFunction;\n// }\n\n// Adapted from StableMath.sol, _outGivenIn()\n// * Added swap fee at very first line\n/**********************************************************************************************\n    // outGivenIn token x for y - polynomial equation to solve                                   //\n    // ay = amount out to calculate                                                              //\n    // by = balance token out                                                                    //\n    // y = by - ay                                                                               //\n    // D = invariant                               D                     D^(n+1)                 //\n    // A = amplifier               y^2 + ( S - ----------  - 1) * y -  ------------- = 0         //\n    // n = number of tokens                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but y                                                           //\n    // P = product of final balances but y                                                       //\n    **********************************************************************************************/\nexport function _exactTokenInForTokenOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    let tokenAmountIn = amount;\n    tokenAmountIn = tokenAmountIn.times(ONE.minus(swapFee));\n\n    //Invariant is rounded up\n    const inv = _invariant(amp, balances);\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = bnum(balances.length);\n    let n_pow_n = ONE;\n    let x = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        n_pow_n = n_pow_n.times(totalCoins);\n\n        if (i == tokenIndexIn) {\n            x = balances[i].plus(tokenAmountIn);\n        } else if (i != tokenIndexOut) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    //Calculate out balance\n    const y = _solveAnalyticalBalance(sum, inv, amp, n_pow_n, p);\n\n    //Result is rounded down\n    // return balances[tokenIndexOut] > y ? balances[tokenIndexOut].minus(y) : 0;\n    return balances[tokenIndexOut].minus(y);\n}\n\n// Adapted from StableMath.sol, _inGivenOut()\n// * Added swap fee at very last line\n/**********************************************************************************************\n    // inGivenOut token x for y - polynomial equation to solve                                   //\n    // ax = amount in to calculate                                                               //\n    // bx = balance token in                                                                     //\n    // x = bx + ax                                                                               //\n    // D = invariant                               D                     D^(n+1)                 //\n    // A = amplifier               x^2 + ( S - ----------  - 1) * x -  ------------- = 0         //\n    // n = number of tokens                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but x                                                           //\n    // P = product of final balances but x                                                       //\n    **********************************************************************************************/\nexport function _tokenInForExactTokenOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const tokenAmountOut = amount;\n    //Invariant is rounded up\n    const inv = _invariant(amp, balances);\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = bnum(balances.length);\n    let n_pow_n = ONE;\n    let x = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        n_pow_n = n_pow_n.times(totalCoins);\n\n        if (i == tokenIndexOut) {\n            x = balances[i].minus(tokenAmountOut);\n        } else if (i != tokenIndexIn) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    //Calculate in balance\n    const y = _solveAnalyticalBalance(sum, inv, amp, n_pow_n, p);\n\n    //Result is rounded up\n    return y.minus(balances[tokenIndexIn]).div(ONE.minus(swapFee));\n}\n\n//This function calculates the balance of a given token (tokenIndex)\n// given all the other balances and the invariant\nfunction _getTokenBalanceGivenInvariantAndAllOtherBalances(\n    amp: BigNumber,\n    balances: BigNumber[],\n    inv: BigNumber,\n    tokenIndex: number\n): BigNumber {\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = balances.length;\n    let nPowN = ONE;\n    let x = ZERO;\n    for (let i = 0; i < totalCoins; i++) {\n        nPowN = nPowN.times(totalCoins);\n        if (i != tokenIndex) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    // Calculate token balance\n    return _solveAnalyticalBalance(sum, inv, amp, nPowN, p);\n}\n\n//This function calcuates the analytical solution to find the balance required\nexport function _solveAnalyticalBalance(\n    sum: BigNumber,\n    inv: BigNumber,\n    amp: BigNumber,\n    n_pow_n: BigNumber,\n    p: BigNumber\n): BigNumber {\n    //Round up p\n    p = p.times(inv).div(amp.times(n_pow_n).times(n_pow_n));\n    //Round down b\n    const b = sum.plus(inv.div(amp.times(n_pow_n)));\n    //Round up c\n    // let c = inv >= b\n    //     ? inv.minus(b).plus(Math.sqrtUp(inv.minus(b).times(inv.minus(b)).plus(p.times(4))))\n    //     : Math.sqrtUp(b.minus(inv).times(b.minus(inv)).plus(p.times(4))).minus(b.minus(inv));\n    let c;\n    if (inv.gte(b)) {\n        c = inv\n            .minus(b)\n            .plus(inv.minus(b).times(inv.minus(b)).plus(p.times(4)).sqrt());\n    } else {\n        c = b\n            .minus(inv)\n            .times(b.minus(inv))\n            .plus(p.times(4))\n            .sqrt()\n            .minus(b.minus(inv));\n    }\n    //Round up y\n    return c.div(2);\n}\n\n/* \nAdapted from StableMath.sol _exactTokensInForBPTOut() \n    * renamed it to _exactTokenInForBPTOut (i.e. just one token in)\n*/\nexport function _exactTokenInForBPTOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, balanceOut, tokenIndexIn, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const tokenAmountIn = amount;\n    // Get current invariant\n    const currentInvariant = _invariant(amp, balances);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weights of each token relative to the sum of all balances\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // Calculate the weighted balance ratio without considering fees\n    const currentWeight = balances[tokenIndexIn].div(sumBalances);\n    const tokenBalanceRatioWithoutFee = balances[tokenIndexIn]\n        .plus(tokenAmountIn)\n        .div(balances[tokenIndexIn]);\n    const weightedBalanceRatio = ONE.plus(\n        tokenBalanceRatioWithoutFee.minus(ONE).times(currentWeight)\n    );\n\n    // calculate new amountIn taking into account the fee on the % excess\n    // Percentage of the amount supplied that will be implicitly swapped for other tokens in the pool\n    const tokenBalancePercentageExcess = tokenBalanceRatioWithoutFee\n        .minus(weightedBalanceRatio)\n        .div(tokenBalanceRatioWithoutFee.minus(ONE));\n\n    const amountInAfterFee = tokenAmountIn.times(\n        ONE.minus(swapFee.times(tokenBalancePercentageExcess))\n    );\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(amountInAfterFee);\n\n    // get new invariant taking into account swap fees\n    const newInvariant = _invariant(amp, balances);\n\n    return balanceOut.times(newInvariant.div(currentInvariant).minus(ONE));\n}\n\n/* \nFlow of calculations:\namountBPTOut -> newInvariant -> (amountInProportional, amountInAfterFee) ->\namountInPercentageExcess -> amountIn\n*/\nexport function _tokenInForExactBPTOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, balanceOut, tokenIndexIn, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const bptAmountOut = amount;\n\n    /**********************************************************************************************\n    // TODO description                            //\n    **********************************************************************************************/\n\n    // Get current invariant\n    const currentInvariant = _invariant(amp, balances);\n    // Calculate new invariant\n    const newInvariant = balanceOut\n        .plus(bptAmountOut)\n        .div(balanceOut)\n        .times(currentInvariant);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weight of token\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // get amountInAfterFee\n    const newBalanceTokenIndex =\n        _getTokenBalanceGivenInvariantAndAllOtherBalances(\n            amp,\n            balances,\n            newInvariant,\n            tokenIndexIn\n        );\n    const amountInAfterFee = newBalanceTokenIndex.minus(balances[tokenIndexIn]);\n\n    // Get tokenBalancePercentageExcess\n    const currentWeight = balances[tokenIndexIn].div(sumBalances);\n    const tokenBalancePercentageExcess = ONE.minus(currentWeight);\n\n    // return amountIn\n    return amountInAfterFee.div(\n        ONE.minus(tokenBalancePercentageExcess.times(swapFee))\n    );\n}\n\n/* \nAdapted from StableMath.sol _BPTInForExactTokensOut() to reduce it to \n_BPTInForExactTokenOut (i.e. just one token out)\n*/\nexport function _BPTInForExactTokenOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, balanceIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const tokenAmountOut = amount;\n\n    // Get current invariant\n    const currentInvariant = _invariant(amp, balances);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weights of each token relative to the sum of all balances\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // Calculate the weighted balance ratio without considering fees\n    const currentWeight = balances[tokenIndexOut].div(sumBalances);\n    const tokenBalanceRatioWithoutFee = balances[tokenIndexOut]\n        .minus(tokenAmountOut)\n        .div(balances[tokenIndexOut]);\n    const weightedBalanceRatio = ONE.minus(\n        ONE.minus(tokenBalanceRatioWithoutFee).times(currentWeight)\n    );\n\n    // calculate new amounts in taking into account the fee on the % excess\n    const tokenBalancePercentageExcess = weightedBalanceRatio\n        .minus(tokenBalanceRatioWithoutFee)\n        .div(ONE.minus(tokenBalanceRatioWithoutFee));\n\n    const amountOutBeforeFee = tokenAmountOut.div(\n        ONE.minus(swapFee.times(tokenBalancePercentageExcess))\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(amountOutBeforeFee);\n\n    // get new invariant taking into account swap fees\n    const newInvariant = _invariant(amp, balances);\n\n    // return amountBPTIn\n    return balanceIn.times(ONE.minus(newInvariant.div(currentInvariant)));\n}\n\n/* \nFlow of calculations:\namountBPTin -> newInvariant -> (amountOutProportional, amountOutBeforeFee) ->\namountOutPercentageExcess -> amountOut\n*/\nexport function _exactBPTInForTokenOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, balanceIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const bptAmountIn = amount;\n    /**********************************************************************************************\n    // TODO description                            //\n    **********************************************************************************************/\n\n    // Get current invariant\n    const currentInvariant = _invariant(amp, balances);\n    // Calculate new invariant\n    const newInvariant = balanceIn\n        .minus(bptAmountIn)\n        .div(balanceIn)\n        .times(currentInvariant);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weight of token\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // get amountOutBeforeFee\n    const newBalanceTokenIndex =\n        _getTokenBalanceGivenInvariantAndAllOtherBalances(\n            amp,\n            balances,\n            newInvariant,\n            tokenIndexOut\n        );\n    const amountOutBeforeFee =\n        balances[tokenIndexOut].minus(newBalanceTokenIndex);\n\n    // Calculate tokenBalancePercentageExcess\n    const currentWeight = balances[tokenIndexOut].div(sumBalances);\n    const tokenBalancePercentageExcess = ONE.minus(currentWeight);\n\n    // return amountOut\n    return amountOutBeforeFee.times(\n        ONE.minus(tokenBalancePercentageExcess.times(swapFee))\n    );\n}\n\n//////////////////////\n////  These functions have been added exclusively for the SORv2\n//////////////////////\n\nexport function _poolDerivatives(\n    amp,\n    balances,\n    tokenIndexIn,\n    tokenIndexOut,\n    is_first_derivative,\n    wrt_out\n): BigNumber {\n    const totalCoins = balances.length;\n    const D = _invariant(amp, balances);\n    let S = ZERO;\n    for (let i = 0; i < totalCoins; i++) {\n        if (i != tokenIndexIn && i != tokenIndexOut) {\n            S = S.plus(balances[i]);\n        }\n    }\n    const x = balances[tokenIndexIn];\n    const y = balances[tokenIndexOut];\n    const a = amp.times(totalCoins ** totalCoins); // = ampTimesNpowN\n    const b = S.minus(D).times(a).plus(D);\n    const twoaxy = bnum(2).times(a).times(x).times(y);\n    const partial_x = twoaxy.plus(a.times(y).times(y)).plus(b.times(y));\n    const partial_y = twoaxy.plus(a.times(x).times(x)).plus(b.times(x));\n    let ans;\n    if (is_first_derivative) {\n        ans = partial_x.div(partial_y);\n    } else {\n        const partial_xx = bnum(2).times(a).times(y);\n        const partial_yy = bnum(2).times(a).times(x);\n        const partial_xy = partial_xx.plus(partial_yy).plus(b);\n        let numerator;\n        numerator = bnum(2)\n            .times(partial_x)\n            .times(partial_y)\n            .times(partial_xy)\n            .minus(partial_xx.times(partial_y.pow(2)))\n            .minus(partial_yy.times(partial_x.pow(2)));\n        const denominator = partial_x.pow(2).times(partial_y);\n        ans = numerator.div(denominator);\n        if (wrt_out) {\n            ans = ans.times(partial_y).div(partial_x);\n        }\n    }\n    return ans;\n}\n\nexport function _poolDerivativesBPT(\n    amp,\n    balances,\n    bptSupply,\n    tokenIndexIn,\n    is_first_derivative,\n    is_BPT_out,\n    wrt_out\n): BigNumber {\n    const totalCoins = balances.length;\n    const D = _invariant(amp, balances);\n    let S = ZERO;\n    let D_P = D.div(totalCoins);\n    for (let i = 0; i < totalCoins; i++) {\n        if (i != tokenIndexIn) {\n            S = S.plus(balances[i]);\n            D_P = D_P.times(D).div(totalCoins * balances[i]);\n        }\n    }\n    const x = balances[tokenIndexIn];\n    const alpha = amp.times(totalCoins ** totalCoins); // = ampTimesNpowN\n    const beta = alpha.times(S);\n    const gamma = ONE.minus(alpha);\n    const partial_x = bnum(2)\n        .times(alpha)\n        .times(x)\n        .plus(beta)\n        .plus(gamma.times(D));\n    const minus_partial_D = D_P.times(totalCoins + 1).minus(gamma.times(x));\n    const partial_D = ZERO.minus(minus_partial_D);\n    let ans;\n    if (is_first_derivative) {\n        ans = partial_x.div(minus_partial_D).times(bptSupply).div(D);\n    } else {\n        const partial_xx = bnum(2).times(alpha);\n        const partial_xD = gamma;\n        const n_times_nplusone = totalCoins * (totalCoins + 1);\n        const partial_DD = ZERO.minus(D_P.times(n_times_nplusone).div(D));\n        if (is_BPT_out) {\n            const term1 = partial_xx.times(partial_D).div(partial_x.pow(2));\n            const term2 = bnum(2).times(partial_xD).div(partial_x);\n            const term3 = partial_DD.div(partial_D);\n            ans = term1.minus(term2).plus(term3).times(D).div(bptSupply);\n            if (wrt_out) {\n                const D_prime = ZERO.minus(partial_x.div(partial_D));\n                ans = ans.div(D_prime).times(D).div(bptSupply);\n            }\n        } else {\n            ans = bnum(2)\n                .times(partial_xD)\n                .div(partial_D)\n                .minus(partial_DD.times(partial_x).div(partial_D.pow(2)))\n                .minus(partial_xx.div(partial_x));\n            if (wrt_out) {\n                ans = ans\n                    .times(partial_x)\n                    .div(minus_partial_D)\n                    .times(bptSupply)\n                    .div(D);\n            }\n        }\n    }\n    return ans;\n}\n\n/////////\n/// SpotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(ONE.minus(swapFee))\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _exactTokenInForTokenOut(amount, poolPairData)\n    );\n    let ans = _poolDerivatives(\n        amp,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        true,\n        false\n    );\n    ans = ONE.div(ans.times(ONE.minus(swapFee)));\n    return ans;\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const _in = _tokenInForExactTokenOut(amount, poolPairData).times(\n        ONE.minus(swapFee)\n    );\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(amount);\n    let ans = _poolDerivatives(\n        amp,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        true,\n        true\n    );\n    ans = ONE.div(ans.times(ONE.minus(swapFee)));\n    return ans;\n}\n\nfunction _feeFactor(balances, tokenIndex, swapFee): BigNumber {\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n    const currentWeight = balances[tokenIndex].div(sumBalances);\n    const tokenBalancePercentageExcess = ONE.minus(currentWeight);\n    return ONE.minus(tokenBalancePercentageExcess.times(swapFee));\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceOut, tokenIndexIn, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(feeFactor)\n    );\n    balanceOut = balanceOut.plus(_exactTokenInForBPTOut(amount, poolPairData));\n    let ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceOut,\n        tokenIndexIn,\n        true,\n        true,\n        false\n    );\n    ans = ONE.div(ans.times(feeFactor));\n    return ans;\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceOut, tokenIndexIn, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const _in = _tokenInForExactBPTOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in.times(feeFactor));\n    balanceOut = balanceOut.plus(amount);\n    let ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceOut,\n        tokenIndexIn,\n        true,\n        true,\n        true\n    );\n    ans = ONE.div(ans.times(feeFactor));\n    return ans;\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactBPTInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceIn, tokenIndexOut, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const _out = _exactBPTInForTokenOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _out.div(feeFactor)\n    );\n    balanceIn = balanceIn.minus(amount);\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceIn,\n        tokenIndexOut,\n        true,\n        false,\n        false\n    ).div(feeFactor);\n    return ans;\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapBPTInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceIn, tokenIndexOut, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        amount.div(feeFactor)\n    );\n    balanceIn = balanceIn.minus(_BPTInForExactTokenOut(amount, poolPairData));\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceIn,\n        tokenIndexOut,\n        true,\n        false,\n        true\n    ).div(feeFactor);\n    return ans;\n}\n\n/////////\n///  Derivatives of spotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(ONE.minus(swapFee))\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _exactTokenInForTokenOut(amount, poolPairData)\n    );\n    return _poolDerivatives(\n        amp,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        false,\n        false\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const _in = _tokenInForExactTokenOut(amount, poolPairData).times(\n        ONE.minus(swapFee)\n    );\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(amount);\n    const feeFactor = ONE.minus(swapFee);\n    return _poolDerivatives(\n        amp,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        false,\n        true\n    ).div(feeFactor);\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceOut, tokenIndexIn, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(feeFactor)\n    );\n    balanceOut = balanceOut.plus(_exactTokenInForBPTOut(amount, poolPairData));\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceOut,\n        tokenIndexIn,\n        false,\n        true,\n        false\n    );\n    return ans;\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceOut, tokenIndexIn, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const _in = _tokenInForExactBPTOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in.times(feeFactor));\n    balanceOut = balanceOut.plus(amount);\n    return _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceOut,\n        tokenIndexIn,\n        false,\n        true,\n        true\n    ).div(feeFactor);\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceIn, tokenIndexOut, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const _out = _exactBPTInForTokenOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _out.div(feeFactor)\n    );\n    balanceIn = balanceIn.minus(amount);\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceIn,\n        tokenIndexOut,\n        false,\n        false,\n        false\n    );\n    return ans.div(feeFactor);\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceIn, tokenIndexOut, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const _in = _BPTInForExactTokenOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        amount.div(feeFactor)\n    );\n    balanceIn = balanceIn.minus(_in);\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceIn,\n        tokenIndexOut,\n        false,\n        false,\n        true\n    );\n    return ans.div(feeFactor.pow(2));\n}\n","import { BigNumber } from '../../utils/bignumber';\nimport {\n    PoolBase,\n    PoolTypes,\n    SwapPairType,\n    PairTypes,\n    PoolPairBase,\n    SwapTypes,\n    SubgraphPoolBase,\n} from '../../types';\nimport { getAddress } from '@ethersproject/address';\nimport { bnum, scale, ZERO } from '../../utils/bignumber';\nimport * as SDK from '@georgeroman/balancer-v2-pools';\nimport {\n    _invariant,\n    _exactTokenInForTokenOut,\n    _exactTokenInForBPTOut,\n    _exactBPTInForTokenOut,\n    _tokenInForExactTokenOut,\n    _tokenInForExactBPTOut,\n    _BPTInForExactTokenOut,\n    _spotPriceAfterSwapExactTokenInForTokenOut,\n    _spotPriceAfterSwapExactTokenInForBPTOut,\n    _spotPriceAfterSwapExactBPTInForTokenOut,\n    _spotPriceAfterSwapTokenInForExactTokenOut,\n    _spotPriceAfterSwapTokenInForExactBPTOut,\n    _spotPriceAfterSwapBPTInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForBPTOut,\n    _derivativeSpotPriceAfterSwapExactBPTInForTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactBPTOut,\n    _derivativeSpotPriceAfterSwapBPTInForExactTokenOut,\n} from './stableMath';\n\nexport interface StablePoolToken {\n    address: string;\n    balance: string;\n    decimals: string | number;\n}\n\nexport interface StablePoolPairData extends PoolPairBase {\n    id: string;\n    address: string;\n    poolType: PoolTypes;\n    pairType: PairTypes;\n    tokenIn: string;\n    tokenOut: string;\n    balanceIn: BigNumber;\n    balanceOut: BigNumber;\n    swapFee: BigNumber;\n    swapFeeScaled: BigNumber;\n    decimalsIn: number;\n    decimalsOut: number;\n    allBalances: BigNumber[]; // Only for stable pools\n    allBalancesScaled: BigNumber[]; // Only for stable pools - EVM Maths uses everything in 1e18 upscaled format and this avoids repeated scaling\n    invariant: BigNumber; // Only for stable pools\n    amp: BigNumber; // Only for stable pools\n    tokenIndexIn: number; // Only for stable pools\n    tokenIndexOut: number; // Only for stable pools\n}\n\nexport class StablePool implements PoolBase {\n    poolType: PoolTypes = PoolTypes.Stable;\n    swapPairType: SwapPairType;\n    id: string;\n    address: string;\n    amp: BigNumber;\n    swapFee: BigNumber;\n    swapFeeScaled: BigNumber; // EVM Maths uses everything in 1e18 upscaled format and this avoids repeated scaling\n    totalShares: string;\n    tokens: StablePoolToken[];\n    tokensList: string[];\n    AMP_PRECISION = bnum(1000);\n    MAX_IN_RATIO = bnum(0.3);\n    MAX_OUT_RATIO = bnum(0.3);\n    ampAdjusted: BigNumber;\n\n    static fromPool(pool: SubgraphPoolBase): StablePool {\n        return new StablePool(\n            pool.id,\n            pool.address,\n            pool.amp,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens,\n            pool.tokensList\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        amp: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: StablePoolToken[],\n        tokensList: string[]\n    ) {\n        this.id = id;\n        this.address = address;\n        this.amp = bnum(amp);\n        this.swapFee = bnum(swapFee);\n        this.swapFeeScaled = scale(this.swapFee, 18);\n        this.totalShares = totalShares;\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n        this.ampAdjusted = this.amp.times(this.AMP_PRECISION);\n    }\n\n    setTypeForSwap(type: SwapPairType): void {\n        this.swapPairType = type;\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): StablePoolPairData {\n        let pairType: PairTypes;\n        let tI: StablePoolToken;\n        let tO: StablePoolToken;\n        let balanceIn: string;\n        let balanceOut: string;\n        let decimalsOut: string | number;\n        let decimalsIn: string | number;\n        let tokenIndexIn: number;\n        let tokenIndexOut: number;\n\n        // Check if tokenIn is the pool token itself (BPT)\n        if (tokenIn === this.address) {\n            pairType = PairTypes.BptToToken;\n            balanceIn = this.totalShares;\n            decimalsIn = '18'; // Not used but has to be defined\n        } else if (tokenOut === this.address) {\n            pairType = PairTypes.TokenToBpt;\n            balanceOut = this.totalShares;\n            decimalsOut = '18'; // Not used but has to be defined\n        } else {\n            pairType = PairTypes.TokenToToken;\n        }\n\n        if (pairType !== PairTypes.BptToToken) {\n            tokenIndexIn = this.tokens.findIndex(\n                (t) => getAddress(t.address) === getAddress(tokenIn)\n            );\n            if (tokenIndexIn < 0) throw 'Pool does not contain tokenIn';\n            tI = this.tokens[tokenIndexIn];\n            balanceIn = tI.balance;\n            decimalsIn = tI.decimals;\n        }\n        if (pairType !== PairTypes.TokenToBpt) {\n            tokenIndexOut = this.tokens.findIndex(\n                (t) => getAddress(t.address) === getAddress(tokenOut)\n            );\n            if (tokenIndexOut < 0) throw 'Pool does not contain tokenOut';\n            tO = this.tokens[tokenIndexOut];\n            balanceOut = tO.balance;\n            decimalsOut = tO.decimals;\n        }\n\n        // Get all token balances\n        const allBalances: BigNumber[] = [];\n        const allBalancesScaled: BigNumber[] = [];\n        for (let i = 0; i < this.tokens.length; i++) {\n            const balanceBn = bnum(this.tokens[i].balance);\n            allBalances.push(balanceBn);\n            allBalancesScaled.push(scale(balanceBn, 18));\n        }\n\n        const inv = _invariant(this.amp, allBalances);\n\n        const poolPairData: StablePoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            pairType: pairType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            balanceIn: bnum(balanceIn),\n            balanceOut: bnum(balanceOut),\n            invariant: inv,\n            swapFee: this.swapFee,\n            swapFeeScaled: this.swapFeeScaled,\n            allBalances,\n            allBalancesScaled,\n            amp: this.amp,\n            tokenIndexIn: tokenIndexIn,\n            tokenIndexOut: tokenIndexOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n        };\n\n        return poolPairData;\n    }\n\n    getNormalizedLiquidity(poolPairData: StablePoolPairData): BigNumber {\n        // This is an approximation as the actual normalized liquidity is a lot more complicated to calculate\n        return poolPairData.balanceOut.times(poolPairData.amp);\n    }\n\n    getLimitAmountSwap(\n        poolPairData: PoolPairBase,\n        swapType: SwapTypes\n    ): BigNumber {\n        // We multiply ratios by 10**-18 because we are in normalized space\n        // so 0.5 should be 0.5 and not 500000000000000000\n        // TODO: update bmath to use everything normalized\n        if (swapType === SwapTypes.SwapExactIn) {\n            return poolPairData.balanceIn.times(this.MAX_IN_RATIO);\n        } else {\n            return poolPairData.balanceOut.times(this.MAX_OUT_RATIO);\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (this.address == token) {\n            this.totalShares = newBalance.toString();\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => t.address === token);\n            T.balance = newBalance.toString();\n        }\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n        // i.e. when using token with 2decimals 0.002 should be returned as 0\n        // Uses ROUND_DOWN mode (1)\n        return _exactTokenInForTokenOut(amount, poolPairData).dp(\n            poolPairData.decimalsOut,\n            1\n        );\n    }\n\n    _exactTokenInForBPTOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _exactTokenInForBPTOut(amount, poolPairData);\n    }\n\n    _exactBPTInForTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _exactBPTInForTokenOut(amount, poolPairData);\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n        // i.e. when using token with 2decimals 0.002 should be returned as 0\n        // Uses ROUND_UP mode (0)\n        return _tokenInForExactTokenOut(amount, poolPairData).dp(\n            poolPairData.decimalsIn,\n            0\n        );\n    }\n\n    _tokenInForExactBPTOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _tokenInForExactBPTOut(amount, poolPairData);\n    }\n\n    _BPTInForExactTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _BPTInForExactTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapExactTokenInForTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapExactTokenInForBPTOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapExactTokenInForBPTOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapExactBPTInForTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapExactBPTInForTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapTokenInForExactTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapTokenInForExactBPTOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapTokenInForExactBPTOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapBPTInForExactTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapBPTInForExactTokenOut(amount, poolPairData);\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _evmoutGivenIn(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = scale(amount, 18);\n\n            const amt = SDK.StableMath._calcOutGivenIn(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                poolPairData.tokenIndexIn,\n                poolPairData.tokenIndexOut,\n                amtScaled,\n                poolPairData.swapFeeScaled\n            );\n\n            // return normalised amount\n            return scale(amt, -18);\n        } catch (err) {\n            console.error(`_evmoutGivenIn: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _evminGivenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = scale(amount, 18);\n\n            const amt = SDK.StableMath._calcInGivenOut(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                poolPairData.tokenIndexIn,\n                poolPairData.tokenIndexOut,\n                amtScaled,\n                poolPairData.swapFeeScaled\n            );\n\n            // return normalised amount\n            return scale(amt, -18);\n        } catch (err) {\n            console.error(`_evminGivenOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _evmexactTokenInForBPTOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const bptTotalSupplyScaled = scale(poolPairData.balanceOut, 18);\n            // amountsIn must have same length as balances. Only need value for token in.\n            const amountsIn = poolPairData.allBalances.map((bal, i) => {\n                if (i === poolPairData.tokenIndexIn) return scale(amount, 18);\n                else return ZERO;\n            });\n\n            const amt = SDK.StableMath._calcBptOutGivenExactTokensIn(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                amountsIn,\n                bptTotalSupplyScaled,\n                poolPairData.swapFeeScaled\n            );\n\n            // return normalised amount\n            return scale(amt, -18);\n        } catch (err) {\n            console.error(`_evmexactTokenInForBPTOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _evmexactBPTInForTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const bptAmountInScaled = scale(amount, 18);\n            const bptTotalSupplyScaled = scale(poolPairData.balanceIn, 18);\n\n            const amt = SDK.StableMath._calcTokenOutGivenExactBptIn(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                poolPairData.tokenIndexOut,\n                bptAmountInScaled,\n                bptTotalSupplyScaled,\n                poolPairData.swapFeeScaled\n            );\n\n            // return normalised amount\n            return scale(amt, -18);\n        } catch (err) {\n            console.error(`_evmexactBPTInForTokenOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _evmtokenInForExactBPTOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const bptAmountOutScaled = scale(amount, 18);\n            const bptTotalSupplyScaled = scale(poolPairData.balanceOut, 18);\n\n            const amt = SDK.StableMath._calcTokenInGivenExactBptOut(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                poolPairData.tokenIndexIn,\n                bptAmountOutScaled,\n                bptTotalSupplyScaled,\n                poolPairData.swapFeeScaled\n            );\n\n            // return normalised amount\n            return scale(amt, -18);\n        } catch (err) {\n            console.error(`_evmtokenInForExactBPTOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _evmbptInForExactTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            // amountsOut must have same length as balances. Only need value for token out.\n            const amountsOut = poolPairData.allBalances.map((bal, i) => {\n                if (i === poolPairData.tokenIndexOut) return scale(amount, 18);\n                else return ZERO;\n            });\n            const bptTotalSupplyScaled = scale(poolPairData.balanceIn, 18);\n\n            const amt = SDK.StableMath._calcBptInGivenExactTokensOut(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                amountsOut,\n                bptTotalSupplyScaled,\n                poolPairData.swapFeeScaled\n            );\n            // return normalised amount\n            return scale(amt, -18);\n        } catch (err) {\n            console.error(`_evmbptInForExactTokenOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n}\n","import { BigNumber } from '../../utils/bignumber';\nimport { ElementPoolPairData } from './elementPool';\nimport { bnum } from '../../utils/bignumber';\n\n// calc_out_given_in (swap)\nexport function _exactTokenInForTokenOut(\n    amount: BigNumber,\n    poolPairData: ElementPoolPairData\n): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const f = poolPairData.swapFee.toNumber();\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ai = amount.toNumber();\n    return bnum(\n        Bo -\n            (Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                (1 / (1 - t)) -\n            Math.abs(\n                Ai -\n                    Bo +\n                    (Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                        (1 / (1 - t))\n            ) *\n                f\n    );\n}\n\n// calc_in_given_out (swap)\nexport function _tokenInForExactTokenOut(\n    amount: BigNumber,\n    poolPairData: ElementPoolPairData\n): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const f = poolPairData.swapFee.toNumber();\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ao = amount.toNumber();\n    return bnum(\n        -Bi +\n            (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                (1 / (1 - t)) +\n            Math.abs(\n                -Ao -\n                    Bi +\n                    (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                        (1 / (1 - t))\n            ) *\n                f\n    );\n}\n\n/////////\n/// SpotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForTokenOut(\n    amount: BigNumber,\n    poolPairData: ElementPoolPairData\n): BigNumber {\n    const f = poolPairData.swapFee.toNumber();\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ai = amount.toNumber();\n    return bnum(\n        1 /\n            ((Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                (-1 + 1 / (1 - t)) /\n                (Ai + Bi) ** t -\n                Math.abs(\n                    1 -\n                        (Bi ** (1 - t) -\n                            (Ai + Bi) ** (1 - t) +\n                            Bo ** (1 - t)) **\n                            (-1 + 1 / (1 - t)) /\n                            (Ai + Bi) ** t\n                ) *\n                    f)\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactTokenOut(\n    amount: BigNumber,\n    poolPairData: ElementPoolPairData\n): BigNumber {\n    const f = poolPairData.swapFee.toNumber();\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ao = amount.toNumber();\n    return bnum(\n        (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n            (-1 + 1 / (1 - t)) /\n            (-Ao + Bo) ** t +\n            Math.abs(\n                -1 +\n                    (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                        (-1 + 1 / (1 - t)) /\n                        (-Ao + Bo) ** t\n            ) *\n                f\n    );\n}\n\n/////////\n///  Derivatives of spotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n    amount: BigNumber,\n    poolPairData: ElementPoolPairData\n): BigNumber {\n    const f = poolPairData.swapFee.toNumber();\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ai = amount.toNumber();\n    return bnum(\n        -(\n            (-(\n                ((Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                    (-2 + 1 / (1 - t)) *\n                    (-1 + 1 / (1 - t)) *\n                    (1 - t)) /\n                (Ai + Bi) ** (2 * t)\n            ) -\n                (Ai + Bi) ** (-1 - t) *\n                    (Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                        (-1 + 1 / (1 - t)) *\n                    t -\n                f *\n                    Math.abs(\n                        ((Bi ** (1 - t) -\n                            (Ai + Bi) ** (1 - t) +\n                            Bo ** (1 - t)) **\n                            (-2 + 1 / (1 - t)) *\n                            (-1 + 1 / (1 - t)) *\n                            (1 - t)) /\n                            (Ai + Bi) ** (2 * t) +\n                            (Ai + Bi) ** (-1 - t) *\n                                (Bi ** (1 - t) -\n                                    (Ai + Bi) ** (1 - t) +\n                                    Bo ** (1 - t)) **\n                                    (-1 + 1 / (1 - t)) *\n                                t\n                    )) /\n            ((Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                (-1 + 1 / (1 - t)) /\n                (Ai + Bi) ** t -\n                Math.abs(\n                    1 -\n                        (Bi ** (1 - t) -\n                            (Ai + Bi) ** (1 - t) +\n                            Bo ** (1 - t)) **\n                            (-1 + 1 / (1 - t)) /\n                            (Ai + Bi) ** t\n                ) *\n                    f) **\n                2\n        )\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n    amount: BigNumber,\n    poolPairData: ElementPoolPairData\n): BigNumber {\n    const f = poolPairData.swapFee.toNumber();\n    const Bi = poolPairData.balanceIn.toNumber();\n    const Bo = poolPairData.balanceOut.toNumber();\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ao = amount.toNumber();\n    return bnum(\n        ((Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n            (-2 + 1 / (1 - t)) *\n            (-1 + 1 / (1 - t)) *\n            (1 - t)) /\n            (-Ao + Bo) ** (2 * t) +\n            (-Ao + Bo) ** (-1 - t) *\n                (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                    (-1 + 1 / (1 - t)) *\n                t +\n            f *\n                Math.abs(\n                    ((Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                        (-2 + 1 / (1 - t)) *\n                        (-1 + 1 / (1 - t)) *\n                        (1 - t)) /\n                        (-Ao + Bo) ** (2 * t) +\n                        (-Ao + Bo) ** (-1 - t) *\n                            (Bi ** (1 - t) +\n                                Bo ** (1 - t) -\n                                (-Ao + Bo) ** (1 - t)) **\n                                (-1 + 1 / (1 - t)) *\n                            t\n                )\n    );\n}\n\nexport function getTimeTillExpiry(\n    expiryTime: number,\n    currentBlockTimestamp: number,\n    unitSeconds: number\n): number {\n    let t =\n        currentBlockTimestamp < expiryTime\n            ? expiryTime - currentBlockTimestamp\n            : 0;\n    t = t / unitSeconds;\n    return t;\n}\n","import { BigNumber } from '../../utils/bignumber';\nimport {\n    PoolBase,\n    PoolTypes,\n    SwapPairType,\n    PairTypes,\n    PoolPairBase,\n    SwapTypes,\n    SubgraphPoolBase,\n} from '../../types';\nimport { getAddress } from '@ethersproject/address';\nimport { bnum } from '../../utils/bignumber';\nimport {\n    _exactTokenInForTokenOut,\n    _tokenInForExactTokenOut,\n    _spotPriceAfterSwapExactTokenInForTokenOut,\n    _spotPriceAfterSwapTokenInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut,\n    getTimeTillExpiry,\n} from './elementMath';\n\nexport interface ElementPoolToken {\n    address: string;\n    balance: string;\n    decimals: string | number;\n}\n\nexport interface ElementPoolPairData extends PoolPairBase {\n    id: string;\n    address: string;\n    poolType: PoolTypes;\n    pairType: PairTypes;\n    tokenIn: string;\n    tokenOut: string;\n    balanceIn: BigNumber;\n    balanceOut: BigNumber;\n    swapFee: BigNumber;\n    decimalsIn: number;\n    decimalsOut: number;\n    // Element specific fields\n    totalShares: BigNumber;\n    expiryTime: number;\n    unitSeconds: number;\n    principalToken: string;\n    baseToken: string;\n    currentBlockTimestamp: number;\n}\n\nexport class ElementPool implements PoolBase {\n    poolType: PoolTypes = PoolTypes.Element;\n    swapPairType: SwapPairType;\n    id: string;\n    address: string;\n    swapFee: string;\n    totalShares: string;\n    tokens: ElementPoolToken[];\n    tokensList: string[];\n    // Element specific\n    expiryTime: number;\n    unitSeconds: number;\n    principalToken: string;\n    baseToken: string;\n    currentBlockTimestamp: number;\n\n    static fromPool(pool: SubgraphPoolBase): ElementPool {\n        return new ElementPool(\n            pool.id,\n            pool.address,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens,\n            pool.tokensList,\n            pool.expiryTime,\n            pool.unitSeconds,\n            pool.principalToken,\n            pool.baseToken\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: ElementPoolToken[],\n        tokensList: string[],\n        expiryTime: number,\n        unitSeconds: number,\n        principalToken: string,\n        baseToken: string\n    ) {\n        this.id = id;\n        this.address = address;\n        this.swapFee = swapFee;\n        this.totalShares = totalShares;\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n        this.expiryTime = expiryTime;\n        this.unitSeconds = unitSeconds;\n        this.principalToken = principalToken;\n        this.baseToken = baseToken;\n        this.currentBlockTimestamp = 0;\n    }\n\n    setCurrentBlockTimestamp(timestamp: number): void {\n        this.currentBlockTimestamp = timestamp;\n    }\n\n    setTypeForSwap(type: SwapPairType): void {\n        this.swapPairType = type;\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): ElementPoolPairData {\n        let pairType: PairTypes;\n        let tI: ElementPoolToken;\n        let tO: ElementPoolToken;\n        let balanceIn: string;\n        let balanceOut: string;\n        let decimalsOut: string | number;\n        let decimalsIn: string | number;\n        let tokenIndexIn: number;\n        let tokenIndexOut: number;\n\n        // Check if tokenIn is the pool token itself (BPT)\n        if (tokenIn == this.address) {\n            pairType = PairTypes.BptToToken;\n            balanceIn = this.totalShares;\n            decimalsIn = '18'; // Not used but has to be defined\n        } else if (tokenOut == this.address) {\n            pairType = PairTypes.TokenToBpt;\n            balanceOut = this.totalShares;\n            decimalsOut = '18'; // Not used but has to be defined\n        } else {\n            pairType = PairTypes.TokenToToken;\n        }\n\n        if (pairType != PairTypes.BptToToken) {\n            tokenIndexIn = this.tokens.findIndex(\n                (t) => getAddress(t.address) === getAddress(tokenIn)\n            );\n            if (tokenIndexIn < 0) throw 'Pool does not contain tokenIn';\n            tI = this.tokens[tokenIndexIn];\n            balanceIn = tI.balance;\n            decimalsIn = tI.decimals;\n        }\n        if (pairType != PairTypes.TokenToBpt) {\n            tokenIndexOut = this.tokens.findIndex(\n                (t) => getAddress(t.address) === getAddress(tokenOut)\n            );\n            if (tokenIndexOut < 0) throw 'Pool does not contain tokenOut';\n            tO = this.tokens[tokenIndexOut];\n            balanceOut = tO.balance;\n            decimalsOut = tO.decimals;\n        }\n\n        // We already add the virtual LP shares to the right balance\n        let bnumBalanceIn = bnum(balanceIn);\n        let bnumBalanceOut = bnum(balanceOut);\n        if (tokenIn == this.principalToken) {\n            bnumBalanceIn = bnumBalanceIn.plus(bnum(this.totalShares));\n        } else if (tokenOut == this.principalToken) {\n            bnumBalanceOut = bnumBalanceOut.plus(bnum(this.totalShares));\n        }\n        const poolPairData: ElementPoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            pairType: pairType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            principalToken: this.principalToken,\n            baseToken: this.baseToken,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            balanceIn: bnumBalanceIn,\n            balanceOut: bnumBalanceOut,\n            swapFee: bnum(this.swapFee),\n            totalShares: bnum(this.totalShares),\n            expiryTime: this.expiryTime,\n            unitSeconds: this.unitSeconds,\n            currentBlockTimestamp: this.currentBlockTimestamp,\n        };\n\n        return poolPairData;\n    }\n\n    // Normalized liquidity is an abstract term that can be thought of the\n    // inverse of the slippage. It is proportional to the token balances in the\n    // pool but also depends on the shape of the invariant curve.\n    // As a standard, we define normalized liquidity in tokenOut\n    getNormalizedLiquidity(poolPairData: ElementPoolPairData): BigNumber {\n        // This could be refined by using the inverse of the slippage, but\n        // in practice this won't have a big impact in path selection for\n        // multi-hops so not a big priority\n        return poolPairData.balanceOut;\n    }\n\n    getLimitAmountSwap(\n        poolPairData: ElementPoolPairData,\n        swapType: SwapTypes\n    ): BigNumber {\n        const MAX_OUT_RATIO = bnum(0.3);\n        if (swapType === SwapTypes.SwapExactIn) {\n            // \"Ai < (Bi**(1-t)+Bo**(1-t))**(1/(1-t))-Bi\" must hold in order for\n            // base of root to be non-negative\n            const Bi = poolPairData.balanceIn.toNumber();\n            const Bo = poolPairData.balanceOut.toNumber();\n            const t = getTimeTillExpiry(\n                this.expiryTime,\n                this.currentBlockTimestamp,\n                this.unitSeconds\n            );\n            return bnum((Bi ** (1 - t) + Bo ** (1 - t)) ** (1 / (1 - t)) - Bi);\n        } else {\n            return poolPairData.balanceOut.times(MAX_OUT_RATIO);\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (this.address == token) {\n            this.totalShares = newBalance.toString();\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => t.address === token);\n            T.balance = newBalance.toString();\n        }\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _exactTokenInForTokenOut(amount, poolPairData);\n    }\n\n    _exactTokenInForBPTOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    _exactBPTInForTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _tokenInForExactTokenOut(amount, poolPairData);\n    }\n\n    _tokenInForExactBPTOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    _BPTInForExactTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _spotPriceAfterSwapExactTokenInForTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapExactTokenInForBPTOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    _spotPriceAfterSwapExactBPTInForTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _spotPriceAfterSwapTokenInForExactTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapTokenInForExactBPTOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    _spotPriceAfterSwapBPTInForExactTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        throw 'Element pool does not support SOR add/remove liquidity';\n        return bnum(-1);\n    }\n\n    // TODO - These need updated with real maths\n    _evmoutGivenIn: (\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ) => BigNumber;\n    _evmexactTokenInForBPTOut: (\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ) => BigNumber;\n    _evmexactBPTInForTokenOut: (\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ) => BigNumber;\n    _evminGivenOut: (\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ) => BigNumber;\n    _evmtokenInForExactBPTOut: (\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ) => BigNumber;\n    _evmbptInForExactTokenOut: (\n        poolPairData: ElementPoolPairData,\n        amount: BigNumber\n    ) => BigNumber;\n}\n","import { BigNumber } from '../../utils/bignumber';\nimport { bnum, ZERO, ONE } from '../../utils/bignumber';\n// All functions are adapted from the solidity ones to be found on:\n// https://github.com/balancer-labs/balancer-core-v2/blob/master/contracts/pools/stable/StableMath.sol\n\n// TODO: implement all up and down rounding variations\n\n/**********************************************************************************************\n    // invariant                                                                                 //\n    // D = invariant to compute                                                                  //\n    // A = amplifier                n * D^2 + A * n^n * S * (n^n * P / D^(n−1))                  //\n    // S = sum of balances         ____________________________________________                  //\n    // P = product of balances    (n+1) * D + ( A * n^n − 1)* (n^n * P / D^(n−1))                //\n    // n = number of tokens                                                                      //\n    **********************************************************************************************/\nexport function _invariant(\n    amp: BigNumber, // amp\n    balances: BigNumber[] // balances\n): BigNumber {\n    let sum = ZERO;\n    const totalCoins = balances.length;\n    for (let i = 0; i < totalCoins; i++) {\n        sum = sum.plus(balances[i]);\n    }\n    if (sum.isZero()) {\n        return ZERO;\n    }\n    let prevInv = ZERO;\n    let inv = sum;\n    const ampTimesNpowN = amp.times(totalCoins ** totalCoins); // A*n^n\n\n    for (let i = 0; i < 255; i++) {\n        let P_D = bnum(totalCoins).times(balances[0]);\n        for (let j = 1; j < totalCoins; j++) {\n            //P_D is rounded up\n            P_D = P_D.times(balances[j]).times(totalCoins).div(inv);\n        }\n        prevInv = inv;\n        //inv is rounded up\n        inv = bnum(totalCoins)\n            .times(inv)\n            .times(inv)\n            .plus(ampTimesNpowN.times(sum).times(P_D))\n            .div(\n                bnum(totalCoins + 1)\n                    .times(inv)\n                    .plus(ampTimesNpowN.minus(1).times(P_D))\n            );\n        // Equality with the precision of 1\n        if (inv.gt(prevInv)) {\n            if (inv.minus(prevInv).lt(bnum(10 ** -18))) {\n                break;\n            }\n        } else if (prevInv.minus(inv).lt(bnum(10 ** -18))) {\n            break;\n        }\n    }\n    //Result is rounded up\n    return inv;\n}\n\n// // This function has to be zero if the invariant D was calculated correctly\n// // It was only used for double checking that the invariant was correct\n// export function _invariantValueFunction(\n//     amp: BigNumber, // amp\n//     balances: BigNumber[], // balances\n//     D: BigNumber\n// ): BigNumber {\n//     let invariantValueFunction;\n//     let prod = ONE;\n//     let sum = ZERO;\n//     for (let i = 0; i < balances.length; i++) {\n//         prod = prod.times(balances[i]);\n//         sum = sum.plus(balances[i]);\n//     }\n//     let n = bnum(balances.length);\n\n//     // NOT! working based on Daniel's equation: https://www.notion.so/Analytical-for-2-tokens-1cd46debef6648dd81f2d75bae941fea\n//     // invariantValueFunction = amp.times(sum)\n//     //     .plus((ONE.div(n.pow(n)).minus(amp)).times(D))\n//     //     .minus((ONE.div(n.pow(n.times(2)).times(prod))).times(D.pow(n.plus(ONE))));\n//     invariantValueFunction = D.pow(n.plus(ONE))\n//         .div(n.pow(n).times(prod))\n//         .plus(D.times(amp.times(n.pow(n)).minus(ONE)))\n//         .minus(amp.times(n.pow(n)).times(sum));\n\n//     return invariantValueFunction;\n// }\n\n// Adapted from StableMath.sol, _outGivenIn()\n// * Added swap fee at very first line\n/**********************************************************************************************\n    // outGivenIn token x for y - polynomial equation to solve                                   //\n    // ay = amount out to calculate                                                              //\n    // by = balance token out                                                                    //\n    // y = by - ay                                                                               //\n    // D = invariant                               D                     D^(n+1)                 //\n    // A = amplifier               y^2 + ( S - ----------  - 1) * y -  ------------- = 0         //\n    // n = number of tokens                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but y                                                           //\n    // P = product of final balances but y                                                       //\n    **********************************************************************************************/\nexport function _exactTokenInForTokenOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    let tokenAmountIn = amount;\n    tokenAmountIn = tokenAmountIn.times(ONE.minus(swapFee));\n\n    //Invariant is rounded up\n    const inv = _invariant(amp, balances);\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = bnum(balances.length);\n    let n_pow_n = ONE;\n    let x = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        n_pow_n = n_pow_n.times(totalCoins);\n\n        if (i == tokenIndexIn) {\n            x = balances[i].plus(tokenAmountIn);\n        } else if (i != tokenIndexOut) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    //Calculate out balance\n    const y = _solveAnalyticalBalance(sum, inv, amp, n_pow_n, p);\n\n    //Result is rounded down\n    // return balances[tokenIndexOut] > y ? balances[tokenIndexOut].minus(y) : 0;\n    return balances[tokenIndexOut].minus(y);\n}\n\n// Adapted from StableMath.sol, _inGivenOut()\n// * Added swap fee at very last line\n/**********************************************************************************************\n    // inGivenOut token x for y - polynomial equation to solve                                   //\n    // ax = amount in to calculate                                                               //\n    // bx = balance token in                                                                     //\n    // x = bx + ax                                                                               //\n    // D = invariant                               D                     D^(n+1)                 //\n    // A = amplifier               x^2 + ( S - ----------  - 1) * x -  ------------- = 0         //\n    // n = number of tokens                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but x                                                           //\n    // P = product of final balances but x                                                       //\n    **********************************************************************************************/\nexport function _tokenInForExactTokenOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const tokenAmountOut = amount;\n    //Invariant is rounded up\n    const inv = _invariant(amp, balances);\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = bnum(balances.length);\n    let n_pow_n = ONE;\n    let x = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        n_pow_n = n_pow_n.times(totalCoins);\n\n        if (i == tokenIndexOut) {\n            x = balances[i].minus(tokenAmountOut);\n        } else if (i != tokenIndexIn) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    //Calculate in balance\n    const y = _solveAnalyticalBalance(sum, inv, amp, n_pow_n, p);\n\n    //Result is rounded up\n    return y.minus(balances[tokenIndexIn]).div(ONE.minus(swapFee));\n}\n\n//This function calculates the balance of a given token (tokenIndex)\n// given all the other balances and the invariant\nfunction _getTokenBalanceGivenInvariantAndAllOtherBalances(\n    amp: BigNumber,\n    balances: BigNumber[],\n    inv: BigNumber,\n    tokenIndex: number\n): BigNumber {\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = balances.length;\n    let nPowN = ONE;\n    let x = ZERO;\n    for (let i = 0; i < totalCoins; i++) {\n        nPowN = nPowN.times(totalCoins);\n        if (i != tokenIndex) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    // Calculate token balance\n    return _solveAnalyticalBalance(sum, inv, amp, nPowN, p);\n}\n\n//This function calcuates the analytical solution to find the balance required\nexport function _solveAnalyticalBalance(\n    sum: BigNumber,\n    inv: BigNumber,\n    amp: BigNumber,\n    n_pow_n: BigNumber,\n    p: BigNumber\n): BigNumber {\n    //Round up p\n    p = p.times(inv).div(amp.times(n_pow_n).times(n_pow_n));\n    //Round down b\n    const b = sum.plus(inv.div(amp.times(n_pow_n)));\n    //Round up c\n    // let c = inv >= b\n    //     ? inv.minus(b).plus(Math.sqrtUp(inv.minus(b).times(inv.minus(b)).plus(p.times(4))))\n    //     : Math.sqrtUp(b.minus(inv).times(b.minus(inv)).plus(p.times(4))).minus(b.minus(inv));\n    let c;\n    if (inv.gte(b)) {\n        c = inv\n            .minus(b)\n            .plus(inv.minus(b).times(inv.minus(b)).plus(p.times(4)).sqrt());\n    } else {\n        c = b\n            .minus(inv)\n            .times(b.minus(inv))\n            .plus(p.times(4))\n            .sqrt()\n            .minus(b.minus(inv));\n    }\n    //Round up y\n    return c.div(2);\n}\n\n/* \nAdapted from StableMath.sol _exactTokensInForBPTOut() \n    * renamed it to _exactTokenInForBPTOut (i.e. just one token in)\n*/\nexport function _exactTokenInForBPTOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, balanceOut, tokenIndexIn, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const tokenAmountIn = amount;\n    // Get current invariant\n    const currentInvariant = _invariant(amp, balances);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weights of each token relative to the sum of all balances\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // Calculate the weighted balance ratio without considering fees\n    const currentWeight = balances[tokenIndexIn].div(sumBalances);\n    const tokenBalanceRatioWithoutFee = balances[tokenIndexIn]\n        .plus(tokenAmountIn)\n        .div(balances[tokenIndexIn]);\n    const weightedBalanceRatio = ONE.plus(\n        tokenBalanceRatioWithoutFee.minus(ONE).times(currentWeight)\n    );\n\n    // calculate new amountIn taking into account the fee on the % excess\n    // Percentage of the amount supplied that will be implicitly swapped for other tokens in the pool\n    const tokenBalancePercentageExcess = tokenBalanceRatioWithoutFee\n        .minus(weightedBalanceRatio)\n        .div(tokenBalanceRatioWithoutFee.minus(ONE));\n\n    const amountInAfterFee = tokenAmountIn.times(\n        ONE.minus(swapFee.times(tokenBalancePercentageExcess))\n    );\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(amountInAfterFee);\n\n    // get new invariant taking into account swap fees\n    const newInvariant = _invariant(amp, balances);\n\n    return balanceOut.times(newInvariant.div(currentInvariant).minus(ONE));\n}\n\n/* \nFlow of calculations:\namountBPTOut -> newInvariant -> (amountInProportional, amountInAfterFee) ->\namountInPercentageExcess -> amountIn\n*/\nexport function _tokenInForExactBPTOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, balanceOut, tokenIndexIn, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const bptAmountOut = amount;\n\n    /**********************************************************************************************\n    // TODO description                            //\n    **********************************************************************************************/\n\n    // Get current invariant\n    const currentInvariant = _invariant(amp, balances);\n    // Calculate new invariant\n    const newInvariant = balanceOut\n        .plus(bptAmountOut)\n        .div(balanceOut)\n        .times(currentInvariant);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weight of token\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // get amountInAfterFee\n    const newBalanceTokenIndex =\n        _getTokenBalanceGivenInvariantAndAllOtherBalances(\n            amp,\n            balances,\n            newInvariant,\n            tokenIndexIn\n        );\n    const amountInAfterFee = newBalanceTokenIndex.minus(balances[tokenIndexIn]);\n\n    // Get tokenBalancePercentageExcess\n    const currentWeight = balances[tokenIndexIn].div(sumBalances);\n    const tokenBalancePercentageExcess = ONE.minus(currentWeight);\n\n    // return amountIn\n    return amountInAfterFee.div(\n        ONE.minus(tokenBalancePercentageExcess.times(swapFee))\n    );\n}\n\n/* \nAdapted from StableMath.sol _BPTInForExactTokensOut() to reduce it to \n_BPTInForExactTokenOut (i.e. just one token out)\n*/\nexport function _BPTInForExactTokenOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, balanceIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const tokenAmountOut = amount;\n\n    // Get current invariant\n    const currentInvariant = _invariant(amp, balances);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weights of each token relative to the sum of all balances\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // Calculate the weighted balance ratio without considering fees\n    const currentWeight = balances[tokenIndexOut].div(sumBalances);\n    const tokenBalanceRatioWithoutFee = balances[tokenIndexOut]\n        .minus(tokenAmountOut)\n        .div(balances[tokenIndexOut]);\n    const weightedBalanceRatio = ONE.minus(\n        ONE.minus(tokenBalanceRatioWithoutFee).times(currentWeight)\n    );\n\n    // calculate new amounts in taking into account the fee on the % excess\n    const tokenBalancePercentageExcess = weightedBalanceRatio\n        .minus(tokenBalanceRatioWithoutFee)\n        .div(ONE.minus(tokenBalanceRatioWithoutFee));\n\n    const amountOutBeforeFee = tokenAmountOut.div(\n        ONE.minus(swapFee.times(tokenBalancePercentageExcess))\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(amountOutBeforeFee);\n\n    // get new invariant taking into account swap fees\n    const newInvariant = _invariant(amp, balances);\n\n    // return amountBPTIn\n    return balanceIn.times(ONE.minus(newInvariant.div(currentInvariant)));\n}\n\n/* \nFlow of calculations:\namountBPTin -> newInvariant -> (amountOutProportional, amountOutBeforeFee) ->\namountOutPercentageExcess -> amountOut\n*/\nexport function _exactBPTInForTokenOut(amount, poolPairData): BigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, balanceIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const bptAmountIn = amount;\n    /**********************************************************************************************\n    // TODO description                            //\n    **********************************************************************************************/\n\n    // Get current invariant\n    const currentInvariant = _invariant(amp, balances);\n    // Calculate new invariant\n    const newInvariant = balanceIn\n        .minus(bptAmountIn)\n        .div(balanceIn)\n        .times(currentInvariant);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weight of token\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // get amountOutBeforeFee\n    const newBalanceTokenIndex =\n        _getTokenBalanceGivenInvariantAndAllOtherBalances(\n            amp,\n            balances,\n            newInvariant,\n            tokenIndexOut\n        );\n    const amountOutBeforeFee =\n        balances[tokenIndexOut].minus(newBalanceTokenIndex);\n\n    // Calculate tokenBalancePercentageExcess\n    const currentWeight = balances[tokenIndexOut].div(sumBalances);\n    const tokenBalancePercentageExcess = ONE.minus(currentWeight);\n\n    // return amountOut\n    return amountOutBeforeFee.times(\n        ONE.minus(tokenBalancePercentageExcess.times(swapFee))\n    );\n}\n\n//////////////////////\n////  These functions have been added exclusively for the SORv2\n//////////////////////\n\nexport function _poolDerivatives(\n    amp,\n    balances,\n    tokenIndexIn,\n    tokenIndexOut,\n    is_first_derivative,\n    wrt_out\n): BigNumber {\n    const totalCoins = balances.length;\n    const D = _invariant(amp, balances);\n    let S = ZERO;\n    for (let i = 0; i < totalCoins; i++) {\n        if (i != tokenIndexIn && i != tokenIndexOut) {\n            S = S.plus(balances[i]);\n        }\n    }\n    const x = balances[tokenIndexIn];\n    const y = balances[tokenIndexOut];\n    const a = amp.times(totalCoins ** totalCoins); // = ampTimesNpowN\n    const b = S.minus(D).times(a).plus(D);\n    const twoaxy = bnum(2).times(a).times(x).times(y);\n    const partial_x = twoaxy.plus(a.times(y).times(y)).plus(b.times(y));\n    const partial_y = twoaxy.plus(a.times(x).times(x)).plus(b.times(x));\n    let ans;\n    if (is_first_derivative) {\n        ans = partial_x.div(partial_y);\n    } else {\n        const partial_xx = bnum(2).times(a).times(y);\n        const partial_yy = bnum(2).times(a).times(x);\n        const partial_xy = partial_xx.plus(partial_yy).plus(b);\n        let numerator;\n        numerator = bnum(2)\n            .times(partial_x)\n            .times(partial_y)\n            .times(partial_xy)\n            .minus(partial_xx.times(partial_y.pow(2)))\n            .minus(partial_yy.times(partial_x.pow(2)));\n        const denominator = partial_x.pow(2).times(partial_y);\n        ans = numerator.div(denominator);\n        if (wrt_out) {\n            ans = ans.times(partial_y).div(partial_x);\n        }\n    }\n    return ans;\n}\n\nexport function _poolDerivativesBPT(\n    amp,\n    balances,\n    bptSupply,\n    tokenIndexIn,\n    is_first_derivative,\n    is_BPT_out,\n    wrt_out\n): BigNumber {\n    const totalCoins = balances.length;\n    const D = _invariant(amp, balances);\n    let S = ZERO;\n    let D_P = D.div(totalCoins);\n    for (let i = 0; i < totalCoins; i++) {\n        if (i != tokenIndexIn) {\n            S = S.plus(balances[i]);\n            D_P = D_P.times(D).div(totalCoins * balances[i]);\n        }\n    }\n    const x = balances[tokenIndexIn];\n    const alpha = amp.times(totalCoins ** totalCoins); // = ampTimesNpowN\n    const beta = alpha.times(S);\n    const gamma = ONE.minus(alpha);\n    const partial_x = bnum(2)\n        .times(alpha)\n        .times(x)\n        .plus(beta)\n        .plus(gamma.times(D));\n    const minus_partial_D = D_P.times(totalCoins + 1).minus(gamma.times(x));\n    const partial_D = ZERO.minus(minus_partial_D);\n    let ans;\n    if (is_first_derivative) {\n        ans = partial_x.div(minus_partial_D).times(bptSupply).div(D);\n    } else {\n        const partial_xx = bnum(2).times(alpha);\n        const partial_xD = gamma;\n        const n_times_nplusone = totalCoins * (totalCoins + 1);\n        const partial_DD = ZERO.minus(D_P.times(n_times_nplusone).div(D));\n        if (is_BPT_out) {\n            const term1 = partial_xx.times(partial_D).div(partial_x.pow(2));\n            const term2 = bnum(2).times(partial_xD).div(partial_x);\n            const term3 = partial_DD.div(partial_D);\n            ans = term1.minus(term2).plus(term3).times(D).div(bptSupply);\n            if (wrt_out) {\n                const D_prime = ZERO.minus(partial_x.div(partial_D));\n                ans = ans.div(D_prime).times(D).div(bptSupply);\n            }\n        } else {\n            ans = bnum(2)\n                .times(partial_xD)\n                .div(partial_D)\n                .minus(partial_DD.times(partial_x).div(partial_D.pow(2)))\n                .minus(partial_xx.div(partial_x));\n            if (wrt_out) {\n                ans = ans\n                    .times(partial_x)\n                    .div(minus_partial_D)\n                    .times(bptSupply)\n                    .div(D);\n            }\n        }\n    }\n    return ans;\n}\n\n/////////\n/// SpotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(ONE.minus(swapFee))\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _exactTokenInForTokenOut(amount, poolPairData)\n    );\n    let ans = _poolDerivatives(\n        amp,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        true,\n        false\n    );\n    ans = ONE.div(ans.times(ONE.minus(swapFee)));\n    return ans;\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const _in = _tokenInForExactTokenOut(amount, poolPairData).times(\n        ONE.minus(swapFee)\n    );\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(amount);\n    let ans = _poolDerivatives(\n        amp,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        true,\n        true\n    );\n    ans = ONE.div(ans.times(ONE.minus(swapFee)));\n    return ans;\n}\n\nfunction _feeFactor(balances, tokenIndex, swapFee): BigNumber {\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n    const currentWeight = balances[tokenIndex].div(sumBalances);\n    const tokenBalancePercentageExcess = ONE.minus(currentWeight);\n    return ONE.minus(tokenBalancePercentageExcess.times(swapFee));\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceOut, tokenIndexIn, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(feeFactor)\n    );\n    balanceOut = balanceOut.plus(_exactTokenInForBPTOut(amount, poolPairData));\n    let ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceOut,\n        tokenIndexIn,\n        true,\n        true,\n        false\n    );\n    ans = ONE.div(ans.times(feeFactor));\n    return ans;\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceOut, tokenIndexIn, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const _in = _tokenInForExactBPTOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in.times(feeFactor));\n    balanceOut = balanceOut.plus(amount);\n    let ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceOut,\n        tokenIndexIn,\n        true,\n        true,\n        true\n    );\n    ans = ONE.div(ans.times(feeFactor));\n    return ans;\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactBPTInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceIn, tokenIndexOut, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const _out = _exactBPTInForTokenOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _out.div(feeFactor)\n    );\n    balanceIn = balanceIn.minus(amount);\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceIn,\n        tokenIndexOut,\n        true,\n        false,\n        false\n    ).div(feeFactor);\n    return ans;\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapBPTInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceIn, tokenIndexOut, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        amount.div(feeFactor)\n    );\n    balanceIn = balanceIn.minus(_BPTInForExactTokenOut(amount, poolPairData));\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceIn,\n        tokenIndexOut,\n        true,\n        false,\n        true\n    ).div(feeFactor);\n    return ans;\n}\n\n/////////\n///  Derivatives of spotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(ONE.minus(swapFee))\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _exactTokenInForTokenOut(amount, poolPairData)\n    );\n    return _poolDerivatives(\n        amp,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        false,\n        false\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const _in = _tokenInForExactTokenOut(amount, poolPairData).times(\n        ONE.minus(swapFee)\n    );\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(amount);\n    const feeFactor = ONE.minus(swapFee);\n    return _poolDerivatives(\n        amp,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        false,\n        true\n    ).div(feeFactor);\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceOut, tokenIndexIn, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(feeFactor)\n    );\n    balanceOut = balanceOut.plus(_exactTokenInForBPTOut(amount, poolPairData));\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceOut,\n        tokenIndexIn,\n        false,\n        true,\n        false\n    );\n    return ans;\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceOut, tokenIndexIn, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const _in = _tokenInForExactBPTOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in.times(feeFactor));\n    balanceOut = balanceOut.plus(amount);\n    return _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceOut,\n        tokenIndexIn,\n        false,\n        true,\n        true\n    ).div(feeFactor);\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceIn, tokenIndexOut, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const _out = _exactBPTInForTokenOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _out.div(feeFactor)\n    );\n    balanceIn = balanceIn.minus(amount);\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceIn,\n        tokenIndexOut,\n        false,\n        false,\n        false\n    );\n    return ans.div(feeFactor);\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n    amount,\n    poolPairData\n): BigNumber {\n    let { amp, allBalances, balanceIn, tokenIndexOut, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const _in = _BPTInForExactTokenOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        amount.div(feeFactor)\n    );\n    balanceIn = balanceIn.minus(_in);\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        balanceIn,\n        tokenIndexOut,\n        false,\n        false,\n        true\n    );\n    return ans.div(feeFactor.pow(2));\n}\n","import { BigNumber } from '../../utils/bignumber';\nimport {\n    PoolBase,\n    PoolTypes,\n    SwapPairType,\n    PairTypes,\n    PoolPairBase,\n    SwapTypes,\n    SubgraphPoolBase,\n} from '../../types';\nimport { getAddress } from '@ethersproject/address';\nimport { bnum, scale, ZERO } from '../../utils/bignumber';\nimport * as SDK from '@georgeroman/balancer-v2-pools';\nimport {\n    _invariant,\n    _exactTokenInForTokenOut,\n    _exactTokenInForBPTOut,\n    _exactBPTInForTokenOut,\n    _tokenInForExactTokenOut,\n    _tokenInForExactBPTOut,\n    _BPTInForExactTokenOut,\n    _spotPriceAfterSwapExactTokenInForTokenOut,\n    _spotPriceAfterSwapExactTokenInForBPTOut,\n    _spotPriceAfterSwapExactBPTInForTokenOut,\n    _spotPriceAfterSwapTokenInForExactTokenOut,\n    _spotPriceAfterSwapTokenInForExactBPTOut,\n    _spotPriceAfterSwapBPTInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForBPTOut,\n    _derivativeSpotPriceAfterSwapExactBPTInForTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactBPTOut,\n    _derivativeSpotPriceAfterSwapBPTInForExactTokenOut,\n} from './metaStableMath';\n\nexport interface MetaStablePoolToken {\n    address: string;\n    balance: string;\n    decimals: string | number;\n    priceRate?: string;\n}\n\nexport interface MetaStablePoolPairData extends PoolPairBase {\n    id: string;\n    address: string;\n    poolType: PoolTypes;\n    pairType: PairTypes;\n    tokenIn: string;\n    tokenOut: string;\n    balanceIn: BigNumber;\n    balanceOut: BigNumber;\n    swapFee: BigNumber;\n    swapFeeScaled: BigNumber;\n    decimalsIn: number;\n    decimalsOut: number;\n    allBalances: BigNumber[]; // Only for stable pools\n    allBalancesScaled: BigNumber[]; // Only for stable pools - EVM Maths uses everything in 1e18 upscaled format and this avoids repeated scaling\n    invariant: BigNumber; // Only for stable pools\n    amp: BigNumber; // Only for stable pools\n    tokenIndexIn: number; // Only for stable pools\n    tokenIndexOut: number; // Only for stable pools\n    tokenInPriceRate: BigNumber;\n    tokenOutPriceRate: BigNumber;\n}\n\nexport class MetaStablePool implements PoolBase {\n    poolType: PoolTypes = PoolTypes.MetaStable;\n    swapPairType: SwapPairType;\n    id: string;\n    address: string;\n    amp: BigNumber;\n    swapFee: BigNumber;\n    swapFeeScaled: BigNumber; // EVM Maths uses everything in 1e18 upscaled format and this avoids repeated scaling\n    totalShares: string;\n    tokens: MetaStablePoolToken[];\n    tokensList: string[];\n    AMP_PRECISION = bnum(1000);\n    MAX_IN_RATIO = bnum(0.3);\n    MAX_OUT_RATIO = bnum(0.3);\n    ampAdjusted: BigNumber;\n\n    static fromPool(pool: SubgraphPoolBase): MetaStablePool {\n        return new MetaStablePool(\n            pool.id,\n            pool.address,\n            pool.amp,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens,\n            pool.tokensList\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        amp: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: MetaStablePoolToken[],\n        tokensList: string[]\n    ) {\n        this.id = id;\n        this.address = address;\n        this.amp = bnum(amp);\n        this.swapFee = bnum(swapFee);\n        this.swapFeeScaled = scale(this.swapFee, 18);\n        this.totalShares = totalShares;\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n        this.ampAdjusted = this.amp.times(this.AMP_PRECISION);\n    }\n\n    setTypeForSwap(type: SwapPairType): void {\n        this.swapPairType = type;\n    }\n\n    parsePoolPairData(\n        tokenIn: string,\n        tokenOut: string\n    ): MetaStablePoolPairData {\n        let pairType: PairTypes;\n        let tI: MetaStablePoolToken;\n        let tO: MetaStablePoolToken;\n        let balanceIn: BigNumber;\n        let balanceOut: BigNumber;\n        let decimalsOut: string | number;\n        let decimalsIn: string | number;\n        let tokenIndexIn: number;\n        let tokenIndexOut: number;\n        let tokenInPriceRate = bnum(1);\n        let tokenOutPriceRate = bnum(1);\n\n        // Check if tokenIn is the pool token itself (BPT)\n        if (tokenIn === this.address) {\n            pairType = PairTypes.BptToToken;\n            balanceIn = bnum(this.totalShares);\n            decimalsIn = '18'; // Not used but has to be defined\n        } else if (tokenOut === this.address) {\n            pairType = PairTypes.TokenToBpt;\n            balanceOut = bnum(this.totalShares);\n            decimalsOut = '18'; // Not used but has to be defined\n        } else {\n            pairType = PairTypes.TokenToToken;\n        }\n\n        if (pairType !== PairTypes.BptToToken) {\n            tokenIndexIn = this.tokens.findIndex(\n                (t) => getAddress(t.address) === getAddress(tokenIn)\n            );\n            if (tokenIndexIn < 0) throw 'Pool does not contain tokenIn';\n            tI = this.tokens[tokenIndexIn];\n            // balanceIn = tI.balance;\n            balanceIn = bnum(tI.balance).times(bnum(tI.priceRate));\n            decimalsIn = tI.decimals;\n            tokenInPriceRate = bnum(tI.priceRate);\n        }\n        if (pairType !== PairTypes.TokenToBpt) {\n            tokenIndexOut = this.tokens.findIndex(\n                (t) => getAddress(t.address) === getAddress(tokenOut)\n            );\n            if (tokenIndexOut < 0) throw 'Pool does not contain tokenOut';\n            tO = this.tokens[tokenIndexOut];\n            // balanceOut = tO.balance;\n            balanceOut = bnum(tO.balance).times(bnum(tO.priceRate));\n            decimalsOut = tO.decimals;\n            tokenOutPriceRate = bnum(tO.priceRate);\n        }\n\n        // Get all token balances\n        const allBalances: BigNumber[] = [];\n        const allBalancesScaled: BigNumber[] = [];\n        for (let i = 0; i < this.tokens.length; i++) {\n            // const balanceBn = bnum(this.tokens[i].balance);\n            const balanceBn = bnum(this.tokens[i].balance)\n                .times(bnum(this.tokens[i].priceRate))\n                .dp(Number(this.tokens[i].decimals), 1);\n            allBalances.push(balanceBn);\n            allBalancesScaled.push(scale(balanceBn, 18));\n        }\n\n        const inv = _invariant(this.amp, allBalances);\n\n        const poolPairData: MetaStablePoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            pairType: pairType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            balanceIn: balanceIn,\n            balanceOut: balanceOut,\n            invariant: inv,\n            swapFee: this.swapFee,\n            swapFeeScaled: this.swapFeeScaled,\n            allBalances,\n            allBalancesScaled,\n            amp: this.amp,\n            tokenIndexIn: tokenIndexIn,\n            tokenIndexOut: tokenIndexOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            tokenInPriceRate,\n            tokenOutPriceRate,\n        };\n\n        return poolPairData;\n    }\n\n    getNormalizedLiquidity(poolPairData: MetaStablePoolPairData): BigNumber {\n        // This is an approximation as the actual normalized liquidity is a lot more complicated to calculate\n        return poolPairData.balanceOut.times(poolPairData.amp);\n    }\n\n    getLimitAmountSwap(\n        poolPairData: MetaStablePoolPairData,\n        swapType: SwapTypes\n    ): BigNumber {\n        // We multiply ratios by 10**-18 because we are in normalized space\n        // so 0.5 should be 0.5 and not 500000000000000000\n        // TODO: update bmath to use everything normalized\n        // PoolPairData is using balances that have already been exchanged so need to convert back\n        if (swapType === SwapTypes.SwapExactIn) {\n            return poolPairData.balanceIn\n                .div(poolPairData.tokenInPriceRate)\n                .times(this.MAX_IN_RATIO);\n        } else {\n            return poolPairData.balanceOut\n                .div(poolPairData.tokenOutPriceRate)\n                .times(this.MAX_OUT_RATIO);\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (this.address == token) {\n            this.totalShares = newBalance.toString();\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => t.address === token);\n            T.balance = newBalance.toString();\n        }\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n        // i.e. when using token with 2decimals 0.002 should be returned as 0\n        // Uses ROUND_DOWN mode (1)\n        const amt = _exactTokenInForTokenOut(\n            amount.times(poolPairData.tokenInPriceRate),\n            poolPairData\n        ).dp(poolPairData.decimalsOut, 1);\n        return amt.div(poolPairData.tokenOutPriceRate);\n    }\n\n    _exactTokenInForBPTOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _exactTokenInForBPTOut(amount, poolPairData);\n    }\n\n    _exactBPTInForTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _exactBPTInForTokenOut(amount, poolPairData);\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n        // i.e. when using token with 2decimals 0.002 should be returned as 0\n        // Uses ROUND_UP mode (0)\n        const amt = _tokenInForExactTokenOut(\n            amount.times(poolPairData.tokenOutPriceRate),\n            poolPairData\n        ).dp(poolPairData.decimalsIn, 0);\n\n        return amt.div(poolPairData.tokenInPriceRate);\n    }\n\n    _tokenInForExactBPTOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _tokenInForExactBPTOut(amount, poolPairData);\n    }\n\n    _BPTInForExactTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _BPTInForExactTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        const amountConverted = amount.times(poolPairData.tokenInPriceRate);\n        const result = _spotPriceAfterSwapExactTokenInForTokenOut(\n            amountConverted,\n            poolPairData\n        );\n        return result;\n    }\n\n    _spotPriceAfterSwapExactTokenInForBPTOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapExactTokenInForBPTOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapExactBPTInForTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapExactBPTInForTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        const amountConverted = amount.times(poolPairData.tokenOutPriceRate);\n        const result = _spotPriceAfterSwapTokenInForExactTokenOut(\n            amountConverted,\n            poolPairData\n        );\n        return result;\n    }\n\n    _spotPriceAfterSwapTokenInForExactBPTOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapTokenInForExactBPTOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapBPTInForExactTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _spotPriceAfterSwapBPTInForExactTokenOut(amount, poolPairData);\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        return _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _evmoutGivenIn(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = scale(amount, 18);\n            const amountConverted = amtScaled.times(\n                poolPairData.tokenInPriceRate\n            );\n\n            const amt = SDK.StableMath._calcOutGivenIn(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                poolPairData.tokenIndexIn,\n                poolPairData.tokenIndexOut,\n                amountConverted,\n                poolPairData.swapFeeScaled\n            );\n            // return normalised amount\n            return scale(amt.div(poolPairData.tokenOutPriceRate), -18);\n        } catch (err) {\n            console.error(`_evmoutGivenIn: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _evminGivenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = scale(amount, 18);\n            const amountConverted = amtScaled.times(\n                poolPairData.tokenOutPriceRate\n            );\n\n            const amt = SDK.StableMath._calcInGivenOut(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                poolPairData.tokenIndexIn,\n                poolPairData.tokenIndexOut,\n                amountConverted,\n                poolPairData.swapFeeScaled\n            );\n\n            // return normalised amount\n            return scale(amt.div(poolPairData.tokenInPriceRate), -18);\n        } catch (err) {\n            console.error(`_evminGivenOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _evmexactTokenInForBPTOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const bptTotalSupplyScaled = scale(poolPairData.balanceOut, 18);\n            // amountsIn must have same length as balances. Only need value for token in.\n            const amountsIn = poolPairData.allBalances.map((bal, i) => {\n                if (i === poolPairData.tokenIndexIn) return scale(amount, 18);\n                else return ZERO;\n            });\n\n            const amt = SDK.StableMath._calcBptOutGivenExactTokensIn(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                amountsIn,\n                bptTotalSupplyScaled,\n                poolPairData.swapFeeScaled\n            );\n\n            // return normalised amount\n            return scale(amt, -18);\n        } catch (err) {\n            console.error(`_evmexactTokenInForBPTOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _evmexactBPTInForTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const bptAmountInScaled = scale(amount, 18);\n            const bptTotalSupplyScaled = scale(poolPairData.balanceIn, 18);\n\n            const amt = SDK.StableMath._calcTokenOutGivenExactBptIn(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                poolPairData.tokenIndexOut,\n                bptAmountInScaled,\n                bptTotalSupplyScaled,\n                poolPairData.swapFeeScaled\n            );\n\n            // return normalised amount\n            return scale(amt, -18);\n        } catch (err) {\n            console.error(`_evmexactBPTInForTokenOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _evmtokenInForExactBPTOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const bptAmountOutScaled = scale(amount, 18);\n            const bptTotalSupplyScaled = scale(poolPairData.balanceOut, 18);\n\n            const amt = SDK.StableMath._calcTokenInGivenExactBptOut(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                poolPairData.tokenIndexIn,\n                bptAmountOutScaled,\n                bptTotalSupplyScaled,\n                poolPairData.swapFeeScaled\n            );\n\n            // return normalised amount\n            return scale(amt, -18);\n        } catch (err) {\n            console.error(`_evmtokenInForExactBPTOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _evmbptInForExactTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: BigNumber\n    ): BigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            // amountsOut must have same length as balances. Only need value for token out.\n            const amountsOut = poolPairData.allBalances.map((bal, i) => {\n                if (i === poolPairData.tokenIndexOut) return scale(amount, 18);\n                else return ZERO;\n            });\n            const bptTotalSupplyScaled = scale(poolPairData.balanceIn, 18);\n\n            const amt = SDK.StableMath._calcBptInGivenExactTokensOut(\n                this.ampAdjusted,\n                poolPairData.allBalancesScaled,\n                amountsOut,\n                bptTotalSupplyScaled,\n                poolPairData.swapFeeScaled\n            );\n            // return normalised amount\n            return scale(amt, -18);\n        } catch (err) {\n            console.error(`_evmbptInForExactTokenOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n}\n","import { WeightedPool } from './weightedPool/weightedPool';\nimport { StablePool } from './stablePool/stablePool';\nimport { ElementPool } from './elementPool/elementPool';\nimport { MetaStablePool } from './metaStablePool/metaStablePool';\nimport { BigNumber, INFINITY, ZERO } from '../utils/bignumber';\nimport {\n    SubgraphPoolBase,\n    PoolBase,\n    SwapTypes,\n    PoolPairBase,\n    PairTypes,\n} from '../types';\n\nexport function parseNewPool(\n    pool: SubgraphPoolBase,\n    currentBlockTimestamp = 0\n): WeightedPool | StablePool | ElementPool | undefined {\n    let newPool: WeightedPool | StablePool | ElementPool;\n    if (pool.poolType === 'Weighted') newPool = WeightedPool.fromPool(pool);\n    else if (pool.poolType === 'Stable') newPool = StablePool.fromPool(pool);\n    else if (pool.poolType === 'Element') {\n        newPool = ElementPool.fromPool(pool);\n        newPool.setCurrentBlockTimestamp(currentBlockTimestamp);\n    } else if (pool.poolType === 'MetaStable') {\n        newPool = MetaStablePool.fromPool(pool);\n    } else if (pool.poolType === 'LiquidityBootstrapping') {\n        // If an LBP doesn't have its swaps paused we treat it like a regular Weighted pool.\n        // If it does we just ignore it.\n        if (pool.swapEnabled === true) newPool = WeightedPool.fromPool(pool);\n        else return undefined;\n    } else {\n        console.error(\n            `Unknown pool type or type field missing: ${pool.poolType} ${pool.id}`\n        );\n        return undefined;\n    }\n    return newPool;\n}\n\n// TODO: Add cases for pairType = [BTP->token, token->BTP] and poolType = [weighted, stable]\nexport function getOutputAmountSwap(\n    pool: PoolBase,\n    poolPairData: PoolPairBase,\n    swapType: SwapTypes,\n    amount: BigNumber\n): BigNumber {\n    const pairType = poolPairData.pairType;\n\n    // TODO: check if necessary to check if amount > limitAmount\n    if (swapType === SwapTypes.SwapExactIn) {\n        if (poolPairData.balanceIn.isZero()) {\n            return ZERO;\n        } else if (pairType === PairTypes.TokenToToken) {\n            return pool._exactTokenInForTokenOut(poolPairData, amount);\n        } else if (pairType === PairTypes.TokenToBpt) {\n            return pool._exactTokenInForBPTOut(poolPairData, amount);\n        } else if (pairType === PairTypes.BptToToken) {\n            return pool._exactBPTInForTokenOut(poolPairData, amount);\n        }\n    } else {\n        if (poolPairData.balanceOut.isZero()) {\n            return ZERO;\n        } else if (amount.gte(poolPairData.balanceOut)) {\n            return INFINITY;\n        } else if (pairType === PairTypes.TokenToToken) {\n            return pool._tokenInForExactTokenOut(poolPairData, amount);\n        } else if (pairType === PairTypes.TokenToBpt) {\n            return pool._tokenInForExactBPTOut(poolPairData, amount);\n        } else if (pairType === PairTypes.BptToToken) {\n            return pool._BPTInForExactTokenOut(poolPairData, amount);\n        }\n    }\n}\n","import { BigNumber, ZERO, INFINITY } from '../utils/bignumber';\nimport { getOutputAmountSwap } from '../pools';\nimport { INFINITESIMAL } from '../config';\nimport {\n    NewPath,\n    PoolDictionary,\n    SwapTypes,\n    PairTypes,\n    PoolBase,\n    PoolPairBase,\n    PoolTypes,\n} from '../types';\n\nexport function getHighestLimitAmountsForPaths(\n    paths: NewPath[],\n    maxPools: number\n): BigNumber[] {\n    if (paths.length === 0) return [];\n    const limitAmounts = [];\n    for (let i = 0; i < maxPools; i++) {\n        if (i < paths.length) {\n            const limitAmount = paths[i].limitAmount;\n            limitAmounts.push(limitAmount);\n        }\n    }\n    return limitAmounts;\n}\n\nexport function getEffectivePriceSwapForPath(\n    pools: PoolDictionary,\n    path: NewPath,\n    swapType: SwapTypes,\n    amount: BigNumber\n): BigNumber {\n    if (amount.lt(INFINITESIMAL)) {\n        // Return spot price as code below would be 0/0 = undefined\n        // or small_amount/0 or 0/small_amount which would cause bugs\n        return getSpotPriceAfterSwapForPath(path, swapType, amount);\n    }\n    const outputAmountSwap = getOutputAmountSwapForPath(path, swapType, amount);\n    if (swapType === SwapTypes.SwapExactIn) {\n        return amount.div(outputAmountSwap); // amountIn/AmountOut\n    } else {\n        return outputAmountSwap.div(amount); // amountIn/AmountOut\n    }\n}\n\nexport function getOutputAmountSwapForPath(\n    path: NewPath,\n    swapType: SwapTypes,\n    amount: BigNumber\n): BigNumber {\n    const pools = path.pools;\n\n    // First of all check if the amount is above limit, if so, return 0 for\n    // 'swapExactIn' or Inf for swapExactOut\n    if (amount.gt(path.limitAmount)) {\n        if (swapType === SwapTypes.SwapExactIn) {\n            return ZERO;\n        } else {\n            return INFINITY;\n        }\n    }\n    const poolPairData = path.poolPairData;\n    if (poolPairData.length == 1) {\n        return getOutputAmountSwap(\n            pools[0],\n            path.poolPairData[0],\n            swapType,\n            amount\n        );\n    } else if (poolPairData.length == 2) {\n        if (swapType === SwapTypes.SwapExactIn) {\n            // The outputAmount is number of tokenOut we receive from the second poolPairData\n            const outputAmountSwap1 = getOutputAmountSwap(\n                pools[0],\n                path.poolPairData[0],\n                swapType,\n                amount\n            );\n            return getOutputAmountSwap(\n                pools[1],\n                path.poolPairData[1],\n                swapType,\n                outputAmountSwap1\n            );\n        } else {\n            // The outputAmount is number of tokenIn we send to the first poolPairData\n            const outputAmountSwap2 = getOutputAmountSwap(\n                pools[1],\n                path.poolPairData[1],\n                swapType,\n                amount\n            );\n            return getOutputAmountSwap(\n                pools[0],\n                path.poolPairData[0],\n                swapType,\n                outputAmountSwap2\n            );\n        }\n    } else {\n        throw new Error('Path with more than 2 swaps not supported');\n    }\n}\n\nexport function getSpotPriceAfterSwapForPath(\n    path: NewPath,\n    swapType: SwapTypes,\n    amount: BigNumber\n): BigNumber {\n    const pools = path.pools;\n    const poolPairData = path.poolPairData;\n    if (poolPairData.length == 1) {\n        return getSpotPriceAfterSwap(\n            pools[0],\n            path.poolPairData[0],\n            swapType,\n            amount\n        );\n    } else if (poolPairData.length == 2) {\n        if (swapType === SwapTypes.SwapExactIn) {\n            const outputAmountSwap1 = getOutputAmountSwap(\n                pools[0],\n                path.poolPairData[0],\n                swapType,\n                amount\n            );\n            const spotPriceAfterSwap1 = getSpotPriceAfterSwap(\n                pools[0],\n                path.poolPairData[0],\n                swapType,\n                amount\n            );\n            const spotPriceAfterSwap2 = getSpotPriceAfterSwap(\n                pools[1],\n                path.poolPairData[1],\n                swapType,\n                outputAmountSwap1\n            );\n            return spotPriceAfterSwap1.times(spotPriceAfterSwap2);\n        } else {\n            const outputAmountSwap2 = getOutputAmountSwap(\n                pools[1],\n                path.poolPairData[1],\n                swapType,\n                amount\n            );\n            const spotPriceAfterSwap1 = getSpotPriceAfterSwap(\n                pools[0],\n                path.poolPairData[0],\n                swapType,\n                outputAmountSwap2\n            );\n            const spotPriceAfterSwap2 = getSpotPriceAfterSwap(\n                pools[1],\n                path.poolPairData[1],\n                swapType,\n                amount\n            );\n            return spotPriceAfterSwap1.times(spotPriceAfterSwap2);\n        }\n    } else {\n        throw new Error('Path with more than 2 swaps not supported');\n    }\n}\n\n// TODO: Add cases for pairType = [BTP->token, token->BTP] and poolType = [weighted, stable]\nexport function getSpotPriceAfterSwap(\n    pool: PoolBase,\n    poolPairData: PoolPairBase,\n    swapType: SwapTypes,\n    amount: BigNumber\n): BigNumber {\n    const pairType = poolPairData.pairType;\n\n    // TODO: check if necessary to check if amount > limitAmount\n    if (swapType === SwapTypes.SwapExactIn) {\n        if (poolPairData.balanceIn.isZero()) {\n            return ZERO;\n        }\n    } else {\n        if (poolPairData.balanceOut.isZero()) {\n            return ZERO;\n        }\n        if (amount.gte(poolPairData.balanceOut)) return INFINITY;\n    }\n    if (swapType === SwapTypes.SwapExactIn) {\n        if (pairType === PairTypes.TokenToToken) {\n            return pool._spotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                amount\n            );\n        } else if (pairType === PairTypes.TokenToBpt) {\n            return pool._spotPriceAfterSwapExactTokenInForBPTOut(\n                poolPairData,\n                amount\n            );\n        } else if (pairType === PairTypes.BptToToken) {\n            return pool._spotPriceAfterSwapExactBPTInForTokenOut(\n                poolPairData,\n                amount\n            );\n        }\n    } else {\n        if (pairType === PairTypes.TokenToToken) {\n            return pool._spotPriceAfterSwapTokenInForExactTokenOut(\n                poolPairData,\n                amount\n            );\n        } else if (pairType === PairTypes.TokenToBpt) {\n            return pool._spotPriceAfterSwapTokenInForExactBPTOut(\n                poolPairData,\n                amount\n            );\n        } else if (pairType === PairTypes.BptToToken) {\n            return pool._spotPriceAfterSwapBPTInForExactTokenOut(\n                poolPairData,\n                amount\n            );\n        }\n    }\n}\n\nexport function getDerivativeSpotPriceAfterSwapForPath(\n    path: NewPath,\n    swapType: SwapTypes,\n    amount: BigNumber\n): BigNumber {\n    const poolPairData = path.poolPairData;\n    if (poolPairData.length == 1) {\n        return getDerivativeSpotPriceAfterSwap(\n            path.pools[0],\n            path.poolPairData[0],\n            swapType,\n            amount\n        );\n    } else if (poolPairData.length == 2) {\n        if (swapType === SwapTypes.SwapExactIn) {\n            const outputAmountSwap1 = getOutputAmountSwap(\n                path.pools[0],\n                path.poolPairData[0],\n                swapType,\n                amount\n            );\n            // const SPaS1 = getSpotPriceAfterSwap(\n            //     path.pools[0],\n            //     path.poolPairData[0],\n            //     swapType,\n            //     amount\n            // );\n            const SPaS2 = getSpotPriceAfterSwap(\n                path.pools[1],\n                path.poolPairData[1],\n                swapType,\n                outputAmountSwap1\n            );\n            const dSPaS1 = getDerivativeSpotPriceAfterSwap(\n                path.pools[0],\n                path.poolPairData[0],\n                swapType,\n                amount\n            );\n            const dSPaS2 = getDerivativeSpotPriceAfterSwap(\n                path.pools[1],\n                path.poolPairData[1],\n                swapType,\n                outputAmountSwap1\n            );\n            // Using the rule of the derivative of the multiplication: d[f(x)*g(x)] = d[f(x)]*g(x) + f(x)*d[g(x)]\n            // where SPaS1 is SpotPriceAfterSwap of pool 1 and OA1 is OutputAmount of pool 1. We then have:\n            // d[SPaS1(x) * SPaS2(OA1(x))] = d[SPaS1(x)] * SPaS2(OA1(x)) + SPaS1(x) * d[SPaS2(OA1(x))]\n            // Let's expand the term d[SPaS2(OA1(x))] which is trickier:\n            // d[SPaS2(OA1(x))] at x0 = d[SPaS2(x)] at OA1(x0) * d[OA1(x)] at x0,\n            // Since d[OA1(x)] = 1/SPaS1(x) we then have:\n            // d[SPaS2(OA1(x))] = d[SPaS2(x)] * 1/SPaS1(x). Which leads us to:\n            // d[SPaS1(x) * SPaS2(OA1(x))] = d[SPaS1(x)] * SPaS2(OA1(x)) + d[SPaS2(OA1(x))]\n            // return dSPaS1 * SPaS2 + dSPaS2\n            return dSPaS1.times(SPaS2).plus(dSPaS2);\n        } else {\n            const outputAmountSwap2 = getOutputAmountSwap(\n                path.pools[1],\n                path.poolPairData[1],\n                swapType,\n                amount\n            );\n            const SPaS1 = getSpotPriceAfterSwap(\n                path.pools[0],\n                path.poolPairData[0],\n                swapType,\n                outputAmountSwap2\n            );\n            const SPaS2 = getSpotPriceAfterSwap(\n                path.pools[1],\n                path.poolPairData[1],\n                swapType,\n                amount\n            );\n            const dSPaS1 = getDerivativeSpotPriceAfterSwap(\n                path.pools[0],\n                path.poolPairData[0],\n                swapType,\n                outputAmountSwap2\n            );\n            const dSPaS2 = getDerivativeSpotPriceAfterSwap(\n                path.pools[1],\n                path.poolPairData[1],\n                swapType,\n                amount\n            );\n            // For swapExactOut we the outputToken is the amount of tokenIn necessary to buy a given amount of tokenOut\n            // Using the rule of the derivative of the multiplication: d[f(x)*g(x)] = d[f(x)]*g(x) + f(x)*d[g(x)]\n            // where SPaS1 is SpotPriceAfterSwap of pool 1 and OA2 is OutputAmount of pool 2. We then have:\n            // d[SPaS1(OA2(x)) * SPaS2(x)] = d[SPaS1(OA2(x))] * SPaS2(x) + SPaS1(OA2(x)) * d[SPaS2(x)]\n            // Let's expand the term d[SPaS1(OA2(x))] which is trickier:\n            // d[SPaS1(OA2(x))] at x0 = d[SPaS1(x)] at OA2(x0) * d[OA2(x)] at x0,\n            // Since d[OA2(x)] = SPaS2(x) we then have:\n            // d[SPaS1(OA2(x))] = d[SPaS1(x)] * SPaS2(x). Which leads us to:\n            // d[SPaS1(OA2(x)) * SPaS2(x)] = d[SPaS1(x)] * SPaS2(x) * SPaS2(x) + SPaS1(OA2(x)) * d[SPaS2(x)]\n            // return dSPaS2 * SPaS1 + dSPaS1 * SPaS2 * SPaS2\n            return dSPaS2.times(SPaS1).plus(SPaS2.times(SPaS2).times(dSPaS1));\n        }\n    } else {\n        throw new Error('Path with more than 2 swaps not supported');\n    }\n}\n\n// TODO: Add cases for pairType = [BTP->token, token->BTP] and poolType = [weighted, stable]\nexport function getDerivativeSpotPriceAfterSwap(\n    pool: PoolBase,\n    poolPairData: PoolPairBase,\n    swapType: SwapTypes,\n    amount: BigNumber\n): BigNumber {\n    const pairType = poolPairData.pairType;\n\n    // TODO: check if necessary to check if amount > limitAmount\n    if (swapType === SwapTypes.SwapExactIn) {\n        if (poolPairData.balanceIn.isZero()) {\n            return ZERO;\n        }\n    } else {\n        if (poolPairData.balanceOut.isZero()) {\n            return ZERO;\n        }\n        if (amount.gte(poolPairData.balanceOut)) return INFINITY;\n    }\n    if (swapType === SwapTypes.SwapExactIn) {\n        if (pairType === PairTypes.TokenToToken) {\n            return pool._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                amount\n            );\n        } else if (pairType === PairTypes.TokenToBpt) {\n            return pool._derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n                poolPairData,\n                amount\n            );\n        } else if (pairType === PairTypes.BptToToken) {\n            return pool._derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n                poolPairData,\n                amount\n            );\n        }\n    } else {\n        if (pairType === PairTypes.TokenToToken) {\n            return pool._derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n                poolPairData,\n                amount\n            );\n        } else if (pairType === PairTypes.TokenToBpt) {\n            return pool._derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n                poolPairData,\n                amount\n            );\n        } else if (pairType === PairTypes.BptToToken) {\n            return pool._derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n                poolPairData,\n                amount\n            );\n        }\n    }\n}\n\n// We need do pass 'pools' here because this function has to update the pools state\n// in case a pool is used twice in two different paths\nexport function EVMgetOutputAmountSwap(\n    pool: PoolBase,\n    poolPairData: PoolPairBase,\n    swapType: SwapTypes,\n    amount: BigNumber\n): BigNumber {\n    const { pairType, balanceIn, balanceOut, tokenIn, tokenOut } = poolPairData;\n\n    let returnAmount: BigNumber;\n\n    if (swapType === SwapTypes.SwapExactIn) {\n        if (poolPairData.balanceIn.isZero()) {\n            return ZERO;\n        }\n    } else {\n        if (poolPairData.balanceOut.isZero()) {\n            return ZERO;\n        }\n        if (amount.gte(poolPairData.balanceOut)) return INFINITY;\n    }\n    if (swapType === SwapTypes.SwapExactIn) {\n        // TODO we will be able to remove pooltype check once Element EVM maths is available\n        if (\n            pool.poolType === PoolTypes.Weighted ||\n            pool.poolType === PoolTypes.Stable ||\n            pool.poolType === PoolTypes.MetaStable\n        ) {\n            // Will accept/return normalised values\n            if (pairType === PairTypes.TokenToToken) {\n                returnAmount = pool._evmoutGivenIn(poolPairData, amount);\n            } else if (pairType === PairTypes.TokenToBpt) {\n                returnAmount = pool._evmexactTokenInForBPTOut(\n                    poolPairData,\n                    amount\n                );\n            } else if (pairType === PairTypes.BptToToken) {\n                returnAmount = pool._evmexactBPTInForTokenOut(\n                    poolPairData,\n                    amount\n                );\n            }\n        } else if (pool.poolType === PoolTypes.Element) {\n            // TODO this will just be part of above once maths available\n            returnAmount = getOutputAmountSwap(\n                pool,\n                poolPairData,\n                swapType,\n                amount\n            );\n        }\n    } else {\n        // TODO we will be able to remove pooltype check once Element EVM maths is available\n        if (\n            pool.poolType === PoolTypes.Weighted ||\n            pool.poolType === PoolTypes.Stable ||\n            pool.poolType === PoolTypes.MetaStable\n        ) {\n            if (pairType === PairTypes.TokenToToken) {\n                returnAmount = pool._evminGivenOut(poolPairData, amount);\n            } else if (pairType === PairTypes.TokenToBpt) {\n                returnAmount = pool._evmtokenInForExactBPTOut(\n                    poolPairData,\n                    amount\n                );\n            } else if (pairType === PairTypes.BptToToken) {\n                returnAmount = pool._evmbptInForExactTokenOut(\n                    poolPairData,\n                    amount\n                );\n            }\n        } else if (pool.poolType === PoolTypes.Element) {\n            // TODO this will just be part of above once maths available\n            returnAmount = getOutputAmountSwap(\n                pool,\n                poolPairData,\n                swapType,\n                amount\n            );\n        }\n    }\n    // Update balances of tokenIn and tokenOut\n    pool.updateTokenBalanceForPool(tokenIn, balanceIn.plus(returnAmount));\n    pool.updateTokenBalanceForPool(tokenOut, balanceOut.minus(amount));\n\n    return returnAmount;\n}\n","import cloneDeep from 'lodash.clonedeep';\nimport { PRICE_ERROR_TOLERANCE } from '../config';\nimport { bnum, ZERO, ONE, INFINITY } from '../utils/bignumber';\nimport { BigNumber } from '../utils/bignumber';\nimport { SwapTypes, NewPath, PoolDictionary, Swap } from '../types';\nimport {\n    getHighestLimitAmountsForPaths,\n    getEffectivePriceSwapForPath,\n    getSpotPriceAfterSwapForPath,\n    getDerivativeSpotPriceAfterSwapForPath,\n    getOutputAmountSwapForPath,\n    EVMgetOutputAmountSwap,\n} from './helpersClass';\nimport { MaxUint256 } from '@ethersproject/constants';\n\n// TODO get max price from slippage tolerance given by user options\nexport const MAX_UINT = MaxUint256.toString();\n\nconst minAmountOut = 0;\nconst maxAmountIn: string = MAX_UINT;\nconst maxPrice: string = MAX_UINT;\n\nexport const smartOrderRouter = (\n    pools: PoolDictionary,\n    paths: NewPath[],\n    swapType: SwapTypes,\n    totalSwapAmount: BigNumber,\n    maxPools: number,\n    costReturnToken: BigNumber\n): [Swap[][], BigNumber, BigNumber, BigNumber] => {\n    let bestTotalReturn: BigNumber = new BigNumber(0);\n    let bestTotalReturnConsideringFees: BigNumber = new BigNumber(0);\n    let totalReturn, totalReturnConsideringFees;\n    let bestSwapAmounts, bestPaths, swapAmounts;\n\n    // No paths available or totalSwapAmount == 0, return empty solution\n    if (paths.length == 0 || totalSwapAmount.isZero()) {\n        return [[], ZERO, ZERO, ZERO];\n    }\n    // Before we start the main loop, we first check if there is enough liquidity for this totalSwapAmount at all\n    const highestLimitAmounts = getHighestLimitAmountsForPaths(paths, maxPools);\n\n    //  We use the highest limits to define the initial number of pools considered and the initial guess for swapAmounts. If the\n    //  highest_limit is lower than totalSwapAmount, then we should obviously not waste time trying to calculate the SOR suggestion for 1 pool,\n    //  Same for 2, 3 pools etc.\n    let initialNumPaths = -1; // Initializing\n    for (let i = 0; i < maxPools; i++) {\n        const sumHighestLimitAmounts = highestLimitAmounts\n            .slice(0, i + 1)\n            .reduce((a, b) => a.plus(b));\n        if (totalSwapAmount.gt(sumHighestLimitAmounts)) continue; // the i initial pools are not enough to get to totalSwapAmount, continue\n        //  If above is false, it means we have enough liquidity with first i pools\n        initialNumPaths = i + 1;\n        swapAmounts = highestLimitAmounts.slice(0, initialNumPaths);\n        //  Since the sum of the first i highest limits will be less than totalSwapAmount, we remove the difference to the last swapAmount\n        //  so we are sure that the sum of swapAmounts will be equal to totalSwapAmount\n        const difference = sumHighestLimitAmounts.minus(totalSwapAmount);\n        swapAmounts[swapAmounts.length - 1] =\n            swapAmounts[swapAmounts.length - 1].minus(difference);\n        break; // No need to keep looping as this number of pools (i) has enough liquidity\n    }\n    if (initialNumPaths == -1) {\n        return [[], ZERO, ZERO, ZERO]; // Not enough liquidity, return empty\n    }\n\n    // First get the optimal totalReturn to trade 'totalSwapAmount' with\n    // one path only (b=1). Then increase the number of pools as long as\n    // improvementCondition is true (see more information below)\n    for (let b = initialNumPaths; b <= paths.length; b++) {\n        totalReturn = 0;\n        if (b != initialNumPaths) {\n            // We already had a previous iteration and are adding another pool this new iteration\n            // swapAmounts.push(ONE); // Initialize new swapAmount with 1 wei to\n            // // make sure that it won't be considered as a non viable amount (which would\n            // // be the case if it started at 0)\n\n            // Start new path at 1/b of totalSwapAmount (i.e. if this is the 5th pool, we start with\n            // 20% of the totalSwapAmount for this new swapAmount added). However, we need to make sure\n            // that this value is not higher then the bth limit of the paths available otherwise there\n            // won't be any possible path to process this swapAmount:\n            const newSwapAmount = BigNumber.min.apply(null, [\n                totalSwapAmount.times(bnum(1 / b)),\n                highestLimitAmounts[b - 1],\n            ]);\n            // We need then to multiply all current\n            // swapAmounts by 1-newSwapAmount/totalSwapAmount.\n            swapAmounts.forEach((swapAmount, i) => {\n                swapAmounts[i] = swapAmounts[i].times(\n                    ONE.minus(newSwapAmount.div(totalSwapAmount))\n                );\n            });\n            swapAmounts.push(newSwapAmount);\n        }\n\n        //  iterate until we converge to the best pools for a given totalSwapAmount\n        //  first initialize variables\n        const historyOfSortedPathIds = [];\n        let selectedPaths;\n        let [\n            newSelectedPaths,\n            exceedingAmounts,\n            selectedPathLimitAmounts,\n            pathIds,\n        ] = getBestPathIds(pools, paths, swapType, swapAmounts);\n\n        // Check if ids are in history of ids, but first sort and stringify to make comparison possible\n        // Copy array https://stackoverflow.com/a/42442909\n        let sortedPathIdsJSON = JSON.stringify([...pathIds].sort()); // Just to check if this set of paths has already been chosen\n        // We now loop to iterateSwapAmounts until we converge. This is not necessary\n        // for just 1 path because swapAmount will always be totalSwapAmount\n        while (!historyOfSortedPathIds.includes(sortedPathIdsJSON) && b > 1) {\n            historyOfSortedPathIds.push(sortedPathIdsJSON); // We store all previous paths ids to avoid infinite loops because of local minima\n            selectedPaths = newSelectedPaths;\n            [swapAmounts, exceedingAmounts] = iterateSwapAmounts(\n                pools,\n                selectedPaths,\n                swapType,\n                totalSwapAmount,\n                swapAmounts,\n                exceedingAmounts,\n                selectedPathLimitAmounts\n            );\n            [\n                newSelectedPaths,\n                exceedingAmounts,\n                selectedPathLimitAmounts,\n                pathIds,\n            ] = getBestPathIds(pools, paths, swapType, swapAmounts);\n\n            if (pathIds.length === 0) break;\n\n            sortedPathIdsJSON = JSON.stringify([...pathIds].sort());\n        }\n        // In case b = 1 the while above was skipped and we need to define selectedPaths\n        if (b == 1) selectedPaths = newSelectedPaths;\n\n        totalReturn = calcTotalReturn(selectedPaths, swapType, swapAmounts);\n\n        // Calculates the number of pools in all the paths to include the gas costs\n        let totalNumberOfPools = 0;\n        selectedPaths.forEach((path) => {\n            totalNumberOfPools += path.swaps.length;\n        });\n\n        // improvementCondition is true if we are improving the totalReturn\n        // Notice that totalReturn has to be maximized for 'swapExactIn'\n        // and MINIMIZED for 'swapExactOut'\n        // This is because for the case of 'swapExactOut', totalReturn means the\n        // amount of tokenIn needed to buy totalSwapAmount of tokenOut\n        let improvementCondition = false;\n        if (swapType === SwapTypes.SwapExactIn) {\n            totalReturnConsideringFees = totalReturn.minus(\n                bnum(totalNumberOfPools).times(costReturnToken)\n            );\n            improvementCondition =\n                totalReturnConsideringFees.isGreaterThan(\n                    bestTotalReturnConsideringFees\n                ) || b === initialNumPaths; // b === initialNumPaths means its the first iteration so bestTotalReturnConsideringFees isn't currently a value\n        } else {\n            totalReturnConsideringFees = totalReturn.plus(\n                bnum(totalNumberOfPools).times(costReturnToken)\n            );\n            improvementCondition =\n                totalReturnConsideringFees.isLessThan(\n                    bestTotalReturnConsideringFees\n                ) || b === initialNumPaths; // b === initialNumPaths means its the first iteration so bestTotalReturnConsideringFees isn't currently a value\n        }\n        if (improvementCondition === true) {\n            bestSwapAmounts = [...swapAmounts]; // Copy to avoid linking variables\n            bestPaths = [...selectedPaths];\n            bestTotalReturn = totalReturn;\n            bestTotalReturnConsideringFees = totalReturnConsideringFees;\n        } else {\n            break;\n        }\n\n        // Stop if max number of pools has been reached\n        if (totalNumberOfPools >= maxPools) break;\n    }\n\n    //// Prepare swap data from paths\n    let swaps: Swap[][] = [];\n    let totalSwapAmountWithRoundingErrors: BigNumber = new BigNumber(0);\n    let dust: BigNumber = new BigNumber(0);\n    let lenghtFirstPath;\n    let highestSwapAmt = ZERO;\n    let largestSwapPath: NewPath;\n    bestTotalReturn = ZERO; // Reset totalReturn as this time it will be\n    // calculated with the EVM maths so the return is exactly what the user will get\n    // after executing the transaction (given there are no front-runners)\n    bestPaths.forEach((path, i) => {\n        const swapAmount = bestSwapAmounts[i];\n        // 0 swap amounts can occur due to rounding errors but we don't want to pass those on so filter out\n        if (swapAmount.isZero()) return;\n\n        if (swapAmount.gt(highestSwapAmt)) {\n            highestSwapAmt = swapAmount;\n            largestSwapPath = path;\n        }\n        totalSwapAmountWithRoundingErrors =\n            totalSwapAmountWithRoundingErrors.plus(swapAmount);\n\n        // // TODO: remove. To debug only!\n        /*\n        console.log(\n            'Prices should be all very close (unless one of the paths is on the limit!'\n        );\n        console.log(\n            getSpotPriceAfterSwapForPath(path, swapType, swapAmount).toNumber()\n        );\n            */\n        const poolPairData = path.poolPairData;\n\n        if (i == 0)\n            // Store lenght of first path to add dust to correct rounding error at the end\n            lenghtFirstPath = path.swaps.length;\n\n        let returnAmount;\n\n        if (poolPairData.length == 1) {\n            // Direct trade: add swap from only pool\n            const swap: Swap = {\n                pool: path.swaps[0].pool,\n                tokenIn: path.swaps[0].tokenIn,\n                tokenOut: path.swaps[0].tokenOut,\n                swapAmount: swapAmount.toString(),\n                limitReturnAmount:\n                    swapType === SwapTypes.SwapExactIn\n                        ? minAmountOut.toString()\n                        : maxAmountIn,\n                maxPrice: maxPrice,\n                tokenInDecimals: path.poolPairData[0].decimalsIn.toString(),\n                tokenOutDecimals: path.poolPairData[0].decimalsOut.toString(),\n            };\n            swaps.push([swap]);\n            // Call EVMgetOutputAmountSwap to guarantee pool state is updated\n            returnAmount = EVMgetOutputAmountSwap(\n                path.pools[0],\n                poolPairData[0],\n                swapType,\n                swapAmount\n            );\n        } else {\n            // Multi-hop:\n\n            let amountSwap1, amountSwap2;\n            if (swapType === SwapTypes.SwapExactIn) {\n                amountSwap1 = swapAmount;\n                amountSwap2 = EVMgetOutputAmountSwap(\n                    path.pools[0],\n                    poolPairData[0],\n                    swapType,\n                    swapAmount\n                );\n                // Call EVMgetOutputAmountSwap to update the pool state\n                // for the second hop as well (the first was updated above)\n                returnAmount = EVMgetOutputAmountSwap(\n                    path.pools[1],\n                    poolPairData[1],\n                    swapType,\n                    amountSwap2\n                );\n            } else {\n                amountSwap1 = EVMgetOutputAmountSwap(\n                    path.pools[1],\n                    poolPairData[1],\n                    swapType,\n                    swapAmount\n                );\n                amountSwap2 = swapAmount;\n                // Call EVMgetOutputAmountSwap to update the pool state\n                // for the second hop as well (the first was updated above)\n                returnAmount = EVMgetOutputAmountSwap(\n                    path.pools[0],\n                    poolPairData[0],\n                    swapType,\n                    amountSwap1\n                );\n            }\n\n            // Add swap from first pool\n            const swap1hop: Swap = {\n                pool: path.swaps[0].pool,\n                tokenIn: path.swaps[0].tokenIn,\n                tokenOut: path.swaps[0].tokenOut,\n                swapAmount: amountSwap1.toString(),\n                limitReturnAmount:\n                    swapType === SwapTypes.SwapExactIn\n                        ? minAmountOut.toString()\n                        : maxAmountIn,\n                maxPrice: maxPrice,\n                tokenInDecimals: path.poolPairData[0].decimalsIn.toString(),\n                tokenOutDecimals: path.poolPairData[0].decimalsOut.toString(),\n            };\n\n            // Add swap from second pool\n            const swap2hop: Swap = {\n                pool: path.swaps[1].pool,\n                tokenIn: path.swaps[1].tokenIn,\n                tokenOut: path.swaps[1].tokenOut,\n                swapAmount: amountSwap2.toString(),\n                limitReturnAmount:\n                    swapType === SwapTypes.SwapExactIn\n                        ? minAmountOut.toString()\n                        : maxAmountIn,\n                maxPrice: maxPrice,\n                tokenInDecimals: path.poolPairData[1].decimalsIn.toString(),\n                tokenOutDecimals: path.poolPairData[1].decimalsOut.toString(),\n            };\n            swaps.push([swap1hop, swap2hop]);\n        }\n        // Update bestTotalReturn with EVM return\n        bestTotalReturn = bestTotalReturn.plus(returnAmount);\n    });\n\n    // Since the individual swapAmounts for each path are integers, the sum of all swapAmounts\n    // might not be exactly equal to the totalSwapAmount the user requested. We need to correct that rounding error\n    // and we do that by adding the rounding error to the first path.\n    if (swaps.length > 0) {\n        dust = totalSwapAmount.minus(totalSwapAmountWithRoundingErrors);\n        if (swapType === SwapTypes.SwapExactIn) {\n            swaps[0][0].swapAmount = new BigNumber(swaps[0][0].swapAmount)\n                .plus(dust)\n                .toString(); // Add dust to first swapExactIn\n        } else {\n            if (lenghtFirstPath == 1)\n                // First path is a direct path (only one pool)\n                swaps[0][0].swapAmount = new BigNumber(swaps[0][0].swapAmount)\n                    .plus(dust)\n                    .toString();\n            // Add dust to first swapExactOut\n            // First path is a multihop path (two pools)\n            else\n                swaps[0][1].swapAmount = new BigNumber(swaps[0][1].swapAmount)\n                    .plus(dust)\n                    .toString(); // Add dust to second swapExactOut\n        }\n    }\n\n    let marketSp = ZERO;\n    if (!bestTotalReturn.eq(0))\n        marketSp = getSpotPriceAfterSwapForPath(\n            largestSwapPath,\n            swapType,\n            ZERO\n        );\n    else {\n        swaps = [];\n        marketSp = ZERO;\n        bestTotalReturnConsideringFees = ZERO;\n    }\n\n    return [swaps, bestTotalReturn, marketSp, bestTotalReturnConsideringFees];\n};\n\n//  For a given list of swapAmounts, gets list of pools with best effective price for these amounts\n//  Always choose best pool for highest swapAmount first, then 2nd swapAmount and so on. This is\n//  because it's best to use the best effective price for the highest amount to be traded\nfunction getBestPathIds(\n    pools: PoolDictionary,\n    originalPaths: NewPath[],\n    swapType: SwapTypes,\n    swapAmounts: BigNumber[]\n): [NewPath[], BigNumber[], BigNumber[], string[]] {\n    const bestPathIds = [];\n    const selectedPaths = [];\n    const selectedPathLimitAmounts = [];\n    const selectedPathExceedingAmounts = [];\n    const paths = cloneDeep(originalPaths); // Deep copy to avoid changing the original path data\n\n    // Sort swapAmounts in descending order without changing original: https://stackoverflow.com/a/42442909\n    const sortedSwapAmounts = [...swapAmounts].sort((a, b) => {\n        return b.minus(a).toNumber();\n    });\n\n    for (let i = 0; i < sortedSwapAmounts.length; i++) {\n        const swapAmount: BigNumber = sortedSwapAmounts[i];\n        // Find path that has best effective price\n        let bestPathIndex = -1;\n        let bestEffectivePrice = INFINITY; // Start with worst price possible\n        paths.forEach((path, j) => {\n            // Do not consider this path if its limit is below swapAmount\n            if (path.limitAmount.gte(swapAmount)) {\n                // Calculate effective price of this path for this swapAmount\n                // If path.limitAmount = swapAmount we set effectivePrice as\n                // Infinity because we know this path is maxed out and we want\n                // to select other paths that can still be improved on\n                let effectivePrice;\n                if (path.limitAmount.eq(swapAmount)) {\n                    effectivePrice = INFINITY;\n                } else {\n                    // TODO for optimization: pass already calculated limitAmount as input\n                    // to getEffectivePriceSwapForPath()\n                    effectivePrice = getEffectivePriceSwapForPath(\n                        pools,\n                        path,\n                        swapType,\n                        swapAmount\n                    );\n                }\n                if (effectivePrice.lte(bestEffectivePrice)) {\n                    bestEffectivePrice = effectivePrice;\n                    bestPathIndex = j;\n                }\n            }\n        });\n\n        if (bestPathIndex === -1) {\n            return [[], [], [], []];\n        }\n        bestPathIds.push(paths[bestPathIndex].id);\n        selectedPaths.push(paths[bestPathIndex]);\n        selectedPathLimitAmounts.push(paths[bestPathIndex].limitAmount);\n        selectedPathExceedingAmounts.push(\n            swapAmount.minus(paths[bestPathIndex].limitAmount)\n        );\n        paths.splice(bestPathIndex, 1); // Remove path from list\n    }\n    return [\n        selectedPaths,\n        selectedPathExceedingAmounts,\n        selectedPathLimitAmounts,\n        bestPathIds,\n    ];\n}\n\n// This functions finds the swapAmounts such that all the paths that have viable swapAmounts (i.e.\n// that are not negative or equal to limitAmount) bring their respective prices after swap to the\n// same price (which means that this is the optimal solution for the paths analyzed)\nfunction iterateSwapAmounts(\n    pools: PoolDictionary,\n    selectedPaths: NewPath[],\n    swapType: SwapTypes,\n    totalSwapAmount: BigNumber,\n    swapAmounts: BigNumber[],\n    exceedingAmounts: BigNumber[],\n    pathLimitAmounts: BigNumber[]\n): [BigNumber[], BigNumber[]] {\n    let priceError = ONE; // Initialize priceError just so that while starts\n    let prices = [];\n    // // Since this is the beginning of an iteration with a new set of paths, we\n    // // set any swapAmounts that were 0 previously to 1 wei or at the limit\n    // // to limit minus 1 wei just so that they\n    // // are considered as viable for iterateSwapAmountsApproximation(). If they were\n    // // left at 0 iterateSwapAmountsApproximation() would consider them already outside\n    // // the viable range and would not iterate on them. This is useful when\n    // // iterateSwapAmountsApproximation() is being repeatedly called within the while loop\n    // // below, but not when a new execution of iterateSwapAmounts() happens with new\n    // // paths.\n    // for (let i = 0; i < swapAmounts.length; ++i) {\n    //     if (swapAmounts[i].isZero()) {\n    //         // Very small amount: TODO put in config file\n    //         const epsilon = totalSwapAmount.times(INFINITESIMAL);\n    //         swapAmounts[i] = epsilon;\n    //         exceedingAmounts[i] = exceedingAmounts[i].plus(epsilon);\n    //     }\n    //     if (exceedingAmounts[i].isZero()) {\n    //         // Very small amount: TODO put in config file\n    //         const epsilon = totalSwapAmount.times(INFINITESIMAL);\n    //         swapAmounts[i] = swapAmounts[i].minus(epsilon); // Very small amount\n    //         exceedingAmounts[i] = exceedingAmounts[i].minus(epsilon);\n    //     }\n    // }\n    let iterationCount = 0;\n    while (priceError.isGreaterThan(PRICE_ERROR_TOLERANCE)) {\n        [prices, swapAmounts, exceedingAmounts] =\n            iterateSwapAmountsApproximation(\n                pools,\n                selectedPaths,\n                swapType,\n                totalSwapAmount,\n                swapAmounts,\n                exceedingAmounts,\n                pathLimitAmounts,\n                iterationCount\n            );\n        const maxPrice = BigNumber.max.apply(null, prices);\n        const minPrice = BigNumber.min.apply(null, prices);\n        priceError = maxPrice.minus(minPrice).div(minPrice);\n        iterationCount++;\n        if (iterationCount > 100) break;\n    }\n    return [swapAmounts, exceedingAmounts];\n}\n\nfunction iterateSwapAmountsApproximation(\n    pools: PoolDictionary,\n    selectedPaths: NewPath[],\n    swapType: SwapTypes,\n    totalSwapAmount: BigNumber,\n    swapAmounts: BigNumber[],\n    exceedingAmounts: BigNumber[], // This is the amount by which swapAmount exceeds the pool limit_amount\n    pathLimitAmounts: BigNumber[],\n    iterationCount: number\n): [BigNumber[], BigNumber[], BigNumber[]] {\n    let sumInverseDerivativeSPaSs = ZERO;\n    let sumSPaSDividedByDerivativeSPaSs = ZERO;\n    const SPaSs = [];\n    const derivativeSPaSs = [];\n\n    // We only iterate on the swapAmounts that are viable (i.e. no negative or > than path limit)\n    // OR if this is the first time \"iterateSwapAmountsApproximation\" is called\n    // within \"iterateSwapAmounts()\". In this case swapAmounts should be considered viable\n    // also if they are on the limit.\n    swapAmounts.forEach((swapAmount, i) => {\n        // if (swapAmount.gt(ZERO) && exceedingAmounts[i].lt(ZERO)) {\n        if (\n            (iterationCount == 0 &&\n                swapAmount.gte(ZERO) &&\n                exceedingAmounts[i].lte(ZERO)) ||\n            (iterationCount != 0 &&\n                swapAmount.gt(ZERO) &&\n                exceedingAmounts[i].lt(ZERO))\n        ) {\n            const path = selectedPaths[i];\n            const SPaS = getSpotPriceAfterSwapForPath(\n                path,\n                swapType,\n                swapAmount\n            );\n            SPaSs.push(SPaS);\n            const derivative_SPaS = getDerivativeSpotPriceAfterSwapForPath(\n                path,\n                swapType,\n                swapAmount\n            );\n            derivativeSPaSs.push(derivative_SPaS);\n            sumInverseDerivativeSPaSs = sumInverseDerivativeSPaSs.plus(\n                ONE.div(derivative_SPaS)\n            );\n            sumSPaSDividedByDerivativeSPaSs =\n                sumSPaSDividedByDerivativeSPaSs.plus(SPaS.div(derivative_SPaS));\n        } else {\n            // This swapAmount is not viable but we push to keep list length consistent\n            derivativeSPaSs.push(bnum('NaN'));\n            SPaSs.push(bnum('NaN'));\n        }\n    });\n    // // This division using BigNumber below lost precision. Its result was for example\n    // 1.042818e-12 while using normal js math operations it was\n    // 1.0428184989387553e-12. This loss of precision caused an important bug\n\n    // let weighted_average_SPaS = sumSPaSDividedByDerivativeSPaSs.div(\n    //     sumInverseDerivativeSPaSs\n    // );\n    const weighted_average_SPaS = bnum(\n        sumSPaSDividedByDerivativeSPaSs.toNumber() /\n            sumInverseDerivativeSPaSs.toNumber()\n    );\n\n    swapAmounts.forEach((swapAmount, i) => {\n        if (\n            (iterationCount == 0 &&\n                swapAmount.gte(ZERO) &&\n                exceedingAmounts[i].lte(ZERO)) ||\n            (iterationCount != 0 &&\n                swapAmount.gt(ZERO) &&\n                exceedingAmounts[i].lt(ZERO))\n        ) {\n            const deltaSwapAmount = weighted_average_SPaS\n                .minus(SPaSs[i])\n                .div(derivativeSPaSs[i]);\n            swapAmounts[i] = swapAmounts[i].plus(deltaSwapAmount);\n            exceedingAmounts[i] = exceedingAmounts[i].plus(deltaSwapAmount);\n        }\n    });\n\n    // Make sure no input amount is negative or above the path limit\n    while (\n        BigNumber.min.apply(null, swapAmounts).lt(ZERO) ||\n        BigNumber.max.apply(null, exceedingAmounts).gt(ZERO)\n    ) {\n        [swapAmounts, exceedingAmounts] = redistributeInputAmounts(\n            swapAmounts,\n            exceedingAmounts,\n            derivativeSPaSs\n        );\n    }\n\n    const pricesForViableAmounts = []; // Get prices for all non-negative AND below-limit input amounts\n    let swapAmountsSumWithRoundingErrors = ZERO;\n    swapAmounts.forEach((swapAmount, i) => {\n        swapAmountsSumWithRoundingErrors =\n            swapAmountsSumWithRoundingErrors.plus(swapAmount);\n        if (\n            (iterationCount == 0 &&\n                swapAmount.gte(ZERO) &&\n                exceedingAmounts[i].lte(ZERO)) ||\n            (iterationCount != 0 &&\n                swapAmount.gt(ZERO) &&\n                exceedingAmounts[i].lt(ZERO))\n        )\n            pricesForViableAmounts.push(\n                getSpotPriceAfterSwapForPath(\n                    selectedPaths[i],\n                    swapType,\n                    swapAmount\n                )\n            );\n    });\n\n    const roundingError = totalSwapAmount.minus(\n        swapAmountsSumWithRoundingErrors\n    );\n    // console.log(\"Rounding error\")\n    // console.log(roundingError.div(totalSwapAmount).toNumber())\n    // // let errorLimit = totalSwapAmount.times(bnum(0.001))\n    // // if(roundingError>errorLimit)\n    // //     throw \"Rounding error in iterateSwapAmountsApproximation() too large\";\n\n    // Add rounding error to make sum be exactly equal to totalSwapAmount to avoid error compounding\n    // Add to the first swapAmount that is already not zero or at the limit\n    // AND only if swapAmount would not leave the viable range (i.e. swapAmoung\n    // would still be >0 and <limit) after adding the error\n    // I.d. we need: (swapAmount+error)>0 AND (exceedingAmount+error)<0\n    for (let i = 0; i < swapAmounts.length; ++i) {\n        if (swapAmounts[i].gt(ZERO) && exceedingAmounts[i].lt(ZERO)) {\n            if (\n                swapAmounts[i].plus(roundingError).gt(ZERO) &&\n                exceedingAmounts[i].plus(roundingError).lt(ZERO)\n            ) {\n                swapAmounts[i] = swapAmounts[i].plus(roundingError);\n                exceedingAmounts[i] = exceedingAmounts[i].plus(roundingError);\n                break;\n            }\n        }\n    }\n\n    return [pricesForViableAmounts, swapAmounts, exceedingAmounts];\n}\n\nfunction redistributeInputAmounts(\n    swapAmounts: BigNumber[],\n    exceedingAmounts: BigNumber[],\n    derivativeSPaSs: BigNumber[]\n): [BigNumber[], BigNumber[]] {\n    let sumInverseDerivativeSPaSsForViableAmounts = ZERO;\n    let sumInverseDerivativeSPaSsForNegativeAmounts = ZERO;\n    let sumInverseDerivativeSPaSsForExceedingAmounts = ZERO;\n    let sumNegativeOrExceedingSwapAmounts = ZERO;\n    swapAmounts.forEach((swapAmount, i) => {\n        // Amount is negative\n        if (swapAmount.lte(ZERO)) {\n            sumNegativeOrExceedingSwapAmounts =\n                sumNegativeOrExceedingSwapAmounts.plus(swapAmount);\n            sumInverseDerivativeSPaSsForNegativeAmounts =\n                sumInverseDerivativeSPaSsForNegativeAmounts.plus(\n                    ONE.div(derivativeSPaSs[i])\n                );\n        }\n        // Amount is above limit (exceeding > 0)\n        else if (exceedingAmounts[i].gte(ZERO)) {\n            sumNegativeOrExceedingSwapAmounts =\n                sumNegativeOrExceedingSwapAmounts.plus(exceedingAmounts[i]);\n            sumInverseDerivativeSPaSsForExceedingAmounts =\n                sumInverseDerivativeSPaSsForExceedingAmounts.plus(\n                    ONE.div(derivativeSPaSs[i])\n                );\n        }\n        // Sum the inverse of the derivative if the swapAmount is viable,\n        // i.e. if swapAmount > 0 or swapAmount < limit\n        else\n            sumInverseDerivativeSPaSsForViableAmounts =\n                sumInverseDerivativeSPaSsForViableAmounts.plus(\n                    ONE.div(derivativeSPaSs[i])\n                );\n    });\n\n    // Now redestribute sumNegativeOrExceedingSwapAmounts\n    // to non-exceeding pools if sumNegativeOrExceedingSwapAmounts > 0\n    // or to non zero swapAmount pools if sumNegativeOrExceedingSwapAmounts < 0\n    swapAmounts.forEach((swapAmount, i) => {\n        if (swapAmount.lte(ZERO)) {\n            swapAmounts[i] = ZERO;\n            exceedingAmounts[i] = exceedingAmounts[i].minus(swapAmount);\n        } else if (exceedingAmounts[i].gte(ZERO)) {\n            swapAmounts[i] = swapAmounts[i].minus(exceedingAmounts[i]); // This is the same as swapAmounts[i] = pathLimitAmounts[i]\n            exceedingAmounts[i] = ZERO;\n        } else {\n            const deltaSwapAmount = sumNegativeOrExceedingSwapAmounts\n                .times(ONE.div(derivativeSPaSs[i]))\n                .div(sumInverseDerivativeSPaSsForViableAmounts);\n            swapAmounts[i] = swapAmounts[i].plus(deltaSwapAmount);\n            exceedingAmounts[i] = exceedingAmounts[i].plus(deltaSwapAmount);\n        }\n    });\n\n    // If there were no viable amounts (i.e all amounts were either negative or above limit)\n    // We run this extra loop to redistribute the excess\n    if (sumInverseDerivativeSPaSsForViableAmounts.isZero()) {\n        if (sumNegativeOrExceedingSwapAmounts.lt(ZERO)) {\n            // This means we need to redistribute to the exceeding amounts that\n            // were now set to the limit\n            swapAmounts.forEach((swapAmount, i) => {\n                if (exceedingAmounts[i].isZero()) {\n                    const deltaSwapAmount = sumNegativeOrExceedingSwapAmounts\n                        .times(ONE.div(derivativeSPaSs[i]))\n                        .div(sumInverseDerivativeSPaSsForExceedingAmounts);\n                    swapAmounts[i] = swapAmounts[i].plus(deltaSwapAmount);\n                    exceedingAmounts[i] =\n                        exceedingAmounts[i].plus(deltaSwapAmount);\n                }\n            });\n        } else {\n            // This means we need to redistribute to the negative amounts that\n            // were now set to zero\n            swapAmounts.forEach((swapAmount, i) => {\n                if (swapAmounts[i].isZero()) {\n                    const deltaSwapAmount = sumNegativeOrExceedingSwapAmounts\n                        .times(ONE.div(derivativeSPaSs[i]))\n                        .div(sumInverseDerivativeSPaSsForNegativeAmounts);\n                    swapAmounts[i] = swapAmounts[i].plus(deltaSwapAmount);\n                    exceedingAmounts[i] =\n                        exceedingAmounts[i].plus(deltaSwapAmount);\n                }\n            });\n        }\n    }\n    return [swapAmounts, exceedingAmounts];\n}\n\n// TODO: calculate EVM return (use bmath) and update pool balances like current SOR\nexport const calcTotalReturn = (\n    paths: NewPath[],\n    swapType: SwapTypes,\n    swapAmounts: BigNumber[]\n): BigNumber => {\n    let totalReturn = new BigNumber(0);\n    // changing the contents of pools (parameter passed as reference)\n    paths.forEach((path, i) => {\n        totalReturn = totalReturn.plus(\n            getOutputAmountSwapForPath(path, swapType, swapAmounts[i])\n        );\n    });\n    return totalReturn;\n};\n","import { ZERO } from './utils/bignumber';\nimport { SwapInfo } from './types';\n\nexport const WETHADDR: { [chainId: number]: string } = {\n    1: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n    5: '0x9A1000D492d40bfccbc03f413A48F5B6516Ec0Fd',\n    42: '0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1',\n    137: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // For Polygon this is actually wrapped MATIC\n    42161: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\n};\n\nexport const MULTIADDR: { [chainId: number]: string } = {\n    1: '0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    5: '0x3b2A02F22fCbc872AF77674ceD303eb269a46ce3',\n    42: '0x2cc8688C5f75E365aaEEb4ea8D6a480405A48D2A',\n    137: '0xa1B2b503959aedD81512C37e9dce48164ec6a94d',\n    42161: '0x269ff446d9892c9e19082564df3f5e8741e190a1',\n};\n\nexport const VAULTADDR: { [chainId: number]: string } = {\n    1: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n    5: '0x65748E8287Ce4B9E6D83EE853431958851550311',\n    42: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n    137: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n    42161: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n};\n\nexport const EMPTY_SWAPINFO: SwapInfo = {\n    tokenAddresses: [],\n    swaps: [],\n    swapAmount: ZERO,\n    swapAmountForSwaps: ZERO,\n    tokenIn: '',\n    tokenOut: '',\n    returnAmount: ZERO,\n    returnAmountConsideringFees: ZERO,\n    returnAmountFromSwaps: ZERO,\n    marketSp: ZERO,\n};\n","import { BaseProvider } from '@ethersproject/providers';\nimport { AddressZero } from '@ethersproject/constants';\nimport { Contract } from '@ethersproject/contracts';\nimport cloneDeep from 'lodash.clonedeep';\nimport { SubgraphPoolBase, SwapInfo, SwapTypes, SwapV2 } from '../../types';\nimport { parseNewPool } from '../../pools';\nimport { BigNumber, ZERO, scale, bnum } from '../../utils/bignumber';\nimport vaultAbi from '../../abi/Vault.json';\nimport { EMPTY_SWAPINFO } from '../../constants';\n\nexport const Lido = {\n    Networks: [1, 42],\n    stETH: {\n        1: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        42: '0x4803bb90d18a1cb7a2187344fe4feb0e07878d05',\n    },\n    wstETH: {\n        1: '0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0',\n        42: '0xa387b91e393cfb9356a460370842bc8dbb2f29af',\n    },\n    WETH: {\n        1: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        42: '0xdfcea9088c8a88a76ff74892c1457c17dfeef9c1',\n    },\n    DAI: {\n        1: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        42: '0x04df6e4121c27713ed22341e7c7df330f56f289b',\n    },\n    USDC: {\n        1: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        42: '0xc2569dd7d0fd715b054fbf16e75b001e5c0c1115',\n    },\n    USDT: {\n        1: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        42: '0xcc08220af469192c53295fdd34cfb8df29aa17ab',\n    },\n    StaticPools: {\n        // DAI/USDC/USDT\n        staBal: {\n            1: '0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063',\n            42: '0x45f78862bd3aa5205e63141fa7f2d35f38eb87c30000000000000000000000fd',\n        },\n        // WETH/DAI (WETH/USDC on Kovan)\n        wethDai: {\n            1: '0x0b09dea16768f0799065c475be02919503cb2a3500020000000000000000001a',\n            42: '0x3a19030ed746bd1c3f2b0f996ff9479af04c5f0a000200000000000000000004',\n        },\n        // WETH/wstETH Lido Pool\n        wstEthWeth: {\n            1: '0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080',\n            42: '0xe08590bde837eb9b2d42aa1196469d6e08fe96ec000200000000000000000101',\n        },\n    },\n};\n\nexport const Routes = {\n    1: {},\n    42: {},\n};\n\n// MAINNET STATIC ROUTES FOR LIDO <> Stable\n// DAI/wstETH: DAI > WETH > wstETH\nRoutes[1][`${Lido.DAI[1]}${Lido.wstETH[1]}0`] = {\n    name: 'DAI/wstETH-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/DAI: wstETH > WETH > DAI\nRoutes[1][`${Lido.wstETH[1]}${Lido.DAI[1]}0`] = {\n    name: 'wstETH/DAI-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n    ],\n};\n\n// DAI/wstETH: DAI > WETH > wstETH\nRoutes[1][`${Lido.DAI[1]}${Lido.wstETH[1]}1`] = {\n    name: 'DAI/wstETH-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/DAI: wstETH > WETH > DAI\nRoutes[1][`${Lido.wstETH[1]}${Lido.DAI[1]}1`] = {\n    name: 'wstETH/DAI-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// USDC/wstETH: USDC > DAI > WETH > wstETH\nRoutes[1][`${Lido.USDC[1]}${Lido.wstETH[1]}0`] = {\n    name: 'USDC/wstETH-SwapExactIn',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDC[1], Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[1][`${Lido.USDC[1]}${Lido.wstETH[1]}1`] = {\n    name: 'USDC/wstETH-SwapExactOut',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDC[1], Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/USDC: wstETH > WETH > DAI > USDC\nRoutes[1][`${Lido.wstETH[1]}${Lido.USDC[1]}0`] = {\n    name: 'wstETH/USDC-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1], Lido.USDC[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '0',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[1][`${Lido.wstETH[1]}${Lido.USDC[1]}1`] = {\n    name: 'wstETH/USDC-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1], Lido.USDC[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// USDT/wstETH: USDT > DAI > WETH > wstETH\nRoutes[1][`${Lido.USDT[1]}${Lido.wstETH[1]}0`] = {\n    name: 'USDT/wstETH-SwapExactIn',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDT[1], Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[1][`${Lido.USDT[1]}${Lido.wstETH[1]}1`] = {\n    name: 'USDT/wstETH-SwapExactOut',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDT[1], Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/USDT: wstETH > WETH > DAI > USDT\nRoutes[1][`${Lido.wstETH[1]}${Lido.USDT[1]}0`] = {\n    name: 'wstETH/USDT-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1], Lido.USDT[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '0',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[1][`${Lido.wstETH[1]}${Lido.USDT[1]}1`] = {\n    name: 'wstETH/USDT-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1], Lido.USDT[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// KOVAN STATIC ROUTES FOR LIDO <> Stable\n// USDC/wstETH: USDC > WETH > wstETH\nRoutes[42][`${Lido.USDC[42]}${Lido.wstETH[42]}0`] = {\n    name: 'USDC/wstETH-SwapExactIn',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDC[42], Lido.WETH[42], Lido.wstETH[42]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/USDC: wstETH > WETH > USDC\nRoutes[42][`${Lido.wstETH[42]}${Lido.USDC[42]}0`] = {\n    name: 'wstETH/USDC-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[42], Lido.WETH[42], Lido.USDC[42]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n    ],\n};\n\n// USDC/wstETH: USDC > WETH > wstETH\nRoutes[42][`${Lido.USDC[42]}${Lido.wstETH[42]}1`] = {\n    name: 'USDC/wstETH-SwapExactOut',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDC[42], Lido.WETH[42], Lido.wstETH[42]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/USDC: wstETH > WETH > USDC\nRoutes[42][`${Lido.wstETH[42]}${Lido.USDC[42]}1`] = {\n    name: 'wstETH/USDC-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[42], Lido.WETH[42], Lido.USDC[42]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// DAI/wstETH: DAI > USDC > WETH > wstETH\nRoutes[42][`${Lido.DAI[42]}${Lido.wstETH[42]}0`] = {\n    name: 'DAI/wstETH-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.DAI[42],\n        Lido.USDC[42],\n        Lido.WETH[42],\n        Lido.wstETH[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[42][`${Lido.DAI[42]}${Lido.wstETH[42]}1`] = {\n    name: 'DAI/wstETH-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.DAI[42],\n        Lido.USDC[42],\n        Lido.WETH[42],\n        Lido.wstETH[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/DAI: wstETH > WETH > USDC > DAI\nRoutes[42][`${Lido.wstETH[42]}${Lido.DAI[42]}0`] = {\n    name: 'wstETH/DAI-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.wstETH[42],\n        Lido.WETH[42],\n        Lido.USDC[42],\n        Lido.DAI[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '0',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[42][`${Lido.wstETH[42]}${Lido.DAI[42]}1`] = {\n    name: 'wstETH/DAI-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.wstETH[42],\n        Lido.WETH[42],\n        Lido.USDC[42],\n        Lido.DAI[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// USDT/wstETH: USDT > USDC > WETH > wstETH\nRoutes[42][`${Lido.USDT[42]}${Lido.wstETH[42]}0`] = {\n    name: 'USDT/wstETH-SwapExactIn',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.USDT[42],\n        Lido.USDC[42],\n        Lido.WETH[42],\n        Lido.wstETH[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[42][`${Lido.USDT[42]}${Lido.wstETH[42]}1`] = {\n    name: 'USDT/wstETH-SwapExactOut',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.USDT[42],\n        Lido.USDC[42],\n        Lido.WETH[42],\n        Lido.wstETH[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/USDT: wstETH > WETH > USDC > USDT\nRoutes[42][`${Lido.wstETH[42]}${Lido.USDT[42]}0`] = {\n    name: 'wstETH/USDT-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [\n        Lido.wstETH[42],\n        Lido.WETH[42],\n        Lido.USDC[42],\n        Lido.USDT[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '0',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[42][`${Lido.wstETH[42]}${Lido.USDT[42]}1`] = {\n    name: 'wstETH/USDT-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [\n        Lido.wstETH[42],\n        Lido.WETH[42],\n        Lido.USDC[42],\n        Lido.USDT[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '',\n            assetInIndex: '2',\n            assetOutIndex: '3',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: '1',\n            assetOutIndex: '2',\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: '0',\n            assetOutIndex: '1',\n            userData: '0x',\n        },\n    ],\n};\n\n// Only want static routes for Lido <> Stable\nexport function isLidoStableSwap(\n    chainId: number,\n    tokenIn: string,\n    tokenOut: string\n): boolean {\n    if (!Lido.Networks.includes(chainId)) return false;\n\n    tokenIn = tokenIn.toLowerCase();\n    tokenOut = tokenOut.toLowerCase();\n\n    if (\n        (tokenIn === Lido.wstETH[chainId] && tokenOut === Lido.DAI[chainId]) ||\n        (tokenIn === Lido.wstETH[chainId] && tokenOut === Lido.USDC[chainId]) ||\n        (tokenIn === Lido.wstETH[chainId] && tokenOut === Lido.USDT[chainId]) ||\n        (tokenIn === Lido.DAI[chainId] && tokenOut === Lido.wstETH[chainId]) ||\n        (tokenIn === Lido.USDC[chainId] && tokenOut === Lido.wstETH[chainId]) ||\n        (tokenIn === Lido.USDT[chainId] && tokenOut === Lido.wstETH[chainId]) ||\n        (tokenIn === Lido.stETH[chainId] && tokenOut === Lido.DAI[chainId]) ||\n        (tokenIn === Lido.stETH[chainId] && tokenOut === Lido.USDC[chainId]) ||\n        (tokenIn === Lido.stETH[chainId] && tokenOut === Lido.USDT[chainId]) ||\n        (tokenIn === Lido.DAI[chainId] && tokenOut === Lido.stETH[chainId]) ||\n        (tokenIn === Lido.USDC[chainId] && tokenOut === Lido.stETH[chainId]) ||\n        (tokenIn === Lido.USDT[chainId] && tokenOut === Lido.stETH[chainId])\n    )\n        return true;\n    else return false;\n}\n\n// Uses Vault queryBatchSwap to get return amount for swap\nasync function queryBatchSwap(\n    swapType: SwapTypes,\n    swaps: SwapV2[],\n    assets: string[],\n    provider: BaseProvider\n): Promise<BigNumber> {\n    const vaultAddr = '0xBA12222222228d8Ba445958a75a0704d566BF2C8';\n    const vaultContract = new Contract(vaultAddr, vaultAbi, provider);\n    const funds = {\n        sender: AddressZero,\n        recipient: AddressZero,\n        fromInternalBalance: false,\n        toInternalBalance: false,\n    };\n\n    try {\n        const deltas = await vaultContract.callStatic.queryBatchSwap(\n            swapType,\n            swaps,\n            assets,\n            funds\n        );\n        // negative amounts represent tokens (or ETH) sent by the Vault\n        if (swapType === SwapTypes.SwapExactIn)\n            return bnum(deltas[assets.length - 1].toString()).times(-1);\n        else return bnum(deltas[0].toString());\n    } catch (err) {\n        console.error(\n            `SOR - Lido Static Route QueryBatchSwap Error. No swaps.`\n        );\n        return bnum(0);\n    }\n}\n\n/*\nSpot Price for path is product of each pools SP for relevant tokens.\n(See helpersClass getSpotPriceAfterSwapForPath)\n*/\nfunction calculateMarketSp(\n    swapType: SwapTypes,\n    swaps: SwapV2[],\n    assets: string[],\n    pools: SubgraphPoolBase[]\n): BigNumber {\n    const spotPrices: BigNumber[] = [];\n    for (let i = 0; i < swaps.length; i++) {\n        const swap = swaps[i];\n\n        // Find matching pool from list so we can use balances, etc\n        const pool = pools.filter((p) => p.id === swap.poolId);\n        if (pool.length !== 1) return bnum(0);\n\n        // This will get a specific pool type so we can call parse and spot price functions\n        const newPool = parseNewPool(pool[0]);\n        if (!newPool) return bnum(0);\n\n        // Parses relevant balances, etc\n        const poolPairData: any = newPool.parsePoolPairData(\n            assets[swap.assetInIndex],\n            assets[swap.assetOutIndex]\n        );\n\n        // Calculate current spot price\n        let spotPrice: BigNumber;\n        if (swapType === SwapTypes.SwapExactIn)\n            spotPrice = newPool._spotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            );\n        // Amount = 0 to just get current SP\n        else\n            spotPrice = newPool._spotPriceAfterSwapTokenInForExactTokenOut(\n                poolPairData,\n                ZERO\n            ); // Amount = 0 to just get current SP\n\n        // console.log(`${swap.poolId} ${spotPrice.toString()}`);\n        spotPrices.push(spotPrice);\n    }\n\n    // SP for Path is product of all\n    return spotPrices.reduce((a, b) => a.times(b));\n}\n\nexport async function getStEthRate(\n    provider: BaseProvider,\n    chainId: number\n): Promise<BigNumber> {\n    // Call stEthPerToken or tokensPerStETH to get the scaling factors in each direction.\n    const wstETHContract = new Contract(\n        Lido.wstETH[chainId],\n        ['function tokensPerStEth() external view returns (uint256)'],\n        provider\n    );\n    const rate = await wstETHContract.tokensPerStEth();\n    return scale(bnum(rate.toString()), -18);\n}\n\n/*\nUsed when SOR doesn't support paths with more than one hop.\nEnables swapping of stables <> wstETH via WETH/DAI pool which has good liquidity.\n*/\nexport async function getLidoStaticSwaps(\n    pools: SubgraphPoolBase[],\n    chainId: number,\n    tokenIn: string,\n    tokenOut: string,\n    swapType: SwapTypes,\n    swapAmount: BigNumber,\n    provider: BaseProvider\n): Promise<SwapInfo> {\n    // Check for stETH tokens and convert to use wstETH for routing\n    let isWrappingIn,\n        isWrappingOut = false;\n    if (tokenIn === Lido.stETH[chainId]) {\n        tokenIn = Lido.wstETH[chainId];\n        isWrappingIn = true;\n    }\n    if (tokenOut === Lido.stETH[chainId]) {\n        tokenOut = Lido.wstETH[chainId];\n        isWrappingOut = true;\n    }\n\n    const swapInfo: SwapInfo = cloneDeep(EMPTY_SWAPINFO);\n    const staticRoute = Routes[chainId][`${tokenIn}${tokenOut}${swapType}`];\n    if (!staticRoute) return swapInfo;\n\n    swapInfo.tokenAddresses = staticRoute.tokenAddresses;\n    swapInfo.swaps = staticRoute.swaps;\n    if (swapType === SwapTypes.SwapExactIn)\n        swapInfo.swapAmount = scale(swapAmount, staticRoute.tokenInDecimals).dp(\n            0\n        );\n    else\n        swapInfo.swapAmount = scale(\n            swapAmount,\n            staticRoute.tokenOutDecimals\n        ).dp(0);\n\n    swapInfo.swaps[0].amount = swapInfo.swapAmount.toString();\n    if (isWrappingIn) swapInfo.tokenIn = Lido.stETH[chainId];\n    else swapInfo.tokenIn = tokenIn;\n\n    if (isWrappingOut) swapInfo.tokenOut = Lido.stETH[chainId];\n    else swapInfo.tokenOut = tokenOut;\n\n    // Calculate SP as product of all pool SP in path\n    swapInfo.marketSp = calculateMarketSp(\n        swapType,\n        swapInfo.swaps,\n        swapInfo.tokenAddresses,\n        pools\n    );\n\n    // Unlike main SOR here we haven't calculated the return amount for swaps so use query call on Vault to get value.\n    swapInfo.returnAmount = await queryBatchSwap(\n        swapType,\n        swapInfo.swaps,\n        swapInfo.tokenAddresses,\n        provider\n    );\n\n    if (swapInfo.returnAmount.isZero()) {\n        return { ...EMPTY_SWAPINFO };\n    }\n\n    // Considering fees shouldn't matter as there won't be alternative options on V1\n    swapInfo.returnAmountConsideringFees = swapInfo.returnAmount;\n    return swapInfo;\n}\n","import { getAddress } from '@ethersproject/address';\n\nexport const isSameAddress = (address1: string, address2: string): boolean =>\n    getAddress(address1) === getAddress(address2);\n","import { BaseProvider } from '@ethersproject/providers';\nimport { AddressZero } from '@ethersproject/constants';\n\nimport { Lido, getStEthRate } from './pools/lido';\nimport { BigNumber, bnum, scale } from './utils/bignumber';\nimport { WETHADDR } from './constants';\nimport { SwapTypes, SwapInfo } from './types';\nimport { isSameAddress } from './utils';\n\nexport interface WrappedInfo {\n    swapAmountOriginal: BigNumber;\n    swapAmountForSwaps: BigNumber;\n    tokenIn: TokenInfo;\n    tokenOut: TokenInfo;\n}\n\nexport interface TokenInfo {\n    addressOriginal: string;\n    addressForSwaps: string;\n    wrapType: WrapTypes;\n    rate: BigNumber;\n}\n\nexport enum WrapTypes {\n    None,\n    ETH,\n    stETH,\n}\n\nexport async function getWrappedInfo(\n    provider: BaseProvider,\n    swapType: SwapTypes,\n    tokenIn: string,\n    tokenOut: string,\n    chainId: number,\n    swapAmount: BigNumber\n): Promise<WrappedInfo> {\n    // The Subgraph returns tokens in lower case format so we must match this\n    tokenIn = tokenIn.toLowerCase();\n    tokenOut = tokenOut.toLowerCase();\n\n    let swapAmountForSwaps = swapAmount;\n\n    let tokenInForSwaps = tokenIn;\n    let tokenInWrapType = WrapTypes.None;\n    let tokenOutForSwaps = tokenOut;\n    let tokenOutWrapType = WrapTypes.None;\n    let tokenInRate = bnum(1);\n    let tokenOutRate = bnum(1);\n\n    // Handle ETH wrapping\n    if (tokenIn === AddressZero) {\n        tokenInForSwaps = WETHADDR[chainId].toLowerCase();\n        tokenInWrapType = WrapTypes.ETH;\n    }\n    if (tokenOut === AddressZero) {\n        tokenOutForSwaps = WETHADDR[chainId].toLowerCase();\n        tokenOutWrapType = WrapTypes.ETH;\n    }\n\n    // Handle stETH wrapping\n    if (tokenIn === Lido.stETH[chainId]) {\n        tokenInForSwaps = Lido.wstETH[chainId];\n        tokenInWrapType = WrapTypes.stETH;\n        const rate = await getStEthRate(provider, chainId);\n        tokenInRate = rate;\n        if (swapType === SwapTypes.SwapExactIn)\n            swapAmountForSwaps = swapAmount.times(rate).dp(18);\n    }\n    if (tokenOut === Lido.stETH[chainId]) {\n        tokenOutForSwaps = Lido.wstETH[chainId];\n        tokenOutWrapType = WrapTypes.stETH;\n        const rate = await getStEthRate(provider, chainId);\n        tokenOutRate = rate;\n        if (swapType === SwapTypes.SwapExactOut)\n            swapAmountForSwaps = swapAmount.times(rate).dp(18);\n    }\n\n    return {\n        swapAmountOriginal: swapAmount,\n        swapAmountForSwaps: swapAmountForSwaps,\n        tokenIn: {\n            addressOriginal: tokenIn,\n            addressForSwaps: tokenInForSwaps,\n            wrapType: tokenInWrapType,\n            rate: tokenInRate,\n        },\n        tokenOut: {\n            addressOriginal: tokenOut,\n            addressForSwaps: tokenOutForSwaps,\n            wrapType: tokenOutWrapType,\n            rate: tokenOutRate,\n        },\n    };\n}\n\nexport function setWrappedInfo(\n    swapInfo: SwapInfo,\n    swapType: SwapTypes,\n    wrappedInfo: WrappedInfo,\n    chainId: number\n): SwapInfo {\n    if (swapInfo.swaps.length === 0) return swapInfo;\n\n    swapInfo.tokenIn = wrappedInfo.tokenIn.addressOriginal;\n    swapInfo.tokenOut = wrappedInfo.tokenOut.addressOriginal;\n\n    if (\n        wrappedInfo.tokenIn.wrapType === WrapTypes.ETH ||\n        wrappedInfo.tokenOut.wrapType === WrapTypes.ETH\n    ) {\n        // replace weth with ZERO/ETH in assets for Vault to handle ETH directly\n        swapInfo.tokenAddresses = swapInfo.tokenAddresses.map((addr) =>\n            isSameAddress(addr, WETHADDR[chainId]) ? AddressZero : addr\n        );\n    }\n\n    // Handle stETH swap amount scaling\n    if (\n        (wrappedInfo.tokenIn.wrapType === WrapTypes.stETH &&\n            swapType === SwapTypes.SwapExactIn) ||\n        (wrappedInfo.tokenOut.wrapType === WrapTypes.stETH &&\n            swapType === SwapTypes.SwapExactOut)\n    ) {\n        swapInfo.swapAmountForSwaps = scale(\n            wrappedInfo.swapAmountForSwaps,\n            18\n        ).dp(0); // Always 18 because wstETH\n        swapInfo.swapAmount = scale(wrappedInfo.swapAmountOriginal, 18).dp(0);\n    } else {\n        // Should be same when standard tokens and swapAmount should already be scaled\n        swapInfo.swapAmountForSwaps = swapInfo.swapAmount;\n    }\n\n    // Return amount from swaps will only be different if token has an exchangeRate\n    swapInfo.returnAmountFromSwaps = swapInfo.returnAmount;\n\n    // SwapExactIn, stETH out, returnAmount is stETH amount out, returnAmountForSwaps is wstETH amount out\n    if (\n        swapType === SwapTypes.SwapExactIn &&\n        wrappedInfo.tokenOut.wrapType === WrapTypes.stETH\n    ) {\n        swapInfo.returnAmount = swapInfo.returnAmount\n            .div(wrappedInfo.tokenOut.rate)\n            .dp(0);\n        swapInfo.returnAmountConsideringFees =\n            swapInfo.returnAmountConsideringFees\n                .div(wrappedInfo.tokenOut.rate)\n                .dp(0);\n    }\n\n    // SwapExactOut, stETH in, returnAmount us stETH amount in, returnAmountForSwaps is wstETH amount in\n    if (\n        swapType === SwapTypes.SwapExactOut &&\n        wrappedInfo.tokenIn.wrapType === WrapTypes.stETH\n    ) {\n        swapInfo.returnAmount = swapInfo.returnAmount\n            .div(wrappedInfo.tokenIn.rate)\n            .dp(0);\n        swapInfo.returnAmountConsideringFees =\n            swapInfo.returnAmountConsideringFees\n                .div(wrappedInfo.tokenIn.rate)\n                .dp(0);\n    }\n    return swapInfo;\n}\n","import cloneDeep from 'lodash.clonedeep';\nimport { BigNumber, bnum, scale, ZERO } from './utils/bignumber';\nimport { EMPTY_SWAPINFO } from './constants';\nimport { SwapTypes, SwapV2, Swap, SwapInfo } from './types';\n\n/**\n * @returns an array of deduplicated token addresses used in the provided swaps\n */\nconst getTokenAddresses = (swaps: Swap[][]): string[] => {\n    const tokenAddressesSet: Set<string> = new Set(\n        swaps.flatMap((sequence) =>\n            sequence.flatMap((swap): [string, string] => [\n                swap.tokenIn,\n                swap.tokenOut,\n            ])\n        )\n    );\n\n    return [...tokenAddressesSet];\n};\n\n/**\n * @dev Assumes that intermediate swaps have been properly formatted using the zero sentinel value\n * @returns the total amount of tokens used in the described batchSwap\n */\nconst getTotalSwapAmount = (swaps: SwapV2[]) => {\n    return swaps.reduce((acc, { amount }) => acc.plus(amount), ZERO);\n};\n\n/**\n * Formats a sequence of swaps to the format expected by the Balance Vault.\n * @dev Intermediate swaps' amounts are replaced with the sentinel value of zero\n *      and exact output sequences are reversed.\n * @param swapKind - a SwapTypes enum for whether the swap has an exact input or exact output\n * @param sequence - a sequence of swaps which form a path from the input token to the output token\n * @param tokenAddresses - an array of all the token address which are involved in the batchSwap\n * @returns\n */\nconst formatSequence = (\n    swapKind: SwapTypes,\n    sequence: Swap[],\n    tokenAddresses: string[]\n): SwapV2[] => {\n    if (swapKind === SwapTypes.SwapExactOut) {\n        // GIVEN_OUT sequences must be passed to the vault in reverse order.\n        // After reversing the sequence we can treat them almost equivalently to GIVEN_IN sequences\n        sequence = sequence.reverse();\n    }\n\n    return sequence.map((swap, i) => {\n        // Multihop swaps can be executed by passing an `amountIn` value of zero for a swap. This will cause the amount out\n        // of the previous swap to be used as the amount in of the current one. In such a scenario, `tokenIn` must equal the\n        // previous swap's `tokenOut`.\n        let amountScaled = '0';\n\n        // First swap needs to be given a value so we inject this from SOR solution\n        if (i === 0) {\n            // If it's a GIVEN_IN swap then swapAmount is in terms of tokenIn\n            // and vice versa for GIVEN_OUT\n            const scalingFactor =\n                swapKind === SwapTypes.SwapExactIn\n                    ? swap.tokenInDecimals\n                    : swap.tokenOutDecimals;\n\n            amountScaled = scale(bnum(swap.swapAmount), scalingFactor)\n                .decimalPlaces(0, 1)\n                .toString();\n        }\n\n        const inIndex = tokenAddresses.indexOf(swap.tokenIn);\n        const outIndex = tokenAddresses.indexOf(swap.tokenOut);\n        return {\n            poolId: swap.pool,\n            assetInIndex: inIndex,\n            assetOutIndex: outIndex,\n            amount: amountScaled,\n            userData: '0x',\n        };\n    });\n};\n\nexport function formatSwaps(\n    swapsOriginal: Swap[][],\n    swapType: SwapTypes,\n    swapAmount: BigNumber,\n    tokenIn: string,\n    tokenOut: string,\n    returnAmount: BigNumber,\n    returnAmountConsideringFees: BigNumber,\n    marketSp: BigNumber\n): SwapInfo {\n    const swaps: Swap[][] = cloneDeep(swapsOriginal);\n\n    const swapInfo: SwapInfo = {\n        ...EMPTY_SWAPINFO,\n        marketSp: marketSp,\n    };\n\n    if (swaps.length === 0) {\n        return swapInfo;\n    }\n\n    const { tokenInDecimals } = swaps[0].find(\n        (swap) => swap.tokenIn === tokenIn\n    );\n    const { tokenOutDecimals } = swaps[0].find(\n        (swap) => swap.tokenOut === tokenOut\n    );\n\n    const tokenArray = getTokenAddresses(swaps);\n    const swapsV2: SwapV2[] = swaps.flatMap((sequence) =>\n        formatSequence(swapType, sequence, tokenArray)\n    );\n\n    const [inputDecimals, returnDecimals] =\n        swapType === SwapTypes.SwapExactIn\n            ? [tokenInDecimals, tokenOutDecimals]\n            : [tokenOutDecimals, tokenInDecimals];\n\n    swapInfo.swapAmount = scale(swapAmount, inputDecimals);\n    swapInfo.returnAmount = scale(returnAmount, returnDecimals).dp(\n        0,\n        BigNumber.ROUND_FLOOR\n    );\n    swapInfo.returnAmountConsideringFees = scale(\n        returnAmountConsideringFees,\n        returnDecimals\n    ).dp(0, BigNumber.ROUND_FLOOR);\n\n    // We need to account for any rounding losses by adding dust to first path\n    const dust = swapInfo.swapAmount\n        .minus(getTotalSwapAmount(swapsV2))\n        .dp(0, 0);\n    if (dust.gt(0))\n        swapsV2[0].amount = bnum(swapsV2[0].amount).plus(dust).toString();\n\n    swapInfo.swaps = swapsV2;\n    swapInfo.tokenAddresses = tokenArray;\n    swapInfo.tokenIn = tokenIn;\n    swapInfo.tokenOut = tokenOut;\n    return swapInfo;\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n","import set from 'lodash.set';\nimport { Fragment, JsonFragment, Interface, Result } from '@ethersproject/abi';\nimport { Contract } from '@ethersproject/contracts';\nimport { BaseProvider } from '@ethersproject/providers';\n\nexport class Multicaller {\n    private multiAddress: string;\n    private provider: BaseProvider;\n    private interface: Interface;\n    public options: any = {};\n    private calls: [string, string, any][] = [];\n    private paths: any[] = [];\n\n    constructor(\n        multiAddress: string,\n        provider: BaseProvider,\n        abi: string | Array<Fragment | JsonFragment | string>,\n        options = {}\n    ) {\n        this.multiAddress = multiAddress;\n        this.provider = provider;\n        this.interface = new Interface(abi);\n        this.options = options;\n    }\n\n    call(\n        path: string,\n        address: string,\n        functionName: string,\n        params?: any[]\n    ): Multicaller {\n        this.calls.push([address, functionName, params]);\n        this.paths.push(path);\n        return this;\n    }\n\n    async execute(\n        from: Record<string, unknown> = {}\n    ): Promise<Record<string, unknown>> {\n        const obj = from;\n        const results = await this.executeMulticall();\n        results.forEach((result, i) =>\n            set(obj, this.paths[i], result.length > 1 ? result : result[0])\n        );\n        this.calls = [];\n        this.paths = [];\n        return obj;\n    }\n\n    private async executeMulticall(): Promise<Result[]> {\n        const multi = new Contract(\n            this.multiAddress,\n            [\n                'function aggregate(tuple[](address target, bytes callData) memory calls) public view returns (uint256 blockNumber, bytes[] memory returnData)',\n            ],\n            this.provider\n        );\n\n        const [, res] = await multi.aggregate(\n            this.calls.map(([address, functionName, params]) => [\n                address,\n                this.interface.encodeFunctionData(functionName, params),\n            ]),\n            this.options\n        );\n\n        return res.map((result, i) =>\n            this.interface.decodeFunctionResult(this.calls[i][1], result)\n        );\n    }\n}\n","import { BaseProvider } from '@ethersproject/providers';\nimport { SubgraphPoolBase } from '../types';\nimport { isSameAddress } from '../utils';\nimport { scale, bnum } from '../utils/bignumber';\nimport { Multicaller } from '../utils/multicaller';\n\n// TODO: decide whether we want to trim these ABIs down to the relevant functions\nimport vaultAbi from '../abi/Vault.json';\nimport weightedPoolAbi from '../pools/weightedPool/weightedPoolAbi.json';\nimport stablePoolAbi from '../pools/stablePool/stablePoolAbi.json';\nimport elementPoolAbi from '../pools/elementPool/ConvergentCurvePool.json';\n\nexport async function getOnChainBalances(\n    subgraphPools: SubgraphPoolBase[],\n    multiAddress: string,\n    vaultAddress: string,\n    provider: BaseProvider\n): Promise<SubgraphPoolBase[]> {\n    if (subgraphPools.length === 0) return subgraphPools;\n\n    const abis = Object.values(\n        // Remove duplicate entries using their names\n        Object.fromEntries(\n            [\n                ...vaultAbi,\n                ...weightedPoolAbi,\n                ...stablePoolAbi,\n                ...elementPoolAbi,\n            ].map((row) => [row.name, row])\n        )\n    );\n\n    const multiPool = new Multicaller(multiAddress, provider, abis);\n\n    subgraphPools.forEach((pool, i) => {\n        // TO DO - This is a temp filter\n        if (\n            pool.id ===\n            '0x6b15a01b5d46a5321b627bd7deef1af57bc629070000000000000000000000d4'\n        )\n            subgraphPools.splice(i, 1);\n\n        multiPool.call(`${pool.id}.poolTokens`, vaultAddress, 'getPoolTokens', [\n            pool.id,\n        ]);\n        multiPool.call(`${pool.id}.totalSupply`, pool.address, 'totalSupply');\n\n        // TO DO - Make this part of class to make more flexible?\n        if (pool.poolType === 'Weighted') {\n            multiPool.call(\n                `${pool.id}.weights`,\n                pool.address,\n                'getNormalizedWeights'\n            );\n            multiPool.call(\n                `${pool.id}.swapFee`,\n                pool.address,\n                'getSwapFeePercentage'\n            );\n        } else if (\n            pool.poolType === 'Stable' ||\n            pool.poolType === 'MetaStable'\n        ) {\n            // MetaStable is the same as Stable for multicall purposes\n            multiPool.call(\n                `${pool.id}.amp`,\n                pool.address,\n                'getAmplificationParameter'\n            );\n            multiPool.call(\n                `${pool.id}.swapFee`,\n                pool.address,\n                'getSwapFeePercentage'\n            );\n        } else if (pool.poolType === 'Element') {\n            multiPool.call(`${pool.id}.swapFee`, pool.address, 'percentFee');\n        }\n    });\n\n    const pools = (await multiPool.execute()) as Record<\n        string,\n        {\n            amp?: string;\n            swapFee?: string;\n            weights?: string[];\n            poolTokens: {\n                tokens: string[];\n                balances: string[];\n            };\n        }\n    >;\n\n    Object.entries(pools).forEach(([poolId, onchainData]) => {\n        try {\n            const { poolTokens, swapFee, weights } = onchainData;\n\n            subgraphPools[poolId].swapFee = scale(\n                bnum(swapFee),\n                -18\n            ).toString();\n\n            poolTokens.tokens.forEach((token, i) => {\n                const T = subgraphPools[poolId].tokens.find((t) =>\n                    isSameAddress(t.address, token)\n                );\n                T.balance = scale(\n                    bnum(poolTokens.balances[i]),\n                    -Number(T.decimals)\n                ).toString();\n                if (subgraphPools[poolId].poolType === 'Weighted') {\n                    T.weight = scale(bnum(weights[i]), -18).toString();\n                }\n            });\n        } catch (err) {\n            // Likely an unsupported pool type\n            // console.log(`Issue with pool onchain call`)\n            // console.log(subgraphPool.id);\n            // console.log(onChainResult);\n        }\n    });\n\n    return subgraphPools;\n}\n","import fetch from 'isomorphic-fetch';\nimport { SubgraphPoolBase } from '../types';\n\n// Returns all public pools\nexport async function fetchSubgraphPools(\n    subgraphUrl: string\n): Promise<SubgraphPoolBase[]> {\n    // can filter for publicSwap too??\n    const query = `\n      {\n        pools: pools(first: 1000) {\n          id\n          address\n          poolType\n          swapFee\n          totalShares\n          tokens {\n            address\n            balance\n            decimals\n            weight\n            priceRate\n          }\n          tokensList\n          totalWeight\n          amp\n          expiryTime\n          unitSeconds\n          principalToken\n          baseToken\n          swapEnabled\n        }\n      }\n    `;\n\n    console.log(`fetchSubgraphPools: ${subgraphUrl}`);\n    const response = await fetch(subgraphUrl, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            query,\n        }),\n    });\n\n    const { data } = await response.json();\n\n    return data.pools ?? [];\n}\n","import { BaseProvider } from '@ethersproject/providers';\nimport cloneDeep from 'lodash.clonedeep';\nimport { MULTIADDR, VAULTADDR } from '../constants';\nimport { SubgraphPoolBase } from '../types';\nimport { getOnChainBalances } from './onchainData';\nimport { fetchSubgraphPools } from './subgraph';\n\nexport class PoolCacher {\n    private pools: SubgraphPoolBase[] = [];\n    finishedFetchingOnChain = false;\n\n    constructor(\n        private provider: BaseProvider,\n        private chainId: number,\n        private poolsUrl: string | null = null,\n        initialPools: SubgraphPoolBase[] = []\n    ) {\n        this.pools = initialPools;\n    }\n\n    getPools(): SubgraphPoolBase[] {\n        return cloneDeep(this.pools);\n    }\n\n    isConnectedToSubgraph(): boolean {\n        return this.poolsUrl !== null;\n    }\n\n    /*\n     * Saves updated pools data to internal onChainBalanceCache.\n     * If isOnChain is true will retrieve all required onChain data. (false is advised to only be used for testing)\n     * If poolsData is passed as parameter - uses this as pools source.\n     * If poolsData was passed in to constructor - uses this as pools source.\n     * If pools url was passed in to constructor - uses this to fetch pools source.\n     */\n    async fetchPools(\n        poolsData: SubgraphPoolBase[] = [],\n        isOnChain = true\n    ): Promise<boolean> {\n        try {\n            let newPools: SubgraphPoolBase[];\n\n            // If poolsData has been passed to function these pools should be used\n            if (poolsData.length > 0) {\n                newPools = cloneDeep(poolsData);\n            } else {\n                // Retrieve from URL if set otherwise use data passed in constructor\n                if (this.isConnectedToSubgraph()) {\n                    newPools = await fetchSubgraphPools(this.poolsUrl);\n                } else {\n                    newPools = this.pools;\n                }\n            }\n\n            // Get latest on-chain balances (returns data in string/normalized format)\n            this.pools = await this.fetchOnChainBalances(newPools, isOnChain);\n\n            this.finishedFetchingOnChain = true;\n\n            return true;\n        } catch (err) {\n            // On error clear all caches and return false so user knows to try again.\n            this.finishedFetchingOnChain = false;\n            this.pools = [];\n            console.error(`Error: fetchPools(): ${err.message}`);\n            return false;\n        }\n    }\n\n    /*\n     * Uses multicall contract to fetch all onchain balances for pools.\n     */\n    private async fetchOnChainBalances(\n        subgraphPools: SubgraphPoolBase[],\n        isOnChain = true\n    ): Promise<SubgraphPoolBase[]> {\n        if (subgraphPools.length === 0) {\n            console.error('ERROR: No Pools To Fetch.');\n            return [];\n        }\n\n        // Allows for testing\n        if (!isOnChain) {\n            console.log(\n                `!!!!!!! WARNING - Not Using Real OnChain Balances !!!!!!`\n            );\n            return subgraphPools;\n        }\n\n        // This will return in normalized/string format\n        const onChainPools = await getOnChainBalances(\n            subgraphPools,\n            MULTIADDR[this.chainId],\n            VAULTADDR[this.chainId],\n            this.provider\n        );\n\n        return onChainPools;\n    }\n}\n","import { ALLOW_ADD_REMOVE } from '../config';\nimport {\n    SubgraphPoolBase,\n    PoolDictionary,\n    SwapPairType,\n    NewPath,\n    Swap,\n    PoolBase,\n    PoolFilter,\n} from '../types';\nimport { WeightedPool } from '../pools/weightedPool/weightedPool';\nimport { StablePool } from '../pools/stablePool/stablePool';\nimport { ElementPool } from '../pools/elementPool/elementPool';\nimport { MetaStablePool } from '../pools/metaStablePool/metaStablePool';\nimport { ZERO } from '../utils/bignumber';\n\nimport { parseNewPool } from '../pools';\n\nexport const filterPoolsByType = (\n    pools: SubgraphPoolBase[],\n    poolTypeFilter: PoolFilter\n): SubgraphPoolBase[] => {\n    if (poolTypeFilter === PoolFilter.All) return pools;\n    return pools.filter((p) => p.poolType === poolTypeFilter);\n};\n\n/*\nThe main purpose of this function is to:\n- filter to  allPools to pools that have:\n    - TokenIn & TokenOut, i.e. a direct swap pool\n    - TokenIn & !TokenOut, i.e. a hop pool with only TokenIn\n    - !TokenIn & TokenOut, i.e. a hop pool with only TokenOut\n- find list of hop tokens, i.e. tokens that join hop pools\nAs we're looping all here, it also does a number of other things to avoid unnecessary loops later:\n- parsePoolPairData for Direct pools\n- store token decimals for future use\n*/\nexport function filterPoolsOfInterest(\n    allPools: SubgraphPoolBase[],\n    tokenIn: string,\n    tokenOut: string,\n    maxPools: number,\n    currentBlockTimestamp = 0\n): [PoolDictionary, string[]] {\n    const poolsDictionary: PoolDictionary = {};\n\n    // If pool contains token add all its tokens to direct list\n    // Multi-hop trades: we find the best pools that connect tokenIn and tokenOut through a multi-hop (intermediate) token\n    // First: we get all tokens that can be used to be traded with tokenIn excluding\n    // tokens that are in pools that already contain tokenOut (in which case multi-hop is not necessary)\n    let tokenInPairedTokens: Set<string> = new Set();\n    let tokenOutPairedTokens: Set<string> = new Set();\n\n    allPools.forEach((pool) => {\n        if (pool.tokensList.length === 0 || pool.tokens[0].balance === '0') {\n            return;\n        }\n\n        const newPool:\n            | WeightedPool\n            | StablePool\n            | MetaStablePool\n            | ElementPool\n            | undefined = parseNewPool(pool, currentBlockTimestamp);\n        if (!newPool) return;\n\n        const tokenListSet = new Set(pool.tokensList);\n        // Depending on env file, we add the BPT as well as\n        // we can join/exit as part of the multihop\n        if (ALLOW_ADD_REMOVE) tokenListSet.add(pool.address);\n\n        // This is a direct pool as has both tokenIn and tokenOut\n        if (\n            (tokenListSet.has(tokenIn) && tokenListSet.has(tokenOut)) ||\n            (tokenListSet.has(tokenIn.toLowerCase()) &&\n                tokenListSet.has(tokenOut.toLowerCase()))\n        ) {\n            newPool.setTypeForSwap(SwapPairType.Direct);\n            // parsePoolPairData for Direct pools as it avoids having to loop later\n            newPool.parsePoolPairData(tokenIn, tokenOut);\n            poolsDictionary[pool.id] = newPool;\n            return;\n        }\n\n        if (maxPools > 1) {\n            const containsTokenIn = tokenListSet.has(tokenIn);\n            const containsTokenOut = tokenListSet.has(tokenOut);\n\n            if (containsTokenIn && !containsTokenOut) {\n                tokenInPairedTokens = new Set([\n                    ...tokenInPairedTokens,\n                    ...tokenListSet,\n                ]);\n                newPool.setTypeForSwap(SwapPairType.HopIn);\n                poolsDictionary[pool.id] = newPool;\n            } else if (!containsTokenIn && containsTokenOut) {\n                tokenOutPairedTokens = new Set([\n                    ...tokenOutPairedTokens,\n                    ...tokenListSet,\n                ]);\n                newPool.setTypeForSwap(SwapPairType.HopOut);\n                poolsDictionary[pool.id] = newPool;\n            }\n        }\n    });\n\n    // We find the intersection of the two previous sets so we can trade tokenIn for tokenOut with 1 multi-hop\n    const hopTokensSet = [...tokenInPairedTokens].filter((x) =>\n        tokenOutPairedTokens.has(x)\n    );\n\n    // Transform set into Array\n    const hopTokens = [...hopTokensSet];\n    return [poolsDictionary, hopTokens];\n}\n\n/*\nFind the most liquid pool for each hop (i.e. tokenIn->hopToken & hopToken->tokenOut).\nCreates paths for each pool of interest (multi & direct pools).\n*/\nexport function filterHopPools(\n    tokenIn: string,\n    tokenOut: string,\n    hopTokens: string[],\n    poolsOfInterest: PoolDictionary\n): [PoolDictionary, NewPath[]] {\n    const filteredPoolsOfInterest: PoolDictionary = {};\n    const paths: NewPath[] = [];\n    let firstPoolLoop = true;\n\n    // No multihop pool but still need to create paths for direct pools\n    if (hopTokens.length === 0) {\n        for (const id in poolsOfInterest) {\n            if (poolsOfInterest[id].swapPairType !== SwapPairType.Direct) {\n                delete poolsOfInterest[id];\n                continue;\n            }\n\n            const path = createDirectPath(\n                poolsOfInterest[id],\n                tokenIn,\n                tokenOut\n            );\n            paths.push(path);\n            filteredPoolsOfInterest[id] = poolsOfInterest[id];\n        }\n    }\n\n    for (let i = 0; i < hopTokens.length; i++) {\n        let highestNormalizedLiquidityFirst = ZERO; // Aux variable to find pool with most liquidity for pair (tokenIn -> hopToken)\n        let highestNormalizedLiquidityFirstPoolId: string; // Aux variable to find pool with most liquidity for pair (tokenIn -> hopToken)\n        let highestNormalizedLiquiditySecond = ZERO; // Aux variable to find pool with most liquidity for pair (hopToken -> tokenOut)\n        let highestNormalizedLiquiditySecondPoolId: string; // Aux variable to find pool with most liquidity for pair (hopToken -> tokenOut)\n\n        for (const id in poolsOfInterest) {\n            const pool = poolsOfInterest[id];\n\n            // We don't consider direct pools for the multihop but we do add it's path\n            if (pool.swapPairType === SwapPairType.Direct) {\n                // First loop of all pools we add paths to list\n                if (firstPoolLoop) {\n                    const path = createDirectPath(pool, tokenIn, tokenOut);\n                    paths.push(path);\n                    filteredPoolsOfInterest[id] = pool;\n                }\n                continue;\n            }\n\n            const tokenListSet = new Set(pool.tokensList);\n            // Depending on env file, we add the BPT as well as\n            // we can join/exit as part of the multihop\n            if (ALLOW_ADD_REMOVE) tokenListSet.add(pool.address);\n            // MAKE THIS A FLAG IN FILTER?\n            // If pool doesn't have  hopTokens[i] then ignore\n            if (!tokenListSet.has(hopTokens[i])) continue;\n\n            if (pool.swapPairType === SwapPairType.HopIn) {\n                const poolPairData = pool.parsePoolPairData(\n                    tokenIn,\n                    hopTokens[i]\n                );\n                // const normalizedLiquidity = pool.getNormalizedLiquidity(tokenIn, hopTokens[i]);\n                const normalizedLiquidity =\n                    pool.getNormalizedLiquidity(poolPairData);\n                // Cannot be strictly greater otherwise highestNormalizedLiquidityPoolId = 0 if hopTokens[i] balance is 0 in this pool.\n                if (\n                    normalizedLiquidity.isGreaterThanOrEqualTo(\n                        highestNormalizedLiquidityFirst\n                    )\n                ) {\n                    highestNormalizedLiquidityFirst = normalizedLiquidity;\n                    highestNormalizedLiquidityFirstPoolId = id;\n                }\n            } else if (pool.swapPairType === SwapPairType.HopOut) {\n                const poolPairData = pool.parsePoolPairData(\n                    hopTokens[i],\n                    tokenOut\n                );\n                // const normalizedLiquidity = pool.getNormalizedLiquidity(hopTokens[i], tokenOut);\n                const normalizedLiquidity =\n                    pool.getNormalizedLiquidity(poolPairData);\n                // Cannot be strictly greater otherwise highestNormalizedLiquidityPoolId = 0 if hopTokens[i] balance is 0 in this pool.\n                if (\n                    normalizedLiquidity.isGreaterThanOrEqualTo(\n                        highestNormalizedLiquiditySecond\n                    )\n                ) {\n                    highestNormalizedLiquiditySecond = normalizedLiquidity;\n                    highestNormalizedLiquiditySecondPoolId = id;\n                }\n            } else {\n                // Unknown type\n                continue;\n            }\n        }\n\n        firstPoolLoop = false;\n\n        filteredPoolsOfInterest[highestNormalizedLiquidityFirstPoolId] =\n            poolsOfInterest[highestNormalizedLiquidityFirstPoolId];\n        filteredPoolsOfInterest[highestNormalizedLiquiditySecondPoolId] =\n            poolsOfInterest[highestNormalizedLiquiditySecondPoolId];\n\n        const path = createMultihopPath(\n            poolsOfInterest[highestNormalizedLiquidityFirstPoolId],\n            poolsOfInterest[highestNormalizedLiquiditySecondPoolId],\n            tokenIn,\n            hopTokens[i],\n            tokenOut\n        );\n\n        paths.push(path);\n    }\n\n    return [filteredPoolsOfInterest, paths];\n}\n\nfunction createDirectPath(\n    pool: PoolBase,\n    tokenIn: string,\n    tokenOut: string\n): NewPath {\n    const swap: Swap = {\n        pool: pool.id,\n        tokenIn: tokenIn,\n        tokenOut: tokenOut,\n        tokenInDecimals: 18, // TO DO - Add decimals here\n        tokenOutDecimals: 18,\n    };\n\n    const poolPairData = pool.parsePoolPairData(tokenIn, tokenOut);\n\n    const path: NewPath = {\n        id: pool.id,\n        swaps: [swap],\n        limitAmount: ZERO,\n        poolPairData: [poolPairData],\n        pools: [pool],\n    };\n\n    return path;\n}\n\nfunction createMultihopPath(\n    firstPool: PoolBase,\n    secondPool: PoolBase,\n    tokenIn: string,\n    hopToken: string,\n    tokenOut: string\n): NewPath {\n    const swap1: Swap = {\n        pool: firstPool.id,\n        tokenIn: tokenIn,\n        tokenOut: hopToken,\n        tokenInDecimals: 18, // Placeholder for actual decimals TO DO\n        tokenOutDecimals: 18,\n    };\n\n    const swap2: Swap = {\n        pool: secondPool.id,\n        tokenIn: hopToken,\n        tokenOut: tokenOut,\n        tokenInDecimals: 18, // Placeholder for actual decimals TO DO\n        tokenOutDecimals: 18,\n    };\n\n    const poolPairDataFirst = firstPool.parsePoolPairData(tokenIn, hopToken);\n    const poolPairDataSecond = secondPool.parsePoolPairData(hopToken, tokenOut);\n\n    // Path id is the concatenation of the ids of poolFirstHop and poolSecondHop\n    const path: NewPath = {\n        id: firstPool.id + secondPool.id,\n        swaps: [swap1, swap2],\n        limitAmount: ZERO,\n        poolPairData: [poolPairDataFirst, poolPairDataSecond],\n        pools: [firstPool, secondPool],\n    };\n\n    return path;\n}\n","import { BigNumber, ZERO } from '../utils/bignumber';\nimport { SwapTypes, NewPath } from '../types';\nimport { getOutputAmountSwap } from '../pools';\n\nexport function calculatePathLimits(\n    paths: NewPath[],\n    swapType: SwapTypes\n): [NewPath[], BigNumber] {\n    let maxLiquidityAvailable = ZERO;\n    paths.forEach((path) => {\n        // Original parsedPoolPairForPath here but this has already been done.\n        path.limitAmount = getLimitAmountSwapForPath(path, swapType);\n        if (path.limitAmount.isNaN()) throw 'path.limitAmount.isNaN';\n        // console.log(path.limitAmount.toNumber())\n        maxLiquidityAvailable = maxLiquidityAvailable.plus(path.limitAmount);\n    });\n    const sortedPaths = paths.sort((a, b) => {\n        return b.limitAmount.minus(a.limitAmount).toNumber();\n    });\n    return [sortedPaths, maxLiquidityAvailable];\n}\n\nexport function getLimitAmountSwapForPath(\n    path: NewPath,\n    swapType: SwapTypes\n): BigNumber {\n    const poolPairData = path.poolPairData;\n    if (poolPairData.length == 1) {\n        return path.pools[0].getLimitAmountSwap(poolPairData[0], swapType);\n    } else if (poolPairData.length == 2) {\n        if (swapType === SwapTypes.SwapExactIn) {\n            const limitAmountSwap1 = path.pools[0].getLimitAmountSwap(\n                poolPairData[0],\n                swapType\n            );\n            const limitAmountSwap2 = path.pools[1].getLimitAmountSwap(\n                poolPairData[1],\n                swapType\n            );\n            const limitOutputAmountSwap1 = getOutputAmountSwap(\n                path.pools[0],\n                path.poolPairData[0],\n                swapType,\n                limitAmountSwap1\n            );\n            if (limitOutputAmountSwap1.gt(limitAmountSwap2))\n                if (limitAmountSwap2.isZero())\n                    // This means second hop is limiting the path\n                    return ZERO;\n                // this is necessary to avoid return NaN\n                else\n                    return getOutputAmountSwap(\n                        path.pools[0],\n                        path.poolPairData[0],\n                        SwapTypes.SwapExactOut,\n                        limitAmountSwap2\n                    );\n            // This means first hop is limiting the path\n            else return limitAmountSwap1;\n        } else {\n            const limitAmountSwap1 = path.pools[0].getLimitAmountSwap(\n                poolPairData[0],\n                swapType\n            );\n            const limitAmountSwap2 = path.pools[1].getLimitAmountSwap(\n                poolPairData[1],\n                swapType\n            );\n            const limitOutputAmountSwap2 = getOutputAmountSwap(\n                path.pools[1],\n                path.poolPairData[1],\n                swapType,\n                limitAmountSwap2\n            );\n            if (limitOutputAmountSwap2.gt(limitAmountSwap1))\n                // This means first hop is limiting the path\n                return getOutputAmountSwap(\n                    path.pools[1],\n                    path.poolPairData[1],\n                    SwapTypes.SwapExactIn,\n                    limitAmountSwap1\n                );\n            // This means second hop is limiting the path\n            else return limitAmountSwap2;\n        }\n    } else {\n        throw new Error('Path with more than 2 swaps not supported');\n    }\n}\n","import cloneDeep from 'lodash.clonedeep';\nimport { filterPoolsOfInterest, filterHopPools } from './filtering';\nimport { calculatePathLimits } from './pathLimits';\nimport {\n    SwapOptions,\n    SwapTypes,\n    NewPath,\n    PoolDictionary,\n    SubgraphPoolBase,\n} from '../types';\n\nexport class RouteProposer {\n    cache: Record<string, { pools: PoolDictionary; paths: NewPath[] }> = {};\n\n    /**\n     * Given a list of pools and a desired input/output, returns a set of possible paths to route through\n     */\n    getCandidatePaths(\n        tokenIn: string,\n        tokenOut: string,\n        swapType: SwapTypes,\n        pools: SubgraphPoolBase[],\n        swapOptions: SwapOptions\n    ): { pools: PoolDictionary; paths: NewPath[] } {\n        if (pools.length === 0) return { pools: {}, paths: [] };\n\n        // If token pair has been processed before that info can be reused to speed up execution\n        const cache =\n            this.cache[\n                `${tokenIn}${tokenOut}${swapType}${swapOptions.timestamp}`\n            ];\n\n        // forceRefresh can be set to force fresh processing of paths/prices\n        if (!swapOptions.forceRefresh && !!cache) {\n            // Using pre-processed data from cache\n            return {\n                pools: cache.pools,\n                paths: cache.paths,\n            };\n        }\n\n        // Some functions alter pools list directly but we want to keep original so make a copy to work from\n        const poolsList = cloneDeep(pools);\n\n        const [poolsDict, hopTokens] = filterPoolsOfInterest(\n            poolsList,\n            tokenIn,\n            tokenOut,\n            swapOptions.maxPools,\n            swapOptions.timestamp\n        );\n        const [filteredPoolsDict, pathData] = filterHopPools(\n            tokenIn,\n            tokenOut,\n            hopTokens,\n            poolsDict\n        );\n        const [paths] = calculatePathLimits(pathData, swapType);\n\n        this.cache[`${tokenIn}${tokenOut}${swapType}${swapOptions.timestamp}`] =\n            {\n                pools: filteredPoolsDict,\n                paths: paths,\n            };\n\n        return { pools: filteredPoolsDict, paths };\n    }\n}\n","import fetch from 'isomorphic-fetch';\n\nconst getPlatformId = (chainId: string | number): string => {\n    const mapping = {\n        '1': 'ethereum',\n        '42': 'ethereum',\n        '137': 'polygon-pos',\n    };\n\n    return mapping[chainId.toString()] || 'ethereum';\n};\n\nconst getNativeAssetId = (chainId: string | number): string => {\n    const mapping = {\n        '1': 'eth',\n        '42': 'eth',\n        // CoinGecko does not provide prices in terms of MATIC\n        // TODO: convert through ETH as intermediary\n        '137': '',\n    };\n\n    return mapping[chainId.toString()] || 'eth';\n};\n\n/**\n * @dev Assumes that the native asset has 18 decimals\n * @param chainId - the chain id on which the token is deployed\n * @param tokenAddress - the address of the token contract\n * @param tokenDecimals - the number of decimals places which the token is divisible by\n * @returns the price of 1 ETH in terms of the token base units\n */\nexport async function getTokenPriceInNativeAsset(\n    chainId: number,\n    tokenAddress: string\n): Promise<string> {\n    const platformId = getPlatformId(chainId);\n    const nativeAssetId = getNativeAssetId(chainId);\n    const endpoint = `https://api.coingecko.com/api/v3/simple/token_price/${platformId}?contract_addresses=${tokenAddress}&vs_currencies=${nativeAssetId}`;\n\n    const response = await fetch(endpoint, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    });\n\n    const data = await response.json();\n\n    if (data[tokenAddress.toLowerCase()][nativeAssetId] === undefined)\n        throw Error('No price returned from Coingecko');\n\n    return data[tokenAddress.toLowerCase()][nativeAssetId];\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { BaseProvider } from '@ethersproject/providers';\nimport { WETHADDR } from '../constants';\nimport { BigNumber, bnum, BONE, scale, ZERO } from '../utils/bignumber';\nimport { getTokenPriceInNativeAsset } from './coingecko';\n\nexport function calculateTotalSwapCost(\n    tokenPrice: BigNumber,\n    swapGas: BigNumber,\n    gasPriceWei: BigNumber\n): BigNumber {\n    return gasPriceWei.times(swapGas).times(tokenPrice).div(BONE);\n}\n\nexport class SwapCostCalculator {\n    private tokenDecimalsCache: Record<string, number>;\n    private tokenPriceCache: Record<string, string>;\n\n    private initializeCache(): void {\n        this.tokenPriceCache = {\n            AddressZero: BONE.toString(),\n            [WETHADDR[this.chainId].toLowerCase()]: BONE.toString(),\n        };\n        this.tokenDecimalsCache = {};\n    }\n\n    constructor(private provider: BaseProvider, private chainId: number) {\n        this.initializeCache();\n    }\n\n    /**\n     * Sets the chain ID to be used when querying asset prices\n     * @param chainId - the chain ID of the chain to switch to\n     */\n    setChainId(chainId: number): void {\n        this.chainId = chainId;\n        this.initializeCache();\n    }\n\n    /**\n     * @param tokenAddress - the address of the token for which to express the native asset in terms of\n     * @param tokenPrice - the price of the native asset in terms of the provided token\n     */\n    async getNativeAssetPriceInToken(tokenAddress: string): Promise<BigNumber> {\n        // Check if we have token price cached\n        const cachedTokenPrice =\n            this.tokenPriceCache[tokenAddress.toLowerCase()];\n        if (cachedTokenPrice) return bnum(cachedTokenPrice);\n\n        try {\n            // Query Coingecko first and only check decimals\n            // if we get a valid response to avoid unnecessary queries\n            const ethPerToken = await getTokenPriceInNativeAsset(\n                this.chainId,\n                tokenAddress\n            );\n\n            const tokenDecimals = await this.getTokenDecimals(tokenAddress);\n\n            // Coingecko returns price of token in terms of ETH\n            // We want the price of 1 ETH in terms of the token base units\n            const ethPerTokenWei = scale(bnum(ethPerToken), 18 - tokenDecimals);\n            const ethPriceInToken = BONE.div(ethPerTokenWei).dp(0);\n\n            this.setNativeAssetPriceInToken(\n                tokenAddress,\n                ethPriceInToken.toString()\n            );\n            return ethPriceInToken;\n        } catch (err) {\n            console.log('Error Getting Token Price. Defaulting to 0.');\n            return ZERO;\n        }\n    }\n\n    /**\n     * @param tokenAddress - the address of the token for which to express the native asset in terms of\n     * @param tokenPrice - the price of the native asset in terms of the provided token\n     */\n    setNativeAssetPriceInToken(tokenAddress: string, tokenPrice: string): void {\n        this.tokenPriceCache[tokenAddress.toLowerCase()] = tokenPrice;\n    }\n\n    /**\n     * @dev Caches the number of decimals for a particular token to avoid onchain lookups\n     * @param tokenAddress - the address of the provided token\n     * @param decimals - the number of decimals of the provided token\n     */\n    setTokenDecimals(tokenAddress: string, decimals: number): void {\n        this.tokenDecimalsCache[tokenAddress.toLowerCase()] = decimals;\n    }\n\n    /**\n     * Calculate the cost of spending a certain amount of gas in terms of a token.\n     * This allows us to determine whether an increased amount of tokens gained\n     * is worth spending this extra gas (e.g. by including an extra pool in a swap)\n     */\n    async convertGasCostToToken(\n        tokenAddress: string,\n        gasPriceWei: BigNumber,\n        swapGas: BigNumber = new BigNumber('35000')\n    ): Promise<BigNumber> {\n        if (gasPriceWei.isZero() || swapGas.isZero()) return ZERO;\n        return calculateTotalSwapCost(\n            await this.getNativeAssetPriceInToken(tokenAddress),\n            swapGas,\n            gasPriceWei\n        );\n    }\n\n    private async getTokenDecimals(tokenAddress: string): Promise<number> {\n        const cache = this.tokenDecimalsCache[tokenAddress.toLowerCase()];\n        if (cache !== undefined) {\n            return cache;\n        }\n\n        const tokenContract = new Contract(\n            tokenAddress,\n            ['function decimals() external view returns (uint256)'],\n            this.provider\n        );\n\n        const decimals: BigNumber = await tokenContract.decimals();\n\n        this.setTokenDecimals(tokenAddress, decimals.toNumber());\n\n        return decimals.toNumber();\n    }\n}\n","import { BaseProvider } from '@ethersproject/providers';\nimport cloneDeep from 'lodash.clonedeep';\nimport { BigNumber, ZERO } from './utils/bignumber';\nimport { smartOrderRouter } from './router';\nimport { getWrappedInfo, setWrappedInfo } from './wrapInfo';\nimport { formatSwaps } from './formatSwaps';\nimport { PoolCacher } from './poolCaching';\nimport { RouteProposer } from './routeProposal';\nimport { filterPoolsByType } from './routeProposal/filtering';\nimport { SwapCostCalculator } from './swapCost';\nimport { getLidoStaticSwaps, isLidoStableSwap } from './pools/lido';\nimport { isSameAddress } from './utils';\nimport { EMPTY_SWAPINFO } from './constants';\nimport {\n    SwapInfo,\n    SwapTypes,\n    NewPath,\n    PoolDictionary,\n    PoolFilter,\n    Swap,\n    SubgraphPoolBase,\n    SwapOptions,\n} from './types';\n\nexport class SOR {\n    poolCacher: PoolCacher;\n    private routeProposer: RouteProposer;\n    swapCostCalculator: SwapCostCalculator;\n\n    private readonly defaultSwapOptions: SwapOptions = {\n        gasPrice: new BigNumber('50e9'),\n        swapGas: new BigNumber('35000'),\n        poolTypeFilter: PoolFilter.All,\n        maxPools: 4,\n        timestamp: Math.floor(Date.now() / 1000),\n        forceRefresh: false,\n    };\n\n    constructor(\n        public provider: BaseProvider,\n        public chainId: number,\n        poolsSource: string | null,\n        initialPools: SubgraphPoolBase[] = []\n    ) {\n        this.poolCacher = new PoolCacher(\n            provider,\n            chainId,\n            poolsSource,\n            initialPools\n        );\n        this.routeProposer = new RouteProposer();\n        this.swapCostCalculator = new SwapCostCalculator(provider, chainId);\n    }\n\n    getPools(): SubgraphPoolBase[] {\n        return this.poolCacher.getPools();\n    }\n\n    /*\n    Saves updated pools data to internal onChainBalanceCache.\n    If isOnChain is true will retrieve all required onChain data. (false is advised to only be used for testing)\n    If poolsData is passed as parameter - uses this as pools source.\n    If poolsData was passed in to constructor - uses this as pools source.\n    If pools url was passed in to constructor - uses this to fetch pools source.\n    */\n    async fetchPools(\n        poolsData: SubgraphPoolBase[] = [],\n        isOnChain = true\n    ): Promise<boolean> {\n        return this.poolCacher.fetchPools(poolsData, isOnChain);\n    }\n\n    async getSwaps(\n        tokenIn: string,\n        tokenOut: string,\n        swapType: SwapTypes,\n        swapAmount: BigNumber,\n        swapOptions?: Partial<SwapOptions>\n    ): Promise<SwapInfo> {\n        if (!this.poolCacher.finishedFetchingOnChain)\n            return cloneDeep(EMPTY_SWAPINFO);\n\n        // Set any unset options to their defaults\n        const options: SwapOptions = {\n            ...this.defaultSwapOptions,\n            ...swapOptions,\n        };\n\n        const pools: SubgraphPoolBase[] = this.poolCacher.getPools();\n\n        const filteredPools = filterPoolsByType(pools, options.poolTypeFilter);\n\n        const wrappedInfo = await getWrappedInfo(\n            this.provider,\n            swapType,\n            tokenIn,\n            tokenOut,\n            this.chainId,\n            swapAmount\n        );\n\n        let swapInfo: SwapInfo;\n        if (isLidoStableSwap(this.chainId, tokenIn, tokenOut)) {\n            swapInfo = await getLidoStaticSwaps(\n                filteredPools,\n                this.chainId,\n                wrappedInfo.tokenIn.addressForSwaps,\n                wrappedInfo.tokenOut.addressForSwaps,\n                swapType,\n                wrappedInfo.swapAmountForSwaps,\n                this.provider\n            );\n        } else {\n            swapInfo = await this.processSwaps(\n                wrappedInfo.tokenIn.addressForSwaps,\n                wrappedInfo.tokenOut.addressForSwaps,\n                swapType,\n                wrappedInfo.swapAmountForSwaps,\n                filteredPools,\n                options\n            );\n        }\n\n        if (swapInfo.returnAmount.isZero()) return swapInfo;\n\n        swapInfo = setWrappedInfo(\n            swapInfo,\n            swapType,\n            wrappedInfo,\n            this.chainId\n        );\n\n        return swapInfo;\n    }\n\n    async getCostOfSwapInToken(\n        outputToken: string,\n        gasPrice: BigNumber,\n        swapGas?: BigNumber\n    ): Promise<BigNumber> {\n        if (gasPrice.isZero()) return ZERO;\n        return this.swapCostCalculator.convertGasCostToToken(\n            outputToken,\n            gasPrice,\n            swapGas\n        );\n    }\n\n    // Will process swap/pools data and return best swaps\n    private async processSwaps(\n        tokenIn: string,\n        tokenOut: string,\n        swapType: SwapTypes,\n        swapAmount: BigNumber,\n        pools: SubgraphPoolBase[],\n        swapOptions: SwapOptions\n    ): Promise<SwapInfo> {\n        if (pools.length === 0) return cloneDeep(EMPTY_SWAPINFO);\n\n        const { pools: poolsOfInterest, paths } =\n            this.routeProposer.getCandidatePaths(\n                tokenIn,\n                tokenOut,\n                swapType,\n                pools,\n                swapOptions\n            );\n\n        if (paths.length == 0) return { ...EMPTY_SWAPINFO };\n\n        // Path is guaranteed to contain both tokenIn and tokenOut\n        paths[0].swaps.forEach((swap) => {\n            // Inject token decimals to avoid having to query onchain\n            if (isSameAddress(swap.tokenIn, tokenIn)) {\n                this.swapCostCalculator.setTokenDecimals(\n                    tokenIn,\n                    swap.tokenInDecimals\n                );\n            }\n            if (isSameAddress(swap.tokenOut, tokenOut)) {\n                this.swapCostCalculator.setTokenDecimals(\n                    tokenOut,\n                    swap.tokenOutDecimals\n                );\n            }\n        });\n        const costOutputToken = await this.getCostOfSwapInToken(\n            swapType === SwapTypes.SwapExactIn ? tokenOut : tokenIn,\n            swapOptions.gasPrice,\n            swapOptions.swapGas\n        );\n\n        // Returns list of swaps\n        const [swaps, total, marketSp, totalConsideringFees] =\n            this.getOptimalPaths(\n                poolsOfInterest,\n                paths,\n                swapAmount,\n                swapType,\n                costOutputToken,\n                swapOptions.maxPools\n            );\n\n        const swapInfo = formatSwaps(\n            swaps,\n            swapType,\n            swapAmount,\n            tokenIn,\n            tokenOut,\n            total,\n            totalConsideringFees,\n            marketSp\n        );\n\n        return swapInfo;\n    }\n\n    /**\n     * Find optimal routes for trade from given candidate paths\n     */\n    private getOptimalPaths(\n        pools: PoolDictionary,\n        paths: NewPath[],\n        swapAmount: BigNumber,\n        swapType: SwapTypes,\n        costOutputToken: BigNumber,\n        maxPools: number\n    ): [Swap[][], BigNumber, BigNumber, BigNumber] {\n        // swapExactIn - total = total amount swap will return of tokenOut\n        // swapExactOut - total = total amount of tokenIn required for swap\n        return smartOrderRouter(\n            cloneDeep(pools),\n            paths,\n            swapType,\n            swapAmount,\n            maxPools,\n            costOutputToken\n        );\n    }\n}\n","import { BigNumber, scale, ZERO } from '../utils/bignumber';\nimport * as weightedMath from '../pools/weightedPool/weightedMath';\n\n/////////\n/// UI Helpers\n/////////\n\n// Get BPT amount for token amounts with zero-price impact\n// This function is the same regardless of whether we are considering\n// an Add or Remove liquidity operation: The spot prices of BPT in tokens\n// are the same regardless.\nexport function BPTForTokensZeroPriceImpact(\n    balances: BigNumber[],\n    decimals: number[],\n    normalizedWeights: BigNumber[],\n    amounts: BigNumber[],\n    bptTotalSupply: BigNumber\n): BigNumber {\n    // Calculate the amount of BPT adding this liquidity would result in\n    // if there were no price impact, i.e. using the spot price of tokenIn/BPT\n\n    // We need to scale down the amounts\n    const amountsDownScaled = amounts.map((amount, i) =>\n        scale(amount, -decimals[i])\n    );\n\n    const amountBPTOut = amountsDownScaled.reduce((acc, amount, i) => {\n        const poolPairData = {\n            balanceIn: scale(balances[i], -decimals[i]),\n            balanceOut: scale(bptTotalSupply, -18),\n            weightIn: scale(normalizedWeights[i], -18),\n            swapFee: ZERO,\n        };\n        const BPTPrice = weightedMath._spotPriceAfterSwapTokenInForExactBPTOut(\n            ZERO,\n            poolPairData\n        );\n        return acc.plus(amount.div(BPTPrice));\n    }, ZERO);\n\n    // We need to scale up the amount of BPT out\n    return scale(amountBPTOut, 18);\n}\n","import { BigNumber, bnum, scale, ZERO } from '../utils/bignumber';\nimport * as stableMath from '../pools/stablePool/stableMath';\n\n/////////\n/// UI Helpers\n/////////\n\n// Get BPT amount for token amounts with zero-price impact\n// This function is the same regardless of whether we are considering\n// an Add or Remove liquidity operation: The spot prices of BPT in tokens\n// are the same regardless.\nexport function BPTForTokensZeroPriceImpact(\n    balances: BigNumber[],\n    decimals: number[],\n    amounts: BigNumber[], // This has to have the same lenght as allBalances\n    bptTotalSupply: BigNumber,\n    amp: BigNumber,\n    priceRates: BigNumber[] = balances.map(() => bnum(1))\n): BigNumber {\n    if (\n        balances.length != amounts.length ||\n        balances.length != priceRates.length\n    )\n        throw 'balances, amounts and priceRates have to have same length';\n    // Calculate the amount of BPT adding this liquidity would result in\n    // if there were no price impact, i.e. using the spot price of tokenIn/BPT\n\n    // We need to scale down balances and amounts\n    const balancesDownScaled = balances.map((balance, i) =>\n        scale(balance, -decimals[i]).times(priceRates[i])\n    );\n    const amountsDownScaled = amounts.map((amount, i) =>\n        scale(amount, -decimals[i]).times(priceRates[i])\n    );\n\n    const amountBPTOut = amountsDownScaled.reduce((acc, amount, i) => {\n        const poolPairData = {\n            amp: amp,\n            allBalances: balancesDownScaled,\n            tokenIndexIn: i,\n            balanceOut: scale(bptTotalSupply, -18),\n            swapFee: ZERO,\n        };\n        const BPTPrice = stableMath._spotPriceAfterSwapTokenInForExactBPTOut(\n            ZERO,\n            poolPairData\n        );\n        return acc.plus(amount.div(BPTPrice));\n    }, ZERO);\n\n    // We need to scale up the amount of BPT out\n    return scale(amountBPTOut, 18);\n}\n"],"names":["global","INFINITY","Stream","Blob","Headers","http","https","require$$0","nodejsCustomInspectSymbol","ReactNativeFile","require$$1","require$$2","util","DelayedStream","CombinedStream","defer","async","abort","iterate","terminator","initState","serialOrderedModule","serialOrdered","asynckit","populate","require$$3","require$$4","require$$5","require$$7","require$$8","require$$9","FormData","this","createRequestBody_1","big_number_1","math","logExp","index_1","common_1","base_1","StablePool","WeightedPool","_exactTokenInForTokenOut","_tokenInForExactTokenOut","_exactTokenInForBPTOut","_tokenInForExactBPTOut","_BPTInForExactTokenOut","_exactBPTInForTokenOut","_spotPriceAfterSwapExactTokenInForTokenOut","_spotPriceAfterSwapTokenInForExactTokenOut","_spotPriceAfterSwapExactTokenInForBPTOut","_spotPriceAfterSwapTokenInForExactBPTOut","_spotPriceAfterSwapExactBPTInForTokenOut","_spotPriceAfterSwapBPTInForExactTokenOut","_derivativeSpotPriceAfterSwapExactTokenInForTokenOut","_derivativeSpotPriceAfterSwapTokenInForExactTokenOut","_derivativeSpotPriceAfterSwapExactTokenInForBPTOut","_derivativeSpotPriceAfterSwapTokenInForExactBPTOut","_derivativeSpotPriceAfterSwapExactBPTInForTokenOut","_derivativeSpotPriceAfterSwapBPTInForExactTokenOut","SDK.WeightedMath","_invariant","_solveAnalyticalBalance","_getTokenBalanceGivenInvariantAndAllOtherBalances","_poolDerivatives","_poolDerivativesBPT","_feeFactor","SDK.StableMath","Symbol","Map","set","fetch","BPTForTokensZeroPriceImpact","weightedMath._spotPriceAfterSwapTokenInForExactBPTOut","stableMath._spotPriceAfterSwapTokenInForExactBPTOut"],"mappings":"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AAQ,CAAC;AACzE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC;AAC3F,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,KAAK,EAAE;AAC5B,EAAE,OAAO,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACvE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,KAAK,EAAE;AAClC,EAAE,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AACnD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG,cAAc,IAAI,SAAS,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,KAAK,EAAE;AAC3B;AACA;AACA,EAAE,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAC9D,EAAE,OAAO,GAAG,IAAI,OAAO,IAAI,GAAG,IAAI,MAAM,CAAC;AACzC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,KAAK,EAAE;AACzB,EAAE,OAAO,OAAO,KAAK,IAAI,QAAQ;AACjC,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,gBAAgB,CAAC;AAC9D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,KAAK,EAAE;AACzB,EAAE,IAAI,IAAI,GAAG,OAAO,KAAK,CAAC;AAC1B,EAAE,OAAO,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,UAAU,CAAC,CAAC;AAC7D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE;AAC7B,EAAE,OAAO,CAAC,CAAC,KAAK,IAAI,OAAO,KAAK,IAAI,QAAQ,CAAC;AAC7C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,MAAM,EAAE;AACtB,EAAE,OAAO,WAAW,CAAC,MAAM,CAAC,GAAG,aAAa,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AACxE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,GAAG;AACrB,EAAE,OAAO,EAAE,CAAC;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,GAAG;AACrB,EAAE,OAAO,KAAK,CAAC;AACf,CAAC;AACD;AACA,iBAAiB,SAAS;;;;;ACltD1B,SAAS,CAAC,MAAM,CAAC;IACb,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;IAC3B,aAAa,EAAE,CAAC;IAChB,cAAc,EAAE,EAAE;CACrB,CAAC,CAAC;AAEI,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,MAAMC,UAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;AAClC,MAAM,IAAI,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SAE9B,KAAK,CAAC,KAAgB,EAAE,aAAqB;IACzD,MAAM,QAAQ,GAAG,IAAI,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;IACzD,MAAM,QAAQ,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACjD,OAAO,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACjC,CAAC;SAEe,IAAI,CAAC,GAAgC;IACjD,OAAO,IAAI,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;AACzC;;AClBA,IAAI,cAAc,GAAqB,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,KAAK,CAAC;AAC7E,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;IACpC,IAAI,cAAc,KAAK,MAAM,IAAI,cAAc,KAAK,MAAM;QACtD,cAAc,GAAG,IAAI,CAAC;;QACrB,cAAc,GAAG,KAAK,CAAC;CAC/B;AACM,MAAM,gBAAgB,GAAY,cAAc,CAAC;AACxD;AACA;AACA,MAAM,mBAAmB,GACrB,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,SAAS,CAAC;AAC5C,MAAM,qBAAqB,GAAc,IAAI,SAAS,CACzD,mBAAmB,CACtB,CAAC;AACF;AACA;AACA;AACA;AACA,MAAM,aAAa,GAAG,MAAM,CAAC;AACtB,MAAM,aAAa,GAAG,IAAI,SAAS,CAAC,aAAa,CAAC;;ICnB7C;AAAZ,WAAY,SAAS;IACjB,uDAAW,CAAA;IACX,yDAAY,CAAA;AAChB,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;IAEW;AAAZ,WAAY,SAAS;IACjB,iDAAQ,CAAA;IACR,6CAAM,CAAA;IACN,+CAAO,CAAA;IACP,qDAAU,CAAA;AACd,CAAC,EALW,SAAS,KAAT,SAAS,QAKpB;IAEW;AAAZ,WAAY,YAAY;IACpB,mDAAM,CAAA;IACN,iDAAK,CAAA;IACL,mDAAM,CAAA;AACV,CAAC,EAJW,YAAY,KAAZ,YAAY,QAIvB;IAEW;AAAZ,WAAY,SAAS;IACjB,qDAAU,CAAA;IACV,qDAAU,CAAA;IACV,yDAAY,CAAA;AAChB,CAAC,EAJW,SAAS,KAAT,SAAS,QAIpB;IA0GW;AAAZ,WAAY,UAAU;IAClB,yBAAW,CAAA;IACX,mCAAqB,CAAA;IACrB,+BAAiB,CAAA;IACjB,uCAAyB,CAAA;IACzB,4CAA8B,CAAA;AAClC,CAAC,EANW,UAAU,KAAV,UAAU;;;;;;;;;;;;AC5HtB;AACA;AACA;AACA,MAAM,QAAQ,GAAGC,QAAM,CAAC,QAAQ,CAAC;AACjC;AACA,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAChC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAC5B;AACA,MAAMC,MAAI,CAAC;AACX,CAAC,WAAW,GAAG;AACf,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AAClB;AACA,EAAE,MAAM,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACjC,EAAE,MAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC/B;AACA,EAAE,MAAM,OAAO,GAAG,EAAE,CAAC;AACrB,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;AACf;AACA,EAAE,IAAI,SAAS,EAAE;AACjB,GAAG,MAAM,CAAC,GAAG,SAAS,CAAC;AACvB,GAAG,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AACnC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,IAAI,MAAM,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,IAAI,IAAI,MAAM,CAAC;AACf,IAAI,IAAI,OAAO,YAAY,MAAM,EAAE;AACnC,KAAK,MAAM,GAAG,OAAO,CAAC;AACtB,KAAK,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;AAC5C,KAAK,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;AAClF,KAAK,MAAM,IAAI,OAAO,YAAY,WAAW,EAAE;AAC/C,KAAK,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACnC,KAAK,MAAM,IAAI,OAAO,YAAYA,MAAI,EAAE;AACxC,KAAK,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC9B,KAAK,MAAM;AACX,KAAK,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,OAAO,KAAK,QAAQ,GAAG,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AACnF,KAAK;AACL,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC;AAC1B,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzB,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACxC;AACA,EAAE,IAAI,IAAI,GAAG,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;AACzF,EAAE,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC9C,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AACrB,GAAG;AACH,EAAE;AACF,CAAC,IAAI,IAAI,GAAG;AACZ,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;AAC7B,EAAE;AACF,CAAC,IAAI,IAAI,GAAG;AACZ,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,EAAE;AACF,CAAC,IAAI,GAAG;AACR,EAAE,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAClD,EAAE;AACF,CAAC,WAAW,GAAG;AACf,EAAE,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3B,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;AAC/E,EAAE,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC7B,EAAE;AACF,CAAC,MAAM,GAAG;AACV,EAAE,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAClC,EAAE,QAAQ,CAAC,KAAK,GAAG,YAAY,EAAE,CAAC;AAClC,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9B,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtB,EAAE,OAAO,QAAQ,CAAC;AAClB,EAAE;AACF,CAAC,QAAQ,GAAG;AACZ,EAAE,OAAO,eAAe,CAAC;AACzB,EAAE;AACF,CAAC,KAAK,GAAG;AACT,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB;AACA,EAAE,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC7B,EAAE,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3B,EAAE,IAAI,aAAa,EAAE,WAAW,CAAC;AACjC,EAAE,IAAI,KAAK,KAAK,SAAS,EAAE;AAC3B,GAAG,aAAa,GAAG,CAAC,CAAC;AACrB,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,EAAE;AACxB,GAAG,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;AAC7C,GAAG,MAAM;AACT,GAAG,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACzC,GAAG;AACH,EAAE,IAAI,GAAG,KAAK,SAAS,EAAE;AACzB,GAAG,WAAW,GAAG,IAAI,CAAC;AACtB,GAAG,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE;AACtB,GAAG,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;AACzC,GAAG,MAAM;AACT,GAAG,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACrC,GAAG;AACH,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,aAAa,EAAE,CAAC,CAAC,CAAC;AACxD;AACA,EAAE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9B,EAAE,MAAM,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,aAAa,GAAG,IAAI,CAAC,CAAC;AACzE,EAAE,MAAM,IAAI,GAAG,IAAIA,MAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACpD,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC;AAC9B,EAAE,OAAO,IAAI,CAAC;AACd,EAAE;AACF,CAAC;AACD;AACA,MAAM,CAAC,gBAAgB,CAACA,MAAI,CAAC,SAAS,EAAE;AACxC,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC3B,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC3B,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC5B,CAAC,CAAC,CAAC;AACH;AACA,MAAM,CAAC,cAAc,CAACA,MAAI,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE;AAC1D,CAAC,KAAK,EAAE,MAAM;AACd,CAAC,QAAQ,EAAE,KAAK;AAChB,CAAC,UAAU,EAAE,KAAK;AAClB,CAAC,YAAY,EAAE,IAAI;AACnB,CAAC,CAAC,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE;AAChD,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC5B;AACA,EAAE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACzB,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB;AACA;AACA,EAAE,IAAI,WAAW,EAAE;AACnB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;AAC9C,GAAG;AACH;AACA;AACA,EAAE,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AAClD,CAAC;AACD;AACA,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACtD,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,CAAC;AAC9C,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY,CAAC;AACzC;AACA,IAAI,OAAO,CAAC;AACZ,IAAI;AACJ,CAAC,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC;AACvC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE;AACd;AACA,MAAM,SAAS,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAC3C;AACA;AACA,MAAM,WAAW,GAAGD,QAAM,CAAC,WAAW,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,IAAI,EAAE;AACpB,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC;AAClB;AACA,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;AAClF,KAAK,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;AAC3B;AACA,CAAC,IAAI,IAAI,GAAG,SAAS,KAAK,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC;AACpD,CAAC,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;AACjC,CAAC,IAAI,OAAO,GAAG,YAAY,KAAK,SAAS,GAAG,CAAC,GAAG,YAAY,CAAC;AAC7D;AACA,CAAC,IAAI,IAAI,IAAI,IAAI,EAAE;AACnB;AACA,EAAE,IAAI,GAAG,IAAI,CAAC;AACd,EAAE,MAAM,IAAI,iBAAiB,CAAC,IAAI,CAAC,EAAE;AACrC;AACA,EAAE,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AACtC,EAAE,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,sBAAsB,EAAE;AACxI;AACA,EAAE,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B,EAAE,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACtC;AACA,EAAE,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACpE,EAAE,MAAM,IAAI,IAAI,YAAYA,QAAM,EAAE,CAAC,MAAM;AAC3C;AACA;AACA,EAAE,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACnC,EAAE;AACF,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG;AACnB,EAAE,IAAI;AACN,EAAE,SAAS,EAAE,KAAK;AAClB,EAAE,KAAK,EAAE,IAAI;AACb,EAAE,CAAC;AACH,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAClB,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACxB;AACA,CAAC,IAAI,IAAI,YAAYA,QAAM,EAAE;AAC7B,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,GAAG,EAAE;AAClC,GAAG,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,KAAK,YAAY,GAAG,GAAG,GAAG,IAAI,UAAU,CAAC,CAAC,4CAA4C,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;AAC7J,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;AAClC,GAAG,CAAC,CAAC;AACL,EAAE;AACF,CAAC;AACD;AACA,IAAI,CAAC,SAAS,GAAG;AACjB,CAAC,IAAI,IAAI,GAAG;AACZ,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAC9B,EAAE;AACF;AACA,CAAC,IAAI,QAAQ,GAAG;AAChB,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;AACnC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,WAAW,GAAG;AACf,EAAE,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACpD,GAAG,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;AAC5E,GAAG,CAAC,CAAC;AACL,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI,GAAG;AACR,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;AAClE,EAAE,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACpD,GAAG,OAAO,MAAM,CAAC,MAAM;AACvB;AACA,GAAG,IAAIC,MAAI,CAAC,EAAE,EAAE;AAChB,IAAI,IAAI,EAAE,EAAE,CAAC,WAAW,EAAE;AAC1B,IAAI,CAAC,EAAE;AACP,IAAI,CAAC,MAAM,GAAG,GAAG;AACjB,IAAI,CAAC,CAAC;AACN,GAAG,CAAC,CAAC;AACL,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI,GAAG;AACR,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC;AACpB;AACA,EAAE,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,MAAM,EAAE;AACvD,GAAG,IAAI;AACP,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AACzC,IAAI,CAAC,OAAO,GAAG,EAAE;AACjB,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,8BAA8B,EAAE,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC;AACrI,IAAI;AACJ,GAAG,CAAC,CAAC;AACL,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI,GAAG;AACR,EAAE,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,MAAM,EAAE;AACvD,GAAG,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;AAC5B,GAAG,CAAC,CAAC;AACL,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,MAAM,GAAG;AACV,EAAE,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,aAAa,GAAG;AACjB,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC;AACpB;AACA,EAAE,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,MAAM,EAAE;AACvD,GAAG,OAAO,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;AAC9C,GAAG,CAAC,CAAC;AACL,EAAE;AACF,CAAC,CAAC;AACF;AACA;AACA,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE;AACxC,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC3B,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC/B,CAAC,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAClC,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC3B,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC3B,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC3B,CAAC,CAAC,CAAC;AACH;AACA,IAAI,CAAC,KAAK,GAAG,UAAU,KAAK,EAAE;AAC9B,CAAC,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AAChE;AACA,EAAE,IAAI,EAAE,IAAI,IAAI,KAAK,CAAC,EAAE;AACxB,GAAG,MAAM,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC5C,GAAG;AACH,EAAE;AACF,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,GAAG;AACvB,CAAC,IAAI,MAAM,GAAG,IAAI,CAAC;AACnB;AACA,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE;AAChC,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,CAAC,uBAAuB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,EAAE;AACF;AACA,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;AAClC;AACA,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE;AAC5B,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;AACpD,EAAE;AACF;AACA,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACtB;AACA;AACA,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE;AACpB,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,EAAE;AACF;AACA;AACA,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;AACnB,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AACvB,EAAE;AACF;AACA;AACA,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAC5B,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACpC,EAAE;AACF;AACA;AACA,CAAC,IAAI,EAAE,IAAI,YAAYD,QAAM,CAAC,EAAE;AAChC,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,EAAE;AACF;AACA;AACA;AACA,CAAC,IAAI,KAAK,GAAG,EAAE,CAAC;AAChB,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC;AACpB,CAAC,IAAI,KAAK,GAAG,KAAK,CAAC;AACnB;AACA,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AACpD,EAAE,IAAI,UAAU,CAAC;AACjB;AACA;AACA,EAAE,IAAI,MAAM,CAAC,OAAO,EAAE;AACtB,GAAG,UAAU,GAAG,UAAU,CAAC,YAAY;AACvC,IAAI,KAAK,GAAG,IAAI,CAAC;AACjB,IAAI,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,uCAAuC,EAAE,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC;AAC9H,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;AACtB,GAAG;AACH;AACA;AACA,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,GAAG,EAAE;AAClC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,EAAE;AAClC;AACA,IAAI,KAAK,GAAG,IAAI,CAAC;AACjB,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;AAChB,IAAI,MAAM;AACV;AACA,IAAI,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,4CAA4C,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;AACvH,IAAI;AACJ,GAAG,CAAC,CAAC;AACL;AACA,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,EAAE;AACnC,GAAG,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,EAAE;AAChC,IAAI,OAAO;AACX,IAAI;AACJ;AACA,GAAG,IAAI,MAAM,CAAC,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE;AAC/D,IAAI,KAAK,GAAG,IAAI,CAAC;AACjB,IAAI,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,gBAAgB,EAAE,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;AACnG,IAAI,OAAO;AACX,IAAI;AACJ;AACA,GAAG,UAAU,IAAI,KAAK,CAAC,MAAM,CAAC;AAC9B,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY;AAC7B,GAAG,IAAI,KAAK,EAAE;AACd,IAAI,OAAO;AACX,IAAI;AACJ;AACA,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;AAC5B;AACA,GAAG,IAAI;AACP,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;AAC9C,IAAI,CAAC,OAAO,GAAG,EAAE;AACjB;AACA,IAAI,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,+CAA+C,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;AAC1H,IAAI;AACJ,GAAG,CAAC,CAAC;AACL,EAAE,CAAC,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE;AACtC,CAAC,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;AACpC,EAAE,MAAM,IAAI,KAAK,CAAC,8EAA8E,CAAC,CAAC;AAClG,EAAE;AACF;AACA,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACxC,CAAC,IAAI,OAAO,GAAG,OAAO,CAAC;AACvB,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC;AACd;AACA;AACA,CAAC,IAAI,EAAE,EAAE;AACT,EAAE,GAAG,GAAG,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACpC,EAAE;AACF;AACA;AACA,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;AACxC;AACA;AACA,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE;AAClB,EAAE,GAAG,GAAG,gCAAgC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnD,EAAE;AACF;AACA;AACA,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE;AAClB,EAAE,GAAG,GAAG,wEAAwE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3F,EAAE,IAAI,CAAC,GAAG,EAAE;AACZ,GAAG,GAAG,GAAG,wEAAwE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5F,GAAG,IAAI,GAAG,EAAE;AACZ,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;AACd,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,GAAG,EAAE;AACX,GAAG,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;AACzC,GAAG;AACH,EAAE;AACF;AACA;AACA,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE;AAClB,EAAE,GAAG,GAAG,kCAAkC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrD,EAAE;AACF;AACA;AACA,CAAC,IAAI,GAAG,EAAE;AACV,EAAE,OAAO,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;AACtB;AACA;AACA;AACA,EAAE,IAAI,OAAO,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,EAAE;AACjD,GAAG,OAAO,GAAG,SAAS,CAAC;AACvB,GAAG;AACH,EAAE;AACF;AACA;AACA,CAAC,OAAO,OAAO,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;AACrD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,GAAG,EAAE;AAChC;AACA,CAAC,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,MAAM,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,MAAM,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,GAAG,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,MAAM,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,GAAG,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,GAAG,KAAK,UAAU,EAAE;AAC7O,EAAE,OAAO,KAAK,CAAC;AACf,EAAE;AACF;AACA;AACA,CAAC,OAAO,GAAG,CAAC,WAAW,CAAC,IAAI,KAAK,iBAAiB,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,0BAA0B,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,UAAU,CAAC;AAC3J,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,CAAC,GAAG,EAAE;AACrB,CAAC,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,WAAW,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,MAAM,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,WAAW,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,WAAW,CAAC,IAAI,KAAK,QAAQ,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;AACjU,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,QAAQ,EAAE;AACzB,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC;AACZ,CAAC,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC1B;AACA;AACA,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE;AACxB,EAAE,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;AACxD,EAAE;AACF;AACA;AACA;AACA,CAAC,IAAI,IAAI,YAAYA,QAAM,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,UAAU,EAAE;AACvE;AACA,EAAE,EAAE,GAAG,IAAI,WAAW,EAAE,CAAC;AACzB,EAAE,EAAE,GAAG,IAAI,WAAW,EAAE,CAAC;AACzB,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChB,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChB;AACA,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;AAChC,EAAE,IAAI,GAAG,EAAE,CAAC;AACZ,EAAE;AACF;AACA,CAAC,OAAO,IAAI,CAAC;AACb,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,CAAC,IAAI,EAAE;AAClC,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE;AACpB;AACA,EAAE,OAAO,IAAI,CAAC;AACd,EAAE,MAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACtC;AACA,EAAE,OAAO,0BAA0B,CAAC;AACpC,EAAE,MAAM,IAAI,iBAAiB,CAAC,IAAI,CAAC,EAAE;AACrC;AACA,EAAE,OAAO,iDAAiD,CAAC;AAC3D,EAAE,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;AAC1B;AACA,EAAE,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;AAC3B,EAAE,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACnC;AACA,EAAE,OAAO,IAAI,CAAC;AACd,EAAE,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,sBAAsB,EAAE;AAC7E;AACA,EAAE,OAAO,IAAI,CAAC;AACd,EAAE,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACtC;AACA,EAAE,OAAO,IAAI,CAAC;AACd,EAAE,MAAM,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,UAAU,EAAE;AACpD;AACA,EAAE,OAAO,CAAC,6BAA6B,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAC9D,EAAE,MAAM,IAAI,IAAI,YAAYA,QAAM,EAAE;AACpC;AACA;AACA,EAAE,OAAO,IAAI,CAAC;AACd,EAAE,MAAM;AACR;AACA,EAAE,OAAO,0BAA0B,CAAC;AACpC,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,QAAQ,EAAE;AACjC,CAAC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC5B;AACA;AACA,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE;AACpB;AACA,EAAE,OAAO,CAAC,CAAC;AACX,EAAE,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;AAC1B,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC;AACnB,EAAE,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACnC;AACA,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC;AACrB,EAAE,MAAM,IAAI,IAAI,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,UAAU,EAAE;AAC9D;AACA,EAAE,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC;AAClE,EAAE,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;AAChD;AACA,GAAG,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;AAC/B,GAAG;AACH,EAAE,OAAO,IAAI,CAAC;AACd,EAAE,MAAM;AACR;AACA,EAAE,OAAO,IAAI,CAAC;AACd,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,IAAI,EAAE,QAAQ,EAAE;AACvC,CAAC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC5B;AACA;AACA,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE;AACpB;AACA,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACb,EAAE,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;AAC1B,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B,EAAE,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACnC;AACA,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACnB,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACb,EAAE,MAAM;AACR;AACA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClB,EAAE;AACF,CAAC;AACD;AACA;AACA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB,GAAG,+BAA+B,CAAC;AAC1D,MAAM,sBAAsB,GAAG,yBAAyB,CAAC;AACzD;AACA,SAAS,YAAY,CAAC,IAAI,EAAE;AAC5B,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AAClB,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,EAAE,EAAE;AAClD,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,gCAAgC,CAAC,CAAC,CAAC;AACjE,EAAE;AACF,CAAC;AACD;AACA,SAAS,aAAa,CAAC,KAAK,EAAE;AAC9B,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AACpB,CAAC,IAAI,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AACzC,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;AACnE,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE;AACzB,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAC3B,CAAC,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AACxB,EAAE,IAAI,GAAG,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;AAClC,GAAG,OAAO,GAAG,CAAC;AACd,GAAG;AACH,EAAE;AACF,CAAC,OAAO,SAAS,CAAC;AAClB,CAAC;AACD;AACA,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AAC1B,MAAME,SAAO,CAAC;AACd;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,WAAW,GAAG;AACf,EAAE,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;AAC3F;AACA,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAClC;AACA,EAAE,IAAI,IAAI,YAAYA,SAAO,EAAE;AAC/B,GAAG,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACjC,GAAG,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/C;AACA,GAAG,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;AACzC,IAAI,KAAK,MAAM,KAAK,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;AAChD,KAAK,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AACpC,KAAK;AACL,IAAI;AACJ;AACA,GAAG,OAAO;AACV,GAAG;AACH;AACA;AACA;AACA,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC,MAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACzD,GAAG,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACxC,GAAG,IAAI,MAAM,IAAI,IAAI,EAAE;AACvB,IAAI,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;AACtC,KAAK,MAAM,IAAI,SAAS,CAAC,+BAA+B,CAAC,CAAC;AAC1D,KAAK;AACL;AACA;AACA;AACA,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;AACrB,IAAI,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;AAC7B,KAAK,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,UAAU,EAAE;AAClF,MAAM,MAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC,CAAC;AAC/D,MAAM;AACN,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAClC,KAAK;AACL;AACA,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAC9B,KAAK,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5B,MAAM,MAAM,IAAI,SAAS,CAAC,6CAA6C,CAAC,CAAC;AACzE,MAAM;AACN,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,KAAK;AACL,IAAI,MAAM;AACV;AACA,IAAI,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACzC,KAAK,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7B,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC7B,KAAK;AACL,IAAI;AACJ,GAAG,MAAM;AACT,GAAG,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;AACjE,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG,CAAC,IAAI,EAAE;AACX,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACnB,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;AACrB,EAAE,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AACpC,EAAE,IAAI,GAAG,KAAK,SAAS,EAAE;AACzB,GAAG,OAAO,IAAI,CAAC;AACf,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,OAAO,CAAC,QAAQ,EAAE;AACnB,EAAE,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;AAC9F;AACA,EAAE,IAAI,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAC/B,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACZ,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE;AAC3B,GAAG,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3B,GAAG,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC;AAC3B,SAAS,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC7B;AACA,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC7C,GAAG,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAC5B,GAAG,CAAC,EAAE,CAAC;AACP,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE;AAClB,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACnB,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AACrB,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;AACrB,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;AACvB,EAAE,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AACpC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACtD,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE;AACrB,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACnB,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AACrB,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;AACrB,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;AACvB,EAAE,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AACpC,EAAE,IAAI,GAAG,KAAK,SAAS,EAAE;AACzB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,GAAG,MAAM;AACT,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC7B,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG,CAAC,IAAI,EAAE;AACX,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACnB,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;AACrB,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,SAAS,CAAC;AAC7C,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,MAAM,CAAC,IAAI,EAAE;AACd,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACnB,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;AACrB,EAAE,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AACpC,EAAE,IAAI,GAAG,KAAK,SAAS,EAAE;AACzB,GAAG,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACzB,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG,GAAG;AACP,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI,GAAG;AACR,EAAE,OAAO,qBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC5C,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,MAAM,GAAG;AACV,EAAE,OAAO,qBAAqB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC9C,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG;AACrB,EAAE,OAAO,qBAAqB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AAClD,EAAE;AACF,CAAC;AACDA,SAAO,CAAC,SAAS,CAAC,OAAO,GAAGA,SAAO,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC/D;AACA,MAAM,CAAC,cAAc,CAACA,SAAO,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE;AAC7D,CAAC,KAAK,EAAE,SAAS;AACjB,CAAC,QAAQ,EAAE,KAAK;AAChB,CAAC,UAAU,EAAE,KAAK;AAClB,CAAC,YAAY,EAAE,IAAI;AACnB,CAAC,CAAC,CAAC;AACH;AACA,MAAM,CAAC,gBAAgB,CAACA,SAAO,CAAC,SAAS,EAAE;AAC3C,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC1B,CAAC,OAAO,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC9B,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC1B,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC7B,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC1B,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC7B,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC3B,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC7B,CAAC,OAAO,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC9B,CAAC,CAAC,CAAC;AACH;AACA,SAAS,UAAU,CAAC,OAAO,EAAE;AAC7B,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;AAC5F;AACA,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AAC/C,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,KAAK,GAAG,UAAU,CAAC,EAAE;AAC/C,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;AACzB,EAAE,GAAG,IAAI,KAAK,OAAO,GAAG,UAAU,CAAC,EAAE;AACrC,EAAE,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpC,EAAE,GAAG,UAAU,CAAC,EAAE;AAClB,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACvD,EAAE,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AACpC;AACA,SAAS,qBAAqB,CAAC,MAAM,EAAE,IAAI,EAAE;AAC7C,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;AAC1D,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG;AACtB,EAAE,MAAM;AACR,EAAE,IAAI;AACN,EAAE,KAAK,EAAE,CAAC;AACV,EAAE,CAAC;AACH,CAAC,OAAO,QAAQ,CAAC;AACjB,CAAC;AACD;AACA,MAAM,wBAAwB,GAAG,MAAM,CAAC,cAAc,CAAC;AACvD,CAAC,IAAI,GAAG;AACR;AACA,EAAE,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,wBAAwB,EAAE;AACzE,GAAG,MAAM,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAC;AACnE,GAAG;AACH;AACA,EAAE,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;AACjC,EAAE,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM;AACjC,QAAQ,IAAI,GAAG,SAAS,CAAC,IAAI;AAC7B,QAAQ,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;AAChC;AACA,EAAE,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC1C,EAAE,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;AAC5B,EAAE,IAAI,KAAK,IAAI,GAAG,EAAE;AACpB,GAAG,OAAO;AACV,IAAI,KAAK,EAAE,SAAS;AACpB,IAAI,IAAI,EAAE,IAAI;AACd,IAAI,CAAC;AACL,GAAG;AACH;AACA,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;AACnC;AACA,EAAE,OAAO;AACT,GAAG,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC;AACvB,GAAG,IAAI,EAAE,KAAK;AACd,GAAG,CAAC;AACJ,EAAE;AACF,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACxE;AACA,MAAM,CAAC,cAAc,CAAC,wBAAwB,EAAE,MAAM,CAAC,WAAW,EAAE;AACpE,CAAC,KAAK,EAAE,iBAAiB;AACzB,CAAC,QAAQ,EAAE,KAAK;AAChB,CAAC,UAAU,EAAE,KAAK;AAClB,CAAC,YAAY,EAAE,IAAI;AACnB,CAAC,CAAC,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,2BAA2B,CAAC,OAAO,EAAE;AAC9C,CAAC,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9D;AACA;AACA;AACA,CAAC,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;AAClD,CAAC,IAAI,aAAa,KAAK,SAAS,EAAE;AAClC,EAAE,GAAG,CAAC,aAAa,CAAC,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,EAAE;AACF;AACA,CAAC,OAAO,GAAG,CAAC;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB,CAAC,GAAG,EAAE;AACnC,CAAC,MAAM,OAAO,GAAG,IAAIA,SAAO,EAAE,CAAC;AAC/B,CAAC,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACtC,EAAE,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACpC,GAAG,SAAS;AACZ,GAAG;AACH,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;AAChC,GAAG,KAAK,MAAM,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE;AAChC,IAAI,IAAI,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAC1C,KAAK,SAAS;AACd,KAAK;AACL,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;AAC1C,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAChC,KAAK,MAAM;AACX,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClC,KAAK;AACL,IAAI;AACJ,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;AACtD,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AACpC,GAAG;AACH,EAAE;AACF,CAAC,OAAO,OAAO,CAAC;AAChB,CAAC;AACD;AACA,MAAM,WAAW,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;AACjD;AACA;AACA,MAAM,YAAY,GAAGC,MAAI,CAAC,YAAY,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,CAAC;AACf,CAAC,WAAW,GAAG;AACf,EAAE,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACtF,EAAE,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACpF;AACA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC9B;AACA,EAAE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC;AACpC,EAAE,MAAM,OAAO,GAAG,IAAID,SAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5C;AACA,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;AACpD,GAAG,MAAM,WAAW,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAChD,GAAG,IAAI,WAAW,EAAE;AACpB,IAAI,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;AAChD,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG;AACtB,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG;AAChB,GAAG,MAAM;AACT,GAAG,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC,MAAM,CAAC;AACtD,GAAG,OAAO;AACV,GAAG,OAAO,EAAE,IAAI,CAAC,OAAO;AACxB,GAAG,CAAC;AACJ,EAAE;AACF;AACA,CAAC,IAAI,GAAG,GAAG;AACX,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC;AACrC,EAAE;AACF;AACA,CAAC,IAAI,MAAM,GAAG;AACd,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;AAClC,EAAE;AACF;AACA;AACA;AACA;AACA,CAAC,IAAI,EAAE,GAAG;AACV,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC;AAC3E,EAAE;AACF;AACA,CAAC,IAAI,UAAU,GAAG;AAClB,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;AACvC,EAAE;AACF;AACA,CAAC,IAAI,UAAU,GAAG;AAClB,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC;AACtC,EAAE;AACF;AACA,CAAC,IAAI,OAAO,GAAG;AACf,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC;AACnC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,KAAK,GAAG;AACT,EAAE,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AACnC,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG;AAChB,GAAG,MAAM,EAAE,IAAI,CAAC,MAAM;AACtB,GAAG,UAAU,EAAE,IAAI,CAAC,UAAU;AAC9B,GAAG,OAAO,EAAE,IAAI,CAAC,OAAO;AACxB,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE;AACd,GAAG,UAAU,EAAE,IAAI,CAAC,UAAU;AAC9B,GAAG,CAAC,CAAC;AACL,EAAE;AACF,CAAC;AACD;AACA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC/B;AACA,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,EAAE;AAC5C,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC1B,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC7B,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AACzB,CAAC,UAAU,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AACjC,CAAC,UAAU,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AACjC,CAAC,OAAO,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC9B,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC5B,CAAC,CAAC,CAAC;AACH;AACA,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE;AAC9D,CAAC,KAAK,EAAE,UAAU;AAClB,CAAC,QAAQ,EAAE,KAAK;AAChB,CAAC,UAAU,EAAE,KAAK;AAClB,CAAC,YAAY,EAAE,IAAI;AACnB,CAAC,CAAC,CAAC;AACH;AACA,MAAM,WAAW,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;AAChD;AACA;AACA,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;AAC5B,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC;AAC9B;AACA,MAAM,0BAA0B,GAAG,SAAS,IAAIF,QAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,KAAK,EAAE;AAC1B,CAAC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,CAAC,WAAW,CAAC,KAAK,QAAQ,CAAC;AAC5E,CAAC;AACD;AACA,SAAS,aAAa,CAAC,MAAM,EAAE;AAC/B,CAAC,MAAM,KAAK,GAAG,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AACrF,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC;AAC9D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO,CAAC;AACd,CAAC,WAAW,CAAC,KAAK,EAAE;AACpB,EAAE,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACpF;AACA,EAAE,IAAI,SAAS,CAAC;AAChB;AACA;AACA,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;AACzB,GAAG,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE;AAC5B;AACA;AACA;AACA,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACtC,IAAI,MAAM;AACV;AACA,IAAI,SAAS,GAAG,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AACtC,IAAI;AACJ,GAAG,KAAK,GAAG,EAAE,CAAC;AACd,GAAG,MAAM;AACT,GAAG,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACpC,GAAG;AACH;AACA,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC;AACpD,EAAE,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AAChC;AACA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,SAAS,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,KAAK,KAAK,IAAI,MAAM,KAAK,MAAM,CAAC,EAAE;AACjH,GAAG,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;AACxE,GAAG;AACH;AACA,EAAE,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;AAChH;AACA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE;AAC7B,GAAG,OAAO,EAAE,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,CAAC;AAC9C,GAAG,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC;AACrC,GAAG,CAAC,CAAC;AACL;AACA,EAAE,MAAM,OAAO,GAAG,IAAIE,SAAO,CAAC,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AACnE;AACA,EAAE,IAAI,SAAS,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;AACzD,GAAG,MAAM,WAAW,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;AACrD,GAAG,IAAI,WAAW,EAAE;AACpB,IAAI,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;AAChD,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;AACtD,EAAE,IAAI,QAAQ,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC7C;AACA,EAAE,IAAI,MAAM,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;AAChD,GAAG,MAAM,IAAI,SAAS,CAAC,iDAAiD,CAAC,CAAC;AAC1E,GAAG;AACH;AACA,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG;AACtB,GAAG,MAAM;AACT,GAAG,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,IAAI,QAAQ;AACxD,GAAG,OAAO;AACV,GAAG,SAAS;AACZ,GAAG,MAAM;AACT,GAAG,CAAC;AACJ;AACA;AACA,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,KAAK,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;AACzG,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,KAAK,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,KAAK,SAAS,GAAG,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrH,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,CAAC,CAAC;AACpD,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC;AACzC,EAAE;AACF;AACA,CAAC,IAAI,MAAM,GAAG;AACd,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;AAClC,EAAE;AACF;AACA,CAAC,IAAI,GAAG,GAAG;AACX,EAAE,OAAO,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC;AACjD,EAAE;AACF;AACA,CAAC,IAAI,OAAO,GAAG;AACf,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC;AACnC,EAAE;AACF;AACA,CAAC,IAAI,QAAQ,GAAG;AAChB,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC;AACpC,EAAE;AACF;AACA,CAAC,IAAI,MAAM,GAAG;AACd,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;AAClC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,KAAK,GAAG;AACT,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3B,EAAE;AACF,CAAC;AACD;AACA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAC9B;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE;AAC7D,CAAC,KAAK,EAAE,SAAS;AACjB,CAAC,QAAQ,EAAE,KAAK;AAChB,CAAC,UAAU,EAAE,KAAK;AAClB,CAAC,YAAY,EAAE,IAAI;AACnB,CAAC,CAAC,CAAC;AACH;AACA,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,EAAE;AAC3C,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC7B,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC1B,CAAC,OAAO,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC9B,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC/B,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC5B,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AAC7B,CAAC,CAAC,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qBAAqB,CAAC,OAAO,EAAE;AACxC,CAAC,MAAM,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;AAClD,CAAC,MAAM,OAAO,GAAG,IAAIA,SAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC;AAC3D;AACA;AACA,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AAC7B,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC/B,EAAE;AACF;AACA;AACA,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;AACjD,EAAE,MAAM,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAC;AAC1D,EAAE;AACF;AACA,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;AAC5C,EAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;AAC9D,EAAE;AACF;AACA,CAAC,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,YAAYF,QAAM,CAAC,QAAQ,IAAI,CAAC,0BAA0B,EAAE;AAC/F,EAAE,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;AACrG,EAAE;AACF;AACA;AACA,CAAC,IAAI,kBAAkB,GAAG,IAAI,CAAC;AAC/B,CAAC,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACnE,EAAE,kBAAkB,GAAG,GAAG,CAAC;AAC3B,EAAE;AACF,CAAC,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE;AAC3B,EAAE,MAAM,UAAU,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;AAC5C,EAAE,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;AACtC,GAAG,kBAAkB,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAC3C,GAAG;AACH,EAAE;AACF,CAAC,IAAI,kBAAkB,EAAE;AACzB,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;AACpD,EAAE;AACF;AACA;AACA,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;AACjC,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,wDAAwD,CAAC,CAAC;AACtF,EAAE;AACF;AACA;AACA,CAAC,IAAI,OAAO,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;AAC1D,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;AACjD,EAAE;AACF;AACA,CAAC,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AAC3B,CAAC,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;AAClC,EAAE,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;AAC3B,EAAE;AACF;AACA,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE;AAC3C,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;AACrC,EAAE;AACF;AACA;AACA;AACA;AACA,CAAC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,EAAE;AACrC,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM;AACxB,EAAE,OAAO,EAAE,2BAA2B,CAAC,OAAO,CAAC;AAC/C,EAAE,KAAK;AACP,EAAE,CAAC,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,OAAO,EAAE;AAC7B,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC5B;AACA,EAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;AACxB,EAAE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACzB;AACA;AACA,EAAE,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AAClD,CAAC;AACD;AACA,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACtD,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,CAAC;AAC9C,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY,CAAC;AACzC;AACA;AACA,MAAM,aAAa,GAAGA,QAAM,CAAC,WAAW,CAAC;AACzC,MAAM,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE;AAC1B;AACA;AACA,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AACrB,EAAE,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;AAC5F,EAAE;AACF;AACA,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAC9B;AACA;AACA,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AACrD;AACA,EAAE,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACzC,EAAE,MAAM,OAAO,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;AACjD;AACA,EAAE,MAAM,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,GAAGI,OAAK,GAAGD,MAAI,EAAE,OAAO,CAAC;AACtE,EAAE,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAChC;AACA,EAAE,IAAI,QAAQ,GAAG,IAAI,CAAC;AACtB;AACA,EAAE,MAAM,KAAK,GAAG,SAAS,KAAK,GAAG;AACjC,GAAG,IAAI,KAAK,GAAG,IAAI,UAAU,CAAC,6BAA6B,CAAC,CAAC;AAC7D,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACjB,GAAG,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,YAAYH,QAAM,CAAC,QAAQ,EAAE;AAChE,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,IAAI;AACJ,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO;AAC3C,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACtC,GAAG,CAAC;AACJ;AACA,EAAE,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;AAChC,GAAG,KAAK,EAAE,CAAC;AACX,GAAG,OAAO;AACV,GAAG;AACH;AACA,EAAE,MAAM,gBAAgB,GAAG,SAAS,gBAAgB,GAAG;AACvD,GAAG,KAAK,EAAE,CAAC;AACX,GAAG,QAAQ,EAAE,CAAC;AACd,GAAG,CAAC;AACJ;AACA;AACA,EAAE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5B,EAAE,IAAI,UAAU,CAAC;AACjB;AACA,EAAE,IAAI,MAAM,EAAE;AACd,GAAG,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;AACtD,GAAG;AACH;AACA,EAAE,SAAS,QAAQ,GAAG;AACtB,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;AACf,GAAG,IAAI,MAAM,EAAE,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;AACrE,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;AAC5B,GAAG;AACH;AACA,EAAE,IAAI,OAAO,CAAC,OAAO,EAAE;AACvB,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,MAAM,EAAE;AACxC,IAAI,UAAU,GAAG,UAAU,CAAC,YAAY;AACxC,KAAK,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,oBAAoB,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC;AACrF,KAAK,QAAQ,EAAE,CAAC;AAChB,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;AACxB,IAAI,CAAC,CAAC;AACN,GAAG;AACH;AACA,EAAE,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,GAAG,EAAE;AACjC,GAAG,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;AACrG,GAAG,QAAQ,EAAE,CAAC;AACd,GAAG,CAAC,CAAC;AACL;AACA,EAAE,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,GAAG,EAAE;AACpC,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;AAC5B;AACA,GAAG,MAAM,OAAO,GAAG,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACrD;AACA;AACA,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;AACzC;AACA,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAC7C;AACA;AACA,IAAI,MAAM,WAAW,GAAG,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AACtF;AACA;AACA,IAAI,QAAQ,OAAO,CAAC,QAAQ;AAC5B,KAAK,KAAK,OAAO;AACjB,MAAM,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,uEAAuE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC;AACrI,MAAM,QAAQ,EAAE,CAAC;AACjB,MAAM,OAAO;AACb,KAAK,KAAK,QAAQ;AAClB;AACA,MAAM,IAAI,WAAW,KAAK,IAAI,EAAE;AAChC;AACA,OAAO,IAAI;AACX,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AAC7C,QAAQ,CAAC,OAAO,GAAG,EAAE;AACrB;AACA,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC;AACpB,QAAQ;AACR,OAAO;AACP,MAAM,MAAM;AACZ,KAAK,KAAK,QAAQ;AAClB;AACA,MAAM,IAAI,WAAW,KAAK,IAAI,EAAE;AAChC,OAAO,MAAM;AACb,OAAO;AACP;AACA;AACA,MAAM,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;AAC7C,OAAO,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,6BAA6B,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC;AAC7F,OAAO,QAAQ,EAAE,CAAC;AAClB,OAAO,OAAO;AACd,OAAO;AACP;AACA;AACA;AACA,MAAM,MAAM,WAAW,GAAG;AAC1B,OAAO,OAAO,EAAE,IAAIE,SAAO,CAAC,OAAO,CAAC,OAAO,CAAC;AAC5C,OAAO,MAAM,EAAE,OAAO,CAAC,MAAM;AAC7B,OAAO,OAAO,EAAE,OAAO,CAAC,OAAO,GAAG,CAAC;AACnC,OAAO,KAAK,EAAE,OAAO,CAAC,KAAK;AAC3B,OAAO,QAAQ,EAAE,OAAO,CAAC,QAAQ;AACjC,OAAO,MAAM,EAAE,OAAO,CAAC,MAAM;AAC7B,OAAO,IAAI,EAAE,OAAO,CAAC,IAAI;AACzB,OAAO,MAAM,EAAE,OAAO,CAAC,MAAM;AAC7B,OAAO,OAAO,EAAE,OAAO,CAAC,OAAO;AAC/B,OAAO,IAAI,EAAE,OAAO,CAAC,IAAI;AACzB,OAAO,CAAC;AACR;AACA;AACA,MAAM,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,OAAO,CAAC,IAAI,IAAI,aAAa,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;AACrF,OAAO,MAAM,CAAC,IAAI,UAAU,CAAC,0DAA0D,EAAE,sBAAsB,CAAC,CAAC,CAAC;AAClH,OAAO,QAAQ,EAAE,CAAC;AAClB,OAAO,OAAO;AACd,OAAO;AACP;AACA;AACA,MAAM,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,KAAK,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE;AACrH,OAAO,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;AAClC,OAAO,WAAW,CAAC,IAAI,GAAG,SAAS,CAAC;AACpC,OAAO,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACpD,OAAO;AACP;AACA;AACA,MAAM,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;AAC5D,MAAM,QAAQ,EAAE,CAAC;AACjB,MAAM,OAAO;AACb,KAAK;AACL,IAAI;AACJ;AACA;AACA,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY;AAC/B,IAAI,IAAI,MAAM,EAAE,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;AACtE,IAAI,CAAC,CAAC;AACN,GAAG,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,aAAa,EAAE,CAAC,CAAC;AAC5C;AACA,GAAG,MAAM,gBAAgB,GAAG;AAC5B,IAAI,GAAG,EAAE,OAAO,CAAC,GAAG;AACpB,IAAI,MAAM,EAAE,GAAG,CAAC,UAAU;AAC1B,IAAI,UAAU,EAAE,GAAG,CAAC,aAAa;AACjC,IAAI,OAAO,EAAE,OAAO;AACpB,IAAI,IAAI,EAAE,OAAO,CAAC,IAAI;AACtB,IAAI,OAAO,EAAE,OAAO,CAAC,OAAO;AAC5B,IAAI,OAAO,EAAE,OAAO,CAAC,OAAO;AAC5B,IAAI,CAAC;AACL;AACA;AACA,GAAG,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,IAAI,OAAO,KAAK,IAAI,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;AAC/H,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;AACpD,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC;AACtB,IAAI,OAAO;AACX,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,MAAM,WAAW,GAAG;AACvB,IAAI,KAAK,EAAE,IAAI,CAAC,YAAY;AAC5B,IAAI,WAAW,EAAE,IAAI,CAAC,YAAY;AAClC,IAAI,CAAC;AACL;AACA;AACA,GAAG,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,IAAI,QAAQ,EAAE;AACjD,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;AACrD,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;AACpD,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC;AACtB,IAAI,OAAO;AACX,IAAI;AACJ;AACA;AACA,GAAG,IAAI,OAAO,IAAI,SAAS,IAAI,OAAO,IAAI,WAAW,EAAE;AACvD;AACA;AACA,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,aAAa,EAAE,CAAC,CAAC;AAC9C,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,KAAK,EAAE;AACtC;AACA,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,EAAE;AACrC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;AAC7C,MAAM,MAAM;AACZ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAChD,MAAM;AACN,KAAK,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;AACrD,KAAK,OAAO,CAAC,QAAQ,CAAC,CAAC;AACvB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO;AACX,IAAI;AACJ;AACA;AACA,GAAG,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,CAAC,sBAAsB,KAAK,UAAU,EAAE;AAC7E,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;AACpD,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;AACpD,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC;AACtB,IAAI,OAAO;AACX,IAAI;AACJ;AACA;AACA,GAAG,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;AACnD,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACrB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,aAAa,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAC9B,EAAE,CAAC,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE;AACnC,CAAC,OAAO,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,CAAC;AACrF,CAAC,CAAC;AACF;AACA;AACA,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;;;;;;;;;;;;;;AClmD9B,MAAM,SAAS,GAAGG,aAAqB;AACvC,MAAM,SAAS,GAAG,SAAS,CAAC,OAAO,IAAI,UAAS;AAChD;AACA,MAAM,KAAK,GAAG,UAAU,GAAG,EAAE,OAAO,EAAE;AACtC;AACA;AACA,EAAE,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACzB,IAAI,GAAG,GAAG,QAAQ,GAAG,IAAG;AACxB,GAAG;AACH,EAAE,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC;AAC3C,EAAC;AACD;AACA,KAAK,CAAC,QAAQ,GAAG,KAAI;AACrB;AACA,iBAAiB,OAAO,GAAG,MAAK;AAChC,gBAAgB,MAAK;AACrB,kBAAkB,SAAS,CAAC,QAAO;AACnC,kBAAkB,SAAS,CAAC,QAAO;AACnC,mBAAmB,SAAS,CAAC,SAAQ;AACrC;AACA;AACA,kBAAkB;;;ACrBlB;AACA,IAAI,yBAAyB,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,4BAA4B,CAAC,GAAG,SAAS,CAAC;AACxJ,kCAAe,yBAAyB;;ACFxC,SAAS,OAAO,CAAC,GAAG,EAAE,EAAE,yBAAyB,CAAC,CAAC,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,QAAQ,EAAE,EAAE,OAAO,GAAG,SAAS,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,OAAO,GAAG,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,GAAG,SAAS,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,GAAG,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,IAAI,GAAG,KAAK,MAAM,CAAC,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;AAI1X,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,IAAI,mBAAmB,GAAG,CAAC,CAAC;AAC5B;AACA;AACA;AACA;AACe,SAAS,OAAO,CAAC,KAAK,EAAE;AACvC,EAAE,OAAO,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAChC,CAAC;AACD;AACA,SAAS,WAAW,CAAC,KAAK,EAAE,UAAU,EAAE;AACxC,EAAE,QAAQ,OAAO,CAAC,KAAK,CAAC;AACxB,IAAI,KAAK,QAAQ;AACjB,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACnC;AACA,IAAI,KAAK,UAAU;AACnB,MAAM,OAAO,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,YAAY,CAAC;AAC9E;AACA,IAAI,KAAK,QAAQ;AACjB,MAAM,IAAI,KAAK,KAAK,IAAI,EAAE;AAC1B,QAAQ,OAAO,MAAM,CAAC;AACtB,OAAO;AACP;AACA,MAAM,OAAO,iBAAiB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;AAClD;AACA,IAAI;AACJ,MAAM,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AAC3B,GAAG;AACH,CAAC;AACD;AACA,SAAS,iBAAiB,CAAC,KAAK,EAAE,oBAAoB,EAAE;AACxD,EAAE,IAAI,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;AAClD,IAAI,OAAO,YAAY,CAAC;AACxB,GAAG;AACH;AACA,EAAE,IAAI,UAAU,GAAG,EAAE,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5D,EAAE,IAAI,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;AAC3C;AACA,EAAE,IAAI,eAAe,KAAK,SAAS,EAAE;AACrC,IAAI,IAAI,WAAW,GAAG,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClD;AACA,IAAI,IAAI,WAAW,KAAK,KAAK,EAAE;AAC/B,MAAM,OAAO,OAAO,WAAW,KAAK,QAAQ,GAAG,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;AAClG,KAAK;AACL,GAAG,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACnC,IAAI,OAAO,WAAW,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;AAC1C,GAAG;AACH;AACA,EAAE,OAAO,YAAY,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;AACzC,CAAC;AACD;AACA,SAAS,YAAY,CAAC,MAAM,EAAE,UAAU,EAAE;AAC1C,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC;AACA,EAAE,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACzB,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH;AACA,EAAE,IAAI,UAAU,CAAC,MAAM,GAAG,mBAAmB,EAAE;AAC/C,IAAI,OAAO,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;AAC5C,GAAG;AACH;AACA,EAAE,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE;AAC3C,IAAI,IAAI,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;AACrD,IAAI,OAAO,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC;AAC9B,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AAC7C,CAAC;AACD;AACA,SAAS,WAAW,CAAC,KAAK,EAAE,UAAU,EAAE;AACxC,EAAE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH;AACA,EAAE,IAAI,UAAU,CAAC,MAAM,GAAG,mBAAmB,EAAE;AAC/C,IAAI,OAAO,SAAS,CAAC;AACrB,GAAG;AACH;AACA,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AACrD,EAAE,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;AACrC,EAAE,IAAI,KAAK,GAAG,EAAE,CAAC;AACjB;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;AAChC,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;AAClD,GAAG;AACH;AACA,EAAE,IAAI,SAAS,KAAK,CAAC,EAAE;AACvB,IAAI,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAClC,GAAG,MAAM,IAAI,SAAS,GAAG,CAAC,EAAE;AAC5B,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC;AACxD,GAAG;AACH;AACA,EAAE,OAAO,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;AACtC,CAAC;AACD;AACA,SAAS,WAAW,CAAC,MAAM,EAAE;AAC7B,EAAE,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,CAACC,2BAAyB,CAAC,CAAC,CAAC;AAClE;AACA,EAAE,IAAI,OAAO,eAAe,KAAK,UAAU,EAAE;AAC7C,IAAI,OAAO,eAAe,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,UAAU,EAAE;AAC5C,IAAI,OAAO,MAAM,CAAC,OAAO,CAAC;AAC1B,GAAG;AACH,CAAC;AACD;AACA,SAAS,YAAY,CAAC,MAAM,EAAE;AAC9B,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC/F;AACA,EAAE,IAAI,GAAG,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,UAAU,EAAE;AACpE,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC;AACvC;AACA,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,EAAE,EAAE;AACjD,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,GAAG,CAAC;AACb;;AC3He,SAAS,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE;AACtD,EAAE,IAAI,gBAAgB,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC5C;AACA,EAAE,IAAI,CAAC,gBAAgB,EAAE;AACzB,IAAI,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,IAAI,GAAG,OAAO,GAAG,iCAAiC,CAAC,CAAC;AACnF,GAAG;AACH;;ACJA;AACA;AACA;AACA;AACe,SAAS,aAAa,CAAC,WAAW,EAAE;AACnD,EAAE,IAAI,EAAE,GAAG,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC;AACxC,EAAE,OAAO,EAAE,KAAK,UAAU,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3C,EAAE,WAAW,CAAC,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;AACrC;AACA,EAAE,IAAIA,2BAAyB,EAAE;AACjC,IAAI,WAAW,CAAC,SAAS,CAACA,2BAAyB,CAAC,GAAG,EAAE,CAAC;AAC1D,GAAG;AACH;;ACZA;AACA;AACA;AACA;AACO,IAAI,QAAQ,gBAAgB,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE;AAClD,IAAI,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;AAClC,IAAI,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;AAC5B,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,GAAG;AACH;AACA,EAAE,IAAI,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC;AAClC;AACA,EAAE,MAAM,CAAC,MAAM,GAAG,SAAS,MAAM,GAAG;AACpC,IAAI,OAAO;AACX,MAAM,KAAK,EAAE,IAAI,CAAC,KAAK;AACvB,MAAM,GAAG,EAAE,IAAI,CAAC,GAAG;AACnB,KAAK,CAAC;AACN,GAAG,CAAC;AACJ;AACA,EAAE,OAAO,QAAQ,CAAC;AAClB,CAAC,EAAE,CAAC;AACJ;AACA,aAAa,CAAC,QAAQ,CAAC,CAAC;AACxB;AACA;AACA;AACA;AACA;AACO,IAAI,KAAK,gBAAgB,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;AAC9D,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACnB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrB,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrB,GAAG;AACH;AACA,EAAE,IAAI,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC;AAChC;AACA,EAAE,OAAO,CAAC,MAAM,GAAG,SAAS,MAAM,GAAG;AACrC,IAAI,OAAO;AACX,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI;AACrB,MAAM,KAAK,EAAE,IAAI,CAAC,KAAK;AACvB,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI;AACrB,MAAM,MAAM,EAAE,IAAI,CAAC,MAAM;AACzB,KAAK,CAAC;AACN,GAAG,CAAC;AACJ;AACA,EAAE,OAAO,KAAK,CAAC;AACf,CAAC,EAAE,CAAC;AACJ;AACA,aAAa,CAAC,KAAK,CAAC,CAAC;AACrB;AACA;AACA;AACA;AACO,SAAS,MAAM,CAAC,SAAS,EAAE;AAClC,EAAE,OAAO,SAAS,IAAI,IAAI,IAAI,OAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC;AACjE,CAAC;AACD;AACA;AACA;;ACnHA;AACA;AACA;AACA;AACA;AACO,IAAI,iBAAiB,GAAG;AAC/B,EAAE,IAAI,EAAE,EAAE;AACV,EAAE,QAAQ,EAAE,CAAC,aAAa,CAAC;AAC3B,EAAE,mBAAmB,EAAE,CAAC,MAAM,EAAE,qBAAqB,EAAE,YAAY,EAAE,cAAc,CAAC;AACpF,EAAE,kBAAkB,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,cAAc,EAAE,YAAY,CAAC;AACxE,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC;AACpB,EAAE,YAAY,EAAE,CAAC,YAAY,CAAC;AAC9B,EAAE,KAAK,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,cAAc,CAAC;AACrE,EAAE,QAAQ,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;AAC7B,EAAE,cAAc,EAAE,CAAC,MAAM,EAAE,YAAY,CAAC;AACxC,EAAE,cAAc,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,cAAc,CAAC;AACjE,EAAE,kBAAkB,EAAE,CAAC,MAAM;AAC7B;AACA,EAAE,qBAAqB,EAAE,eAAe,EAAE,YAAY,EAAE,cAAc,CAAC;AACvE,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,WAAW,EAAE,EAAE;AACjB,EAAE,YAAY,EAAE,EAAE;AAClB,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,SAAS,EAAE,CAAC,QAAQ,CAAC;AACvB,EAAE,WAAW,EAAE,CAAC,QAAQ,CAAC;AACzB,EAAE,WAAW,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;AAChC,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,WAAW,CAAC;AAClC,EAAE,SAAS,EAAE,CAAC,MAAM,CAAC;AACrB,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC;AACpB,EAAE,WAAW,EAAE,CAAC,MAAM,CAAC;AACvB,EAAE,gBAAgB,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE,gBAAgB,CAAC;AACnE,EAAE,uBAAuB,EAAE,CAAC,MAAM,CAAC;AACnC,EAAE,oBAAoB,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,YAAY,CAAC;AAC7D,EAAE,oBAAoB,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,QAAQ,CAAC;AACrF,EAAE,eAAe,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,YAAY,CAAC;AAC7E,EAAE,oBAAoB,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,YAAY,CAAC;AACrF,EAAE,uBAAuB,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,QAAQ,CAAC;AACxF,EAAE,mBAAmB,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,CAAC;AACrE,EAAE,kBAAkB,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ,CAAC;AACrE,EAAE,mBAAmB,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,YAAY,CAAC;AAC5D,EAAE,yBAAyB,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ,CAAC;AAC5E,EAAE,mBAAmB,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,WAAW,EAAE,WAAW,CAAC;AACxE,EAAE,eAAe,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC;AACnD,EAAE,mBAAmB,EAAE,CAAC,MAAM,EAAE,YAAY,CAAC;AAC7C,EAAE,mBAAmB,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,QAAQ,CAAC;AACrE,EAAE,sBAAsB,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,QAAQ,CAAC;AACxE,EAAE,kBAAkB,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,OAAO,CAAC;AACrD,EAAE,iBAAiB,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,QAAQ,CAAC;AACrD,EAAE,wBAAwB,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,QAAQ,CAAC;AAC5D,CAAC,CAAC;AACK,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC,EAAE,IAAI,WAAW,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC;AAC1G;AACA;AACA,EAAE,IAAI,KAAK,GAAG,SAAS,CAAC;AACxB,EAAE,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACpC,EAAE,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AACpB,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AACjB,EAAE,IAAI,KAAK,GAAG,EAAE,CAAC;AACjB,EAAE,IAAI,IAAI,GAAG,SAAS,CAAC;AACvB,EAAE,IAAI,GAAG,GAAG,SAAS,CAAC;AACtB,EAAE,IAAI,MAAM,GAAG,SAAS,CAAC;AACzB,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC;AAChB,EAAE,IAAI,SAAS,GAAG,EAAE,CAAC;AACrB,EAAE,IAAI,OAAO,GAAG,IAAI,CAAC;AACrB;AACA;AACA,EAAE,GAAG;AACL,IAAI,KAAK,EAAE,CAAC;AACZ,IAAI,IAAI,SAAS,GAAG,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC;AAC1C,IAAI,IAAI,QAAQ,GAAG,SAAS,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;AACnD;AACA,IAAI,IAAI,SAAS,EAAE;AACnB,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACvE,MAAM,IAAI,GAAG,MAAM,CAAC;AACpB,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;AAC/B;AACA,MAAM,IAAI,QAAQ,EAAE;AACpB,QAAQ,IAAI,OAAO,EAAE;AACrB,UAAU,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AAC9B,SAAS,MAAM;AACf,UAAU,IAAI,KAAK,GAAG,EAAE,CAAC;AACzB;AACA,UAAU,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;AAClG,YAAY,IAAI,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;AACvC,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,WAAW;AACX;AACA,UAAU,IAAI,GAAG,KAAK,CAAC;AACvB,SAAS;AACT;AACA,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC;AAC3B;AACA,QAAQ,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AAClD,UAAU,IAAI,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,UAAU,IAAI,SAAS,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC;AACA,UAAU,IAAI,OAAO,EAAE;AACvB,YAAY,OAAO,IAAI,UAAU,CAAC;AAClC,WAAW;AACX;AACA,UAAU,IAAI,OAAO,IAAI,SAAS,KAAK,IAAI,EAAE;AAC7C,YAAY,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AACpC,YAAY,UAAU,EAAE,CAAC;AACzB,WAAW,MAAM;AACjB,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AACtC,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC1B,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AACxB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC1B,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAC9B,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;AACzB,KAAK,MAAM;AACX,MAAM,GAAG,GAAG,MAAM,GAAG,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;AAC/D,MAAM,IAAI,GAAG,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;AAC5C;AACA,MAAM,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;AAC/C,QAAQ,SAAS;AACjB,OAAO;AACP;AACA,MAAM,IAAI,MAAM,EAAE;AAClB,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC;AACxB;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAC9B,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACzB,QAAQ,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AACzE,OAAO;AACP;AACA,MAAM,IAAI,OAAO,GAAG,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC9D;AACA,MAAM,IAAI,OAAO,EAAE;AACnB,QAAQ,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAC3E;AACA,QAAQ,IAAI,MAAM,KAAK,KAAK,EAAE;AAC9B,UAAU,MAAM;AAChB,SAAS;AACT;AACA,QAAQ,IAAI,MAAM,KAAK,KAAK,EAAE;AAC9B,UAAU,IAAI,CAAC,SAAS,EAAE;AAC1B,YAAY,IAAI,CAAC,GAAG,EAAE,CAAC;AACvB,YAAY,SAAS;AACrB,WAAW;AACX,SAAS,MAAM,IAAI,MAAM,KAAK,SAAS,EAAE;AACzC,UAAU,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;AACpC;AACA,UAAU,IAAI,CAAC,SAAS,EAAE;AAC1B,YAAY,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;AAChC,cAAc,IAAI,GAAG,MAAM,CAAC;AAC5B,aAAa,MAAM;AACnB,cAAc,IAAI,CAAC,GAAG,EAAE,CAAC;AACzB,cAAc,SAAS;AACvB,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,MAAM,KAAK,SAAS,IAAI,QAAQ,EAAE;AAC1C,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,SAAS,EAAE;AACnB,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC;AACjB,KAAK,MAAM;AACX,MAAM,IAAI,qBAAqB,CAAC;AAChC;AACA,MAAM,KAAK,GAAG;AACd,QAAQ,OAAO,EAAE,OAAO;AACxB,QAAQ,KAAK,EAAE,KAAK;AACpB,QAAQ,IAAI,EAAE,IAAI;AAClB,QAAQ,KAAK,EAAE,KAAK;AACpB,QAAQ,IAAI,EAAE,KAAK;AACnB,OAAO,CAAC;AACR,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACpC,MAAM,IAAI,GAAG,OAAO,GAAG,IAAI,GAAG,CAAC,qBAAqB,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,qBAAqB,KAAK,KAAK,CAAC,GAAG,qBAAqB,GAAG,EAAE,CAAC;AACzJ,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;AACjB,MAAM,KAAK,GAAG,EAAE,CAAC;AACjB;AACA,MAAM,IAAI,MAAM,EAAE;AAClB,QAAQ,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC/B,OAAO;AACP;AACA,MAAM,MAAM,GAAG,IAAI,CAAC;AACpB,KAAK;AACL,GAAG,QAAQ,KAAK,KAAK,SAAS,EAAE;AAChC;AACA,EAAE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,GAAG;AACH;AACA,EAAE,OAAO,OAAO,CAAC;AACjB,CAAC;AAuDD;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE;AACrD,EAAE,IAAI,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAClC;AACA,EAAE,IAAI,WAAW,EAAE;AACnB,IAAI,IAAI,CAAC,SAAS,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;AACzD;AACA,MAAM,OAAO,WAAW,CAAC;AACzB,KAAK;AACL;AACA,IAAI,IAAI,mBAAmB,GAAG,SAAS,GAAG,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;AAChF;AACA,IAAI,IAAI,OAAO,mBAAmB,KAAK,UAAU,EAAE;AACnD;AACA,MAAM,OAAO,mBAAmB,CAAC;AACjC,KAAK;AACL,GAAG,MAAM;AACT,IAAI,IAAI,eAAe,GAAG,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AACpE;AACA,IAAI,IAAI,eAAe,EAAE;AACzB,MAAM,IAAI,OAAO,eAAe,KAAK,UAAU,EAAE;AACjD;AACA,QAAQ,OAAO,eAAe,CAAC;AAC/B,OAAO;AACP;AACA,MAAM,IAAI,mBAAmB,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;AACtD;AACA,MAAM,IAAI,OAAO,mBAAmB,KAAK,UAAU,EAAE;AACrD;AACA,QAAQ,OAAO,mBAAmB,CAAC;AACnC,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AC9XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,gBAAgB,CAAC,KAAK,EAAE;AACxC,EAAE,IAAI,WAAW,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAC3F,EAAE,IAAI,mBAAmB,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;AACtG,EAAE,IAAI,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAChD,EAAE,IAAI,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC;AAC9D,EAAE,IAAI,gBAAgB,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC;AACzD,EAAE,IAAI,gBAAgB,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;AAC1D,EAAE,IAAI,oBAAoB,GAAG,CAAC,YAAY,IAAI,gBAAgB,IAAI,gBAAgB,IAAI,mBAAmB,CAAC;AAC1G,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB;AACA,EAAE,IAAI,oBAAoB,IAAI,EAAE,YAAY,IAAI,eAAe,CAAC,EAAE;AAClE,IAAI,MAAM,IAAI,IAAI,GAAG,WAAW,CAAC;AACjC,GAAG;AACH;AACA,EAAE,MAAM,IAAI,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,GAAG,WAAW,CAAC,GAAG,KAAK,CAAC;AAC3E;AACA,EAAE,IAAI,oBAAoB,EAAE;AAC5B,IAAI,MAAM,IAAI,IAAI,CAAC;AACnB,GAAG;AACH;AACA,EAAE,OAAO,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC;AACzD;;ACzHA;AACA;AACA;AACA;AACA;AACO,SAAS,KAAK,CAAC,GAAG,EAAE;AAC3B,EAAE,OAAO,KAAK,CAAC,GAAG,EAAE;AACpB,IAAI,KAAK,EAAE,kBAAkB;AAC7B,GAAG,CAAC,CAAC;AACL,CAAC;AACD,IAAI,eAAe,GAAG,EAAE,CAAC;AACzB;AACA,IAAI,kBAAkB,GAAG;AACzB,EAAE,IAAI,EAAE,SAAS,IAAI,CAAC,IAAI,EAAE;AAC5B,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC;AACtB,GAAG;AACH,EAAE,QAAQ,EAAE,SAAS,QAAQ,CAAC,IAAI,EAAE;AACpC,IAAI,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,QAAQ,EAAE,SAAS,QAAQ,CAAC,IAAI,EAAE;AACpC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AACjD,GAAG;AACH,EAAE,mBAAmB,EAAE,SAAS,mBAAmB,CAAC,IAAI,EAAE;AAC1D,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;AAC5B,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACvE,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;AAChD,IAAI,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;AACzC;AACA;AACA,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,OAAO,IAAI,EAAE,KAAK,OAAO,GAAG,YAAY,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,EAAE,UAAU,EAAE,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC;AAChJ,GAAG;AACH,EAAE,kBAAkB,EAAE,SAAS,kBAAkB,CAAC,IAAI,EAAE;AACxD,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAChC,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI;AACxB,QAAQ,YAAY,GAAG,IAAI,CAAC,YAAY;AACxC,QAAQ,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACrC,IAAI,OAAO,QAAQ,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;AACjG,GAAG;AACH,EAAE,YAAY,EAAE,SAAS,YAAY,CAAC,KAAK,EAAE;AAC7C,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;AACtC,IAAI,OAAO,KAAK,CAAC,UAAU,CAAC,CAAC;AAC7B,GAAG;AACH,EAAE,KAAK,EAAE,SAAS,KAAK,CAAC,KAAK,EAAE;AAC/B,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK;AAC3B,QAAQ,IAAI,GAAG,KAAK,CAAC,IAAI;AACzB,QAAQ,IAAI,GAAG,KAAK,CAAC,SAAS;AAC9B,QAAQ,UAAU,GAAG,KAAK,CAAC,UAAU;AACrC,QAAQ,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;AAC1C,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC;AAC9C,IAAI,IAAI,QAAQ,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AAC7D;AACA,IAAI,IAAI,QAAQ,CAAC,MAAM,GAAG,eAAe,EAAE;AAC3C,MAAM,QAAQ,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACvE,KAAK;AACL;AACA,IAAI,OAAO,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC;AACtE,GAAG;AACH,EAAE,QAAQ,EAAE,SAAS,QAAQ,CAAC,KAAK,EAAE;AACrC,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI;AACzB,QAAQ,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC5B,IAAI,OAAO,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC;AAC/B,GAAG;AACH;AACA,EAAE,cAAc,EAAE,SAAS,cAAc,CAAC,KAAK,EAAE;AACjD,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI;AACzB,QAAQ,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;AACtC,IAAI,OAAO,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;AAC3D,GAAG;AACH,EAAE,cAAc,EAAE,SAAS,cAAc,CAAC,KAAK,EAAE;AACjD,IAAI,IAAI,aAAa,GAAG,KAAK,CAAC,aAAa;AAC3C,QAAQ,UAAU,GAAG,KAAK,CAAC,UAAU;AACrC,QAAQ,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;AAC1C,IAAI,OAAO,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC;AAC/F,GAAG;AACH,EAAE,kBAAkB,EAAE,SAAS,kBAAkB,CAAC,KAAK,EAAE;AACzD,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI;AACzB,QAAQ,aAAa,GAAG,KAAK,CAAC,aAAa;AAC3C,QAAQ,mBAAmB,GAAG,KAAK,CAAC,mBAAmB;AACvD,QAAQ,UAAU,GAAG,KAAK,CAAC,UAAU;AACrC,QAAQ,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;AAC1C,IAAI;AACJ;AACA,MAAM,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,YAAY;AAC1L,MAAM;AACN,GAAG;AACH;AACA,EAAE,QAAQ,EAAE,SAAS,QAAQ,CAAC,KAAK,EAAE;AACrC,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC5B,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,UAAU,EAAE,SAAS,UAAU,CAAC,KAAK,EAAE;AACzC,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC5B,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,WAAW,EAAE,SAAS,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE;AACjD,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK;AAC5B,QAAQ,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC;AACrC,IAAI,OAAO,aAAa,GAAG,gBAAgB,CAAC,KAAK,EAAE,GAAG,KAAK,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC9G,GAAG;AACH,EAAE,YAAY,EAAE,SAAS,YAAY,CAAC,MAAM,EAAE;AAC9C,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC7B,IAAI,OAAO,KAAK,GAAG,MAAM,GAAG,OAAO,CAAC;AACpC,GAAG;AACH,EAAE,SAAS,EAAE,SAAS,SAAS,GAAG;AAClC,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH,EAAE,SAAS,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE;AACxC,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC7B,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,SAAS,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE;AACxC,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC;AAC1C,GAAG;AACH,EAAE,WAAW,EAAE,SAAS,WAAW,CAAC,MAAM,EAAE;AAC5C,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC;AAC1C,GAAG;AACH,EAAE,WAAW,EAAE,SAAS,WAAW,CAAC,MAAM,EAAE;AAC5C,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC7B,IAAI,OAAO,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC;AAC/B,GAAG;AACH;AACA,EAAE,SAAS,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE;AACxC,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;AAChC,IAAI,OAAO,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACzD,GAAG;AACH;AACA,EAAE,SAAS,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE;AACxC,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAC3B,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,QAAQ,EAAE,SAAS,QAAQ,CAAC,MAAM,EAAE;AACtC,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAC3B,IAAI,OAAO,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC;AAC5B,GAAG;AACH,EAAE,WAAW,EAAE,SAAS,WAAW,CAAC,MAAM,EAAE;AAC5C,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAC3B,IAAI,OAAO,IAAI,GAAG,GAAG,CAAC;AACtB,GAAG;AACH;AACA,EAAE,gBAAgB,EAAE,cAAc,CAAC,UAAU,MAAM,EAAE;AACrD,IAAI,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;AAC/C,IAAI,OAAO,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC/E,GAAG,CAAC;AACJ,EAAE,uBAAuB,EAAE,SAAS,uBAAuB,CAAC,MAAM,EAAE;AACpE,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS;AACpC,QAAQ,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAC3B,IAAI,OAAO,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC;AACnC,GAAG;AACH,EAAE,oBAAoB,EAAE,cAAc,CAAC,UAAU,MAAM,EAAE;AACzD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AACvC,IAAI,OAAO,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC9D,GAAG,CAAC;AACJ,EAAE,oBAAoB,EAAE,cAAc,CAAC,UAAU,MAAM,EAAE;AACzD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,OAAO,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACzH,GAAG,CAAC;AACJ,EAAE,eAAe,EAAE,cAAc,CAAC,UAAU,MAAM,EAAE;AACpD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,IAAI,GAAG,MAAM,CAAC,SAAS;AAC/B,QAAQ,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AACvC,IAAI,OAAO,IAAI,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;AAC/K,GAAG,CAAC;AACJ,EAAE,oBAAoB,EAAE,cAAc,CAAC,UAAU,MAAM,EAAE;AACzD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,YAAY,GAAG,MAAM,CAAC,YAAY;AAC1C,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AACvC,IAAI,OAAO,IAAI,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5F,GAAG,CAAC;AACJ,EAAE,uBAAuB,EAAE,cAAc,CAAC,UAAU,MAAM,EAAE;AAC5D,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,OAAO,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC9H,GAAG,CAAC;AACJ,EAAE,mBAAmB,EAAE,cAAc,CAAC,UAAU,MAAM,EAAE;AACxD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC7B,IAAI,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC3H,GAAG,CAAC;AACJ,EAAE,kBAAkB,EAAE,cAAc,CAAC,UAAU,MAAM,EAAE;AACvD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,OAAO,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC3E,GAAG,CAAC;AACJ,EAAE,mBAAmB,EAAE,cAAc,CAAC,UAAU,MAAM,EAAE;AACxD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AACvC,IAAI,OAAO,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACpD,GAAG,CAAC;AACJ,EAAE,yBAAyB,EAAE,cAAc,CAAC,UAAU,MAAM,EAAE;AAC9D,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5E,GAAG,CAAC;AACJ,EAAE,mBAAmB,EAAE,cAAc,CAAC,UAAU,MAAM,EAAE;AACxD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,IAAI,GAAG,MAAM,CAAC,SAAS;AAC/B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;AACrC,IAAI,OAAO,aAAa,GAAG,IAAI,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,UAAU,GAAG,aAAa,GAAG,EAAE,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AACpN,GAAG,CAAC;AACJ,EAAE,eAAe,EAAE,SAAS,eAAe,CAAC,MAAM,EAAE;AACpD,IAAI,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;AAC/C,IAAI,OAAO,IAAI,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACtF,GAAG;AACH,EAAE,mBAAmB,EAAE,SAAS,mBAAmB,CAAC,MAAM,EAAE;AAC5D,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AACvC,IAAI,OAAO,IAAI,CAAC,CAAC,eAAe,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACrE,GAAG;AACH,EAAE,mBAAmB,EAAE,SAAS,mBAAmB,CAAC,MAAM,EAAE;AAC5D,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,OAAO,IAAI,CAAC,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAChI,GAAG;AACH,EAAE,sBAAsB,EAAE,SAAS,sBAAsB,CAAC,MAAM,EAAE;AAClE,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,OAAO,IAAI,CAAC,CAAC,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACrI,GAAG;AACH,EAAE,kBAAkB,EAAE,SAAS,kBAAkB,CAAC,MAAM,EAAE;AAC1D,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC7B,IAAI,OAAO,IAAI,CAAC,CAAC,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAClI,GAAG;AACH,EAAE,iBAAiB,EAAE,SAAS,iBAAiB,CAAC,MAAM,EAAE;AACxD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,OAAO,IAAI,CAAC,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAClF,GAAG;AACH,EAAE,wBAAwB,EAAE,SAAS,wBAAwB,CAAC,MAAM,EAAE;AACtE,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI;AAC1B,QAAQ,UAAU,GAAG,MAAM,CAAC,UAAU;AACtC,QAAQ,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,OAAO,IAAI,CAAC,CAAC,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACnF,GAAG;AACH,CAAC,CAAC;AACF;AACA,SAAS,cAAc,CAAC,EAAE,EAAE;AAC5B,EAAE,OAAO,UAAU,IAAI,EAAE;AACzB,IAAI,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACpD,GAAG,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,UAAU,EAAE;AAC1B,EAAE,IAAI,qBAAqB,CAAC;AAC5B;AACA,EAAE,IAAI,SAAS,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACzF,EAAE,OAAO,CAAC,qBAAqB,GAAG,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;AACzH,IAAI,OAAO,CAAC,CAAC;AACb,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,qBAAqB,KAAK,KAAK,CAAC,GAAG,qBAAqB,GAAG,EAAE,CAAC;AAChG,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,KAAK,EAAE;AACtB,EAAE,OAAO,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACvD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE;AAClC,EAAE,IAAI,GAAG,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACnF,EAAE,OAAO,WAAW,IAAI,IAAI,IAAI,WAAW,KAAK,EAAE,GAAG,KAAK,GAAG,WAAW,GAAG,GAAG,GAAG,EAAE,CAAC;AACpF,CAAC;AACD;AACA,SAAS,MAAM,CAAC,GAAG,EAAE;AACrB,EAAE,OAAO,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AAChD,CAAC;AACD;AACA,SAAS,WAAW,CAAC,GAAG,EAAE;AAC1B,EAAE,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAClC,CAAC;AACD;AACA,SAAS,iBAAiB,CAAC,UAAU,EAAE;AACvC,EAAE,OAAO,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5D;;;;;;;;;;;;;ICtTAC,iBAAc,GAAG,SAAS,eAAe,CAAC,IAAI,EAAE;AAChD,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG;AACpB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;AACpB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACjB,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB,CAAC;;ACPD,IAAI,eAAe,GAAGF,iBAA4B,CAAC;AACnD;IACA,iBAAc,GAAG,SAAS,iBAAiB,CAAC,KAAK,EAAE;AACnD,EAAE;AACF,IAAI,CAAC,OAAO,IAAI,KAAK,WAAW,IAAI,KAAK,YAAY,IAAI;AACzD,KAAK,OAAO,IAAI,KAAK,WAAW,IAAI,KAAK,YAAY,IAAI,CAAC;AAC1D,IAAI,KAAK,YAAY,eAAe;AACpC,IAAI;AACJ,CAAC;;ACRD,IAAI,wBAAwB,GAAGA,iBAA8B,CAAC;AAC9D;IACA,YAAc,GAAG,SAAS,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,iBAAiB,EAAE;AACvE,EAAE,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;AACvB,IAAI,IAAI,GAAG,EAAE,CAAC;AACd,GAAG;AACH;AACA,EAAE,IAAI,iBAAiB,KAAK,KAAK,CAAC,EAAE;AACpC,IAAI,iBAAiB,GAAG,wBAAwB,CAAC;AACjD,GAAG;AACH;AACA,EAAE,IAAI,KAAK,CAAC;AACZ,EAAE,IAAI,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AACxB;AACA,EAAE,SAAS,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE;AAChC,IAAI,IAAI,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACtC,IAAI,IAAI,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAChE,SAAS,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAChC,GAAG;AACH;AACA,EAAE,IAAI,iBAAiB,CAAC,KAAK,CAAC,EAAE;AAChC,IAAI,KAAK,GAAG,IAAI,CAAC;AACjB,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;AAC3B,GAAG,MAAM;AACT,IAAI,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;AACxC,IAAI,IAAI,OAAO,QAAQ,KAAK,WAAW,IAAI,KAAK,YAAY,QAAQ;AACpE,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE;AACjE,QAAQ,OAAO,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACzC,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO,CAAC,CAAC;AACT,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AACjC,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,KAAK,EAAE,CAAC,EAAE;AAC5C,QAAQ,IAAI,MAAM,GAAG,YAAY,CAAC,KAAK,EAAE,EAAE,GAAG,MAAM,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAC;AAC7E,QAAQ,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACtC,QAAQ,OAAO,MAAM,CAAC,KAAK,CAAC;AAC5B,OAAO,CAAC,CAAC;AACT,SAAS,IAAI,KAAK,IAAI,KAAK,CAAC,WAAW,KAAK,MAAM,EAAE;AACpD,MAAM,KAAK,GAAG,EAAE,CAAC;AACjB;AACA,MAAM,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE;AAC3B,QAAQ,IAAI,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,MAAM,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAC;AAChF,QAAQ,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACtC,QAAQ,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;AAChC,OAAO;AACP,KAAK,MAAM,KAAK,GAAG,KAAK,CAAC;AACzB,GAAG;AACH;AACA,EAAE,OAAO;AACT,IAAI,KAAK,EAAE,KAAK;AAChB,IAAI,KAAK,EAAE,KAAK;AAChB,GAAG,CAAC;AACJ,CAAC;;uBCnDsB,GAAGA,kBAA6B;oBACnC,GAAGG,aAA0B;yBACxB,GAAGC;;ACJ5B,IAAIT,QAAM,GAAGK,QAAiB,CAAC,MAAM,CAAC;AACtC,IAAIK,MAAI,GAAGF,YAAe,CAAC;AAC3B;IACA,cAAc,GAAGG,eAAa,CAAC;AAC/B,SAASA,eAAa,GAAG;AACzB,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACrB,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB,EAAE,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,IAAI,CAAC;AACjC,EAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC1B;AACA,EAAE,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;AACpC,EAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACzB,EAAE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAC5B,CAAC;AACDD,MAAI,CAAC,QAAQ,CAACC,eAAa,EAAEX,QAAM,CAAC,CAAC;AACrC;AACAW,eAAa,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,OAAO,EAAE;AACjD,EAAE,IAAI,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;AACjC;AACA,EAAE,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAC1B,EAAE,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;AAC9B,IAAI,aAAa,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC5C,GAAG;AACH;AACA,EAAE,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;AAChC;AACA,EAAE,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;AAC7B,EAAE,MAAM,CAAC,IAAI,GAAG,WAAW;AAC3B,IAAI,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACzC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAC7C,GAAG,CAAC;AACJ;AACA,EAAE,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC;AACpC,EAAE,IAAI,aAAa,CAAC,WAAW,EAAE;AACjC,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;AACnB,GAAG;AACH;AACA,EAAE,OAAO,aAAa,CAAC;AACvB,CAAC,CAAC;AACF;AACA,MAAM,CAAC,cAAc,CAACA,eAAa,CAAC,SAAS,EAAE,UAAU,EAAE;AAC3D,EAAE,YAAY,EAAE,IAAI;AACpB,EAAE,UAAU,EAAE,IAAI;AAClB,EAAE,GAAG,EAAE,WAAW;AAClB,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AAChC,GAAG;AACH,CAAC,CAAC,CAAC;AACH;AACAA,eAAa,CAAC,SAAS,CAAC,WAAW,GAAG,WAAW;AACjD,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAC/D,CAAC,CAAC;AACF;AACAA,eAAa,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW;AAC5C,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACvB,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;AACnB,GAAG;AACH;AACA,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACvB,CAAC,CAAC;AACF;AACAA,eAAa,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW;AAC3C,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AACtB,CAAC,CAAC;AACF;AACAA,eAAa,CAAC,SAAS,CAAC,OAAO,GAAG,WAAW;AAC7C,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACxB;AACA,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE;AAC9C,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAChC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAChB,EAAE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAC5B,CAAC,CAAC;AACF;AACAA,eAAa,CAAC,SAAS,CAAC,IAAI,GAAG,WAAW;AAC1C,EAAE,IAAI,CAAC,GAAGX,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACvD,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AAChB,EAAE,OAAO,CAAC,CAAC;AACX,CAAC,CAAC;AACF;AACAW,eAAa,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,IAAI,EAAE;AACrD,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE;AACtB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAChC,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;AAC1B,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACpC,IAAI,IAAI,CAAC,2BAA2B,EAAE,CAAC;AACvC,GAAG;AACH;AACA,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,CAAC,CAAC;AACF;AACAA,eAAa,CAAC,SAAS,CAAC,2BAA2B,GAAG,WAAW;AACjE,EAAE,IAAI,IAAI,CAAC,oBAAoB,EAAE;AACjC,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;AACzC,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;AACnC,EAAE,IAAI,OAAO;AACb,IAAI,+BAA+B,GAAG,IAAI,CAAC,WAAW,GAAG,mBAAkB;AAC3E,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACzC,CAAC;;AC1GD,IAAID,MAAI,GAAGL,YAAe,CAAC;AAC3B,IAAI,MAAM,GAAGG,QAAiB,CAAC,MAAM,CAAC;AACtC,IAAI,aAAa,GAAGC,cAAyB,CAAC;AAC9C;IACA,eAAc,GAAGG,gBAAc,CAAC;AAChC,SAASA,gBAAc,GAAG;AAC1B,EAAE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACxB,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACvB,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;AACrC,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAC3B;AACA,EAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACzB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB,EAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC7B,EAAE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC3B,EAAE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC5B,CAAC;AACDF,MAAI,CAAC,QAAQ,CAACE,gBAAc,EAAE,MAAM,CAAC,CAAC;AACtC;AACAA,gBAAc,CAAC,MAAM,GAAG,SAAS,OAAO,EAAE;AAC1C,EAAE,IAAI,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC;AAClC;AACA,EAAE,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAC1B,EAAE,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;AAC9B,IAAI,cAAc,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7C,GAAG;AACH;AACA,EAAE,OAAO,cAAc,CAAC;AACxB,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,YAAY,GAAG,SAAS,MAAM,EAAE;AAC/C,EAAE,OAAO,CAAC,OAAO,MAAM,KAAK,UAAU;AACtC,QAAQ,OAAO,MAAM,KAAK,QAAQ,CAAC;AACnC,QAAQ,OAAO,MAAM,KAAK,SAAS,CAAC;AACpC,QAAQ,OAAO,MAAM,KAAK,QAAQ,CAAC;AACnC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE;AACnD,EAAE,IAAI,YAAY,GAAGA,gBAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACzD;AACA,EAAE,IAAI,YAAY,EAAE;AACpB,IAAI,IAAI,EAAE,MAAM,YAAY,aAAa,CAAC,EAAE;AAC5C,MAAM,IAAI,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE;AACnD,QAAQ,WAAW,EAAE,QAAQ;AAC7B,QAAQ,WAAW,EAAE,IAAI,CAAC,YAAY;AACtC,OAAO,CAAC,CAAC;AACT,MAAM,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACxD,MAAM,MAAM,GAAG,SAAS,CAAC;AACzB,KAAK;AACL;AACA,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC/B;AACA,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;AAC3B,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;AACrB,KAAK;AACL,GAAG;AACH;AACA,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7B,EAAE,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,OAAO,EAAE;AACxD,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AAClD,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AAChB,EAAE,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;AAC/C,EAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC7B;AACA,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE;AACxB,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAC7B,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC1B,EAAE,IAAI;AACN,IAAI,GAAG;AACP,MAAM,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAChC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;AAC1B,KAAK,QAAQ,IAAI,CAAC,YAAY,EAAE;AAChC,GAAG,SAAS;AACZ,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC7B,GAAG;AACH,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,YAAY,GAAG,WAAW;AACnD,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AACrC;AACA;AACA,EAAE,IAAI,OAAO,MAAM,IAAI,WAAW,EAAE;AACpC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;AACpC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,IAAI,SAAS,GAAG,MAAM,CAAC;AACzB,EAAE,SAAS,CAAC,SAAS,MAAM,EAAE;AAC7B,IAAI,IAAI,YAAY,GAAGA,gBAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAC3D,IAAI,IAAI,YAAY,EAAE;AACtB,MAAM,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACxD,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACjC,KAAK;AACL;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,MAAM,EAAE;AACtD,EAAE,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;AAC/B;AACA,EAAE,IAAI,YAAY,GAAGA,gBAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACzD,EAAE,IAAI,YAAY,EAAE;AACpB,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/C,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AACpC,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC;AACrB,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpB,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;AAClB,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,MAAM,EAAE;AAC1D,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC;AAClB,EAAE,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,GAAG,EAAE;AACnC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACzB,GAAG,CAAC,CAAC;AACL,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,IAAI,EAAE;AAChD,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC1B,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW;AAC5C,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAC1B,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,IAAI,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;AAC9H,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrB,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW;AAC7C,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACvB,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC1B,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACzB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpB,GAAG;AACH;AACA,EAAE,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,IAAI,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;AAChI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACtB,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;AAC1C,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AAChB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnB,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,OAAO,GAAG,WAAW;AAC9C,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AAChB,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrB,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW;AAC7C,EAAE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACxB,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB,EAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC7B,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,cAAc,GAAG,WAAW;AACrD,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC;AACzB,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;AACzC,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,IAAI,OAAO;AACb,IAAI,+BAA+B,GAAG,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;AAC5E,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,eAAe,GAAG,WAAW;AACtD,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;AACA,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC;AAClB,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,MAAM,EAAE;AACzC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AAC1B,MAAM,OAAO;AACb,KAAK;AACL;AACA,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC;AACrC,GAAG,CAAC,CAAC;AACL;AACA,EAAE,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;AAC3D,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;AAClD,GAAG;AACH,CAAC,CAAC;AACF;AACAA,gBAAc,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,GAAG,EAAE;AACpD,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AAChzMD;AACA;AACA;AACA;IACA,MAAc,GAAG;;;;;;;;;;ACFjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,EAAE,GAAGP,OAAkB;AAC3B,IAAI,OAAO,GAAGG,YAAe,CAAC,QAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB,GAAG,0BAAyB;AACnD,IAAI,gBAAgB,GAAG,WAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAO;AACzB,mBAAmB,EAAE,MAAM,EAAE,OAAO,GAAE;AACtC,sBAAsB,YAAW;AACjC,oBAAoB,UAAS;AAC7B,qBAAqB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAC;AACxC,iBAAiB,OAAM;AACvB,gBAAgB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAC;AACnC;AACA;AACA,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,KAAK,EAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,EAAE,IAAI,EAAE;AACxB,EAAE,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACzC,IAAI,OAAO,KAAK;AAChB,GAAG;AACH;AACA;AACA,EAAE,IAAI,KAAK,GAAG,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAC;AAC5C,EAAE,IAAI,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAC;AAChD;AACA,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;AAC5B,IAAI,OAAO,IAAI,CAAC,OAAO;AACvB,GAAG;AACH;AACA;AACA,EAAE,IAAI,KAAK,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AAChD,IAAI,OAAO,OAAO;AAClB,GAAG;AACH;AACA,EAAE,OAAO,KAAK;AACd,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,EAAE,GAAG,EAAE;AAC3B;AACA,EAAE,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACvC,IAAI,OAAO,KAAK;AAChB,GAAG;AACH;AACA,EAAE,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACpC,MAAM,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;AACzB,MAAM,IAAG;AACT;AACA,EAAE,IAAI,CAAC,IAAI,EAAE;AACb,IAAI,OAAO,KAAK;AAChB,GAAG;AACH;AACA;AACA,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;AACtC,IAAI,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAC;AACvC,IAAI,IAAI,OAAO,EAAE,IAAI,IAAI,YAAY,GAAG,OAAO,CAAC,WAAW,GAAE;AAC7D,GAAG;AACH;AACA,EAAE,OAAO,IAAI;AACb,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,EAAE,IAAI,EAAE;AAC1B,EAAE,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACzC,IAAI,OAAO,KAAK;AAChB,GAAG;AACH;AACA;AACA,EAAE,IAAI,KAAK,GAAG,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAC;AAC5C;AACA;AACA,EAAE,IAAI,IAAI,GAAG,KAAK,IAAI,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAC;AAChE;AACA,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC7B,IAAI,OAAO,KAAK;AAChB,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,EAAE,IAAI,EAAE;AACvB,EAAE,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACzC,IAAI,OAAO,KAAK;AAChB,GAAG;AACH;AACA;AACA,EAAE,IAAI,SAAS,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACtC,KAAK,WAAW,EAAE;AAClB,KAAK,MAAM,CAAC,CAAC,EAAC;AACd;AACA,EAAE,IAAI,CAAC,SAAS,EAAE;AAClB,IAAI,OAAO,KAAK;AAChB,GAAG;AACH;AACA,EAAE,OAAO,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,KAAK;AAC1C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,EAAE,UAAU,EAAE,KAAK,EAAE;AAC1C;AACA,EAAE,IAAI,UAAU,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAC;AACzD;AACA,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,eAAe,EAAE,IAAI,EAAE;AAC1D,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,EAAC;AACvB,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,WAAU;AAC9B;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC/B,MAAM,MAAM;AACZ,KAAK;AACL;AACA;AACA,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,KAAI;AAC3B;AACA;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,MAAM,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC,EAAC;AAC7B;AACA,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE;AAC5B,QAAQ,IAAI,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,EAAC;AAClE,QAAQ,IAAI,EAAE,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAC;AAChD;AACA,QAAQ,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,0BAA0B;AAC3D,WAAW,IAAI,GAAG,EAAE,KAAK,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,cAAc,CAAC,CAAC,EAAE;AAC7F;AACA,UAAU,QAAQ;AAClB,SAAS;AACT,OAAO;AACP;AACA;AACA,MAAM,KAAK,CAAC,SAAS,CAAC,GAAG,KAAI;AAC7B,KAAK;AACL,GAAG,EAAC;AACJ;;;IC3LA,OAAc,GAAGK,OAAK,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAK,CAAC,EAAE;AACjB;AACA,EAAE,IAAI,QAAQ,GAAG,OAAO,YAAY,IAAI,UAAU;AAClD,MAAM,YAAY;AAClB;AACA,MAAM,OAAO,OAAO,IAAI,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,IAAI,UAAU;AACzE,QAAQ,OAAO,CAAC,QAAQ;AACxB,QAAQ,IAAI;AACZ,KAAK,CAAC;AACN;AACA,EAAE,IAAI,QAAQ;AACd,EAAE;AACF,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;AACjB,GAAG;AACH;AACA,EAAE;AACF,IAAI,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACtB,GAAG;AACH;;ACzBA,IAAI,KAAK,GAAGR,OAAqB,CAAC;AAClC;AACA;IACA,OAAc,GAAGS,OAAK,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAK,CAAC,QAAQ;AACvB;AACA,EAAE,IAAI,OAAO,GAAG,KAAK,CAAC;AACtB;AACA;AACA,EAAE,KAAK,CAAC,WAAW,EAAE,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACxC;AACA,EAAE,OAAO,SAAS,cAAc,CAAC,GAAG,EAAE,MAAM;AAC5C,EAAE;AACF,IAAI,IAAI,OAAO;AACf,IAAI;AACJ,MAAM,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC5B,KAAK;AACL;AACA,IAAI;AACJ,MAAM,KAAK,CAAC,SAAS,iBAAiB;AACtC,MAAM;AACN,QAAQ,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC9B,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG,CAAC;AACJ;;ACjCA;IACA,OAAc,GAAGC,OAAK,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAK,CAAC,KAAK;AACpB;AACA,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACrD;AACA;AACA,EAAE,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;AAClB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,GAAG;AAClB;AACA,EAAE,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,UAAU;AACzC,EAAE;AACF,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;AACrB,GAAG;AACH;;AC5BA,IAAID,OAAK,GAAGT,OAAqB;AACjC,IAAIU,OAAK,GAAGP,OAAqB;AACjC,GAAG;AACH;AACA;IACA,SAAc,GAAGQ,SAAO,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ;AAChD;AACA;AACA,EAAE,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;AAC/E;AACA,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,KAAK,EAAE,MAAM;AAC3E,EAAE;AACF;AACA;AACA,IAAI,IAAI,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC;AAC5B,IAAI;AACJ,MAAM,OAAO;AACb,KAAK;AACL;AACA;AACA,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B;AACA,IAAI,IAAI,KAAK;AACb,IAAI;AACJ;AACA;AACA;AACA,MAAMD,OAAK,CAAC,KAAK,CAAC,CAAC;AACnB,KAAK;AACL;AACA,IAAI;AACJ,MAAM,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;AAClC,KAAK;AACL;AACA;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;AACnC,GAAG,CAAC,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ;AAC7C;AACA,EAAE,IAAI,OAAO,CAAC;AACd;AACA;AACA,EAAE,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC;AAC1B,EAAE;AACF,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAED,OAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC9C,GAAG;AACH;AACA;AACA,EAAE;AACF,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAEA,OAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnD,GAAG;AACH;AACA,EAAE,OAAO,OAAO,CAAC;AACjB;;AC1EA;IACA,OAAc,GAAG,KAAK,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,IAAI,EAAE,UAAU;AAC/B;AACA,EAAE,IAAI,WAAW,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;AACxC,MAAM,SAAS;AACf,IAAI;AACJ,MAAM,KAAK,MAAM,CAAC;AAClB,MAAM,SAAS,EAAE,WAAW,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI;AACrE,MAAM,IAAI,OAAO,EAAE;AACnB,MAAM,OAAO,IAAI,WAAW,GAAG,EAAE,GAAG,EAAE;AACtC,MAAM,IAAI,OAAO,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;AACrE,KAAK;AACL,KAAK;AACL;AACA,EAAE,IAAI,UAAU;AAChB,EAAE;AACF;AACA;AACA,IAAI,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,GAAG,UAAU,GAAG,SAAS,CAAC,EAAE,CAAC;AACrE,IAAI;AACJ,MAAM,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,OAAO,SAAS,CAAC;AACnB;;ACpCA,IAAI,KAAK,GAAGT,OAAqB;AACjC,IAAI,KAAK,GAAGG,OAAqB;AACjC,GAAG;AACH;AACA;IACA,YAAc,GAAGS,YAAU,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAU,CAAC,QAAQ;AAC5B;AACA,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;AACpC,EAAE;AACF,IAAI,OAAO;AACX,GAAG;AACH;AACA;AACA,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB;AACA;AACA,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AACd;AACA;AACA,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACtC;;AC5BA,IAAID,SAAO,MAAMX,SAA2B;AAC5C,IAAIa,WAAS,IAAIV,OAAyB;AAC1C,IAAIS,YAAU,GAAGR,YAA8B;AAC/C,GAAG;AACH;AACA;IACA,UAAc,GAAG,QAAQ,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ;AAC1C;AACA,EAAE,IAAI,KAAK,GAAGS,WAAS,CAAC,IAAI,CAAC,CAAC;AAC9B;AACA,EAAE,OAAO,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE,MAAM;AAC1D,EAAE;AACF,IAAIF,SAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,KAAK,EAAE,MAAM;AACzD,IAAI;AACJ,MAAM,IAAI,KAAK;AACf,MAAM;AACN,QAAQ,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAChC,QAAQ,OAAO;AACf,OAAO;AACP;AACA;AACA,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC;AAC9C,MAAM;AACN,QAAQ,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;AACtC,QAAQ,OAAO;AACf,OAAO;AACP,KAAK,CAAC,CAAC;AACP;AACA,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;AAClB,GAAG;AACH;AACA,EAAE,OAAOC,YAAU,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC1C;;;;AC1CA,IAAI,OAAO,MAAMZ,SAA2B;AAC5C,IAAI,SAAS,IAAIG,OAAyB;AAC1C,IAAI,UAAU,GAAGC,YAA8B;AAC/C,GAAG;AACH;AACA;AACAU,uBAAc,GAAGC,eAAa,CAAC;AAC/B;iCACwB,IAAI,UAAU;kCACb,GAAG,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAa,CAAC,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ;AAC3D;AACA,EAAE,IAAI,KAAK,GAAG,SAAS,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AAC1C;AACA,EAAE,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,eAAe,CAAC,KAAK,EAAE,MAAM;AACvE,EAAE;AACF,IAAI,IAAI,KAAK;AACb,IAAI;AACJ,MAAM,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC9B,MAAM,OAAO;AACb,KAAK;AACL;AACA,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;AAClB;AACA;AACA,IAAI,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE,MAAM;AACzD,IAAI;AACJ,MAAM,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,eAAe,CAAC,CAAC;AACtD,MAAM,OAAO;AACb,KAAK;AACL;AACA;AACA,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;AAClC,GAAG,CAAC,CAAC;AACL;AACA,EAAE,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC1C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC;AACvB;AACA,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACpC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC;AACxB;AACA,EAAE,OAAO,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B;;AC1EA,IAAI,aAAa,GAAGf,uBAA6B,CAAC;AAClD;AACA;IACA,QAAc,GAAG,MAAM,CAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ;AACxC;AACA,EAAE,OAAO,aAAa,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACvD;;IChBAgB,UAAc;AACd;AACA,EAAE,QAAQ,QAAQhB,UAAwB;AAC1C,EAAE,MAAM,UAAUG,QAAsB;AACxC,EAAE,aAAa,GAAGC,uBAA6B;AAC/C,CAAC;;ACLD;IACAa,UAAc,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;AACpC;AACA,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI;AACxC,EAAE;AACF,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AACvC,GAAG,CAAC,CAAC;AACL;AACA,EAAE,OAAO,GAAG,CAAC;AACb,CAAC;;ACTD,IAAI,cAAc,GAAGjB,eAA0B,CAAC;AAChD,IAAI,IAAI,GAAGG,YAAe,CAAC;AAC3B,IAAI,IAAI,GAAGC,YAAe,CAAC;AAC3B,IAAI,IAAI,GAAGc,MAAe,CAAC;AAC3B,IAAI,KAAK,GAAGC,OAAgB,CAAC;AAC7B,IAAI,QAAQ,GAAGC,GAAc,CAAC,KAAK,CAAC;AACpC,IAAI,EAAE,GAAG,UAAa,CAAC;AACvB,IAAI,IAAI,GAAGC,SAAqB,CAAC;AACjC,IAAI,QAAQ,GAAGC,UAAmB,CAAC;AACnC,IAAI,QAAQ,GAAGC,UAAwB,CAAC;AACxC;AACA;IACA,SAAc,GAAGC,UAAQ,CAAC;AAC1B;AACA;AACA,IAAI,CAAC,QAAQ,CAACA,UAAQ,EAAE,cAAc,CAAC,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAQ,CAAC,OAAO,EAAE;AAC3B,EAAE,IAAI,EAAE,IAAI,YAAYA,UAAQ,CAAC,EAAE;AACnC,IAAI,OAAO,IAAIA,UAAQ,CAAC,OAAO,CAAC,CAAC;AACjC,GAAG;AACH;AACA,EAAE,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AAC3B,EAAE,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACxB,EAAE,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC7B;AACA,EAAE,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5B;AACA,EAAE,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAC1B,EAAE,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;AAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AACnC,GAAG;AACH,CAAC;AACD;AACAA,UAAQ,CAAC,UAAU,GAAG,MAAM,CAAC;AAC7BA,UAAQ,CAAC,oBAAoB,GAAG,0BAA0B,CAAC;AAC3D;AACAA,UAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE;AAC5D;AACA,EAAE,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAC1B;AACA;AACA,EAAE,IAAI,OAAO,OAAO,IAAI,QAAQ,EAAE;AAClC,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAClC,GAAG;AACH;AACA,EAAE,IAAI,MAAM,GAAG,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1D;AACA;AACA,EAAE,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAChC,IAAI,KAAK,GAAG,EAAE,GAAG,KAAK,CAAC;AACvB,GAAG;AACH;AACA;AACA,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAC3B;AACA;AACA,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;AACxD,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;AAC5D,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACvC;AACA,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AACjB,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;AAChB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AACjB;AACA;AACA,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;AAC5C,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE;AACnE,EAAE,IAAI,WAAW,GAAG,CAAC,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,OAAO,CAAC,WAAW,IAAI,IAAI,EAAE;AACnC,IAAI,WAAW,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;AACxC,GAAG,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AACrC,IAAI,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;AAC/B,GAAG,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACxC,IAAI,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAC3C,GAAG;AACH;AACA,EAAE,IAAI,CAAC,YAAY,IAAI,WAAW,CAAC;AACnC;AACA;AACA,EAAE,IAAI,CAAC,eAAe;AACtB,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;AAC7B,IAAIA,UAAQ,CAAC,UAAU,CAAC,MAAM,CAAC;AAC/B;AACA;AACA,EAAE,IAAI,CAAC,KAAK,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,EAAE,EAAE;AAC7F,IAAI,OAAO;AACX,GAAG;AACH;AACA;AACA,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;AAC5B,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,GAAG;AACH,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAS,KAAK,EAAE,QAAQ,EAAE;AAChE;AACA,EAAE,IAAI,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,KAAK,CAAC,GAAG,IAAI,SAAS,IAAI,KAAK,CAAC,GAAG,IAAI,QAAQ,IAAI,KAAK,CAAC,KAAK,IAAI,SAAS,EAAE;AACrF;AACA;AACA;AACA;AACA,MAAM,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AACtE;AACA;AACA,KAAK,MAAM;AACX;AACA,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,GAAG,EAAE,IAAI,EAAE;AAC9C;AACA,QAAQ,IAAI,QAAQ,CAAC;AACrB;AACA,QAAQ,IAAI,GAAG,EAAE;AACjB,UAAU,QAAQ,CAAC,GAAG,CAAC,CAAC;AACxB,UAAU,OAAO;AACjB,SAAS;AACT;AACA;AACA,QAAQ,QAAQ,GAAG,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAC/D,QAAQ,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACjC,OAAO,CAAC,CAAC;AACT,KAAK;AACL;AACA;AACA,GAAG,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;AAClD,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACrD;AACA;AACA,GAAG,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;AACjD;AACA,IAAI,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,SAAS,QAAQ,EAAE;AAC5C,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;AACpB,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC1D,KAAK,CAAC,CAAC;AACP,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC;AACnB;AACA;AACA,GAAG,MAAM;AACT,IAAI,QAAQ,CAAC,gBAAgB,CAAC,CAAC;AAC/B,GAAG;AACH,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAS,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE;AACtE;AACA;AACA;AACA,EAAE,IAAI,OAAO,OAAO,CAAC,MAAM,IAAI,QAAQ,EAAE;AACzC,IAAI,OAAO,OAAO,CAAC,MAAM,CAAC;AAC1B,GAAG;AACH;AACA,EAAE,IAAI,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACvE,EAAE,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACzD;AACA,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC;AACpB,EAAE,IAAI,OAAO,IAAI;AACjB;AACA,IAAI,qBAAqB,EAAE,CAAC,WAAW,EAAE,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,IAAI,EAAE,CAAC;AACjG;AACA,IAAI,cAAc,EAAE,EAAE,CAAC,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC;AAChD,GAAG,CAAC;AACJ;AACA;AACA,EAAE,IAAI,OAAO,OAAO,CAAC,MAAM,IAAI,QAAQ,EAAE;AACzC,IAAI,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AACtC,GAAG;AACH;AACA,EAAE,IAAI,MAAM,CAAC;AACb,EAAE,KAAK,IAAI,IAAI,IAAI,OAAO,EAAE;AAC5B,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,SAAS;AAChD,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3B;AACA;AACA,IAAI,IAAI,MAAM,IAAI,IAAI,EAAE;AACxB,MAAM,SAAS;AACf,KAAK;AACL;AACA;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAChC,MAAM,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AACxB,KAAK;AACL;AACA;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE;AACvB,MAAM,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAGA,UAAQ,CAAC,UAAU,CAAC;AACxE,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,GAAGA,UAAQ,CAAC,UAAU,GAAG,QAAQ,GAAGA,UAAQ,CAAC,UAAU,CAAC;AAC1F,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,sBAAsB,GAAG,SAAS,KAAK,EAAE,OAAO,EAAE;AACrE;AACA,EAAE,IAAI,QAAQ;AACd,MAAM,kBAAkB;AACxB,KAAK;AACL;AACA,EAAE,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;AAC5C;AACA,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACpE,GAAG,MAAM,IAAI,OAAO,CAAC,QAAQ,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE;AAC3D;AACA;AACA;AACA,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3E,GAAG,MAAM,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;AACpE;AACA,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;AACnE,GAAG;AACH;AACA,EAAE,IAAI,QAAQ,EAAE;AAChB,IAAI,kBAAkB,GAAG,YAAY,GAAG,QAAQ,GAAG,GAAG,CAAC;AACvD,GAAG;AACH;AACA,EAAE,OAAO,kBAAkB,CAAC;AAC5B,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,KAAK,EAAE,OAAO,EAAE;AAC9D;AACA;AACA,EAAE,IAAI,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AACxC;AACA;AACA,EAAE,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,IAAI,EAAE;AAClC,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1C,GAAG;AACH;AACA;AACA,EAAE,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,IAAI,EAAE;AAClC,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1C,GAAG;AACH;AACA;AACA,EAAE,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;AAC7E,IAAI,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAChD,GAAG;AACH;AACA;AACA,EAAE,IAAI,CAAC,WAAW,KAAK,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC9D,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC;AACpE,GAAG;AACH;AACA;AACA,EAAE,IAAI,CAAC,WAAW,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAChD,IAAI,WAAW,GAAGA,UAAQ,CAAC,oBAAoB,CAAC;AAChD,GAAG;AACH;AACA,EAAE,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,gBAAgB,GAAG,WAAW;AACjD,EAAE,OAAO,SAAS,IAAI,EAAE;AACxB,IAAI,IAAI,MAAM,GAAGA,UAAQ,CAAC,UAAU,CAAC;AACrC;AACA,IAAI,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;AAChD,IAAI,IAAI,QAAQ,EAAE;AAClB,MAAM,MAAM,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACrC,KAAK;AACL;AACA,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;AACjB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACf,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,aAAa,GAAG,WAAW;AAC9C,EAAE,OAAO,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,GAAGA,UAAQ,CAAC,UAAU,CAAC;AAChE,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,WAAW,EAAE;AACtD,EAAE,IAAI,MAAM,CAAC;AACb,EAAE,IAAI,WAAW,GAAG;AACpB,IAAI,cAAc,EAAE,gCAAgC,GAAG,IAAI,CAAC,WAAW,EAAE;AACzE,GAAG,CAAC;AACJ;AACA,EAAE,KAAK,MAAM,IAAI,WAAW,EAAE;AAC9B,IAAI,IAAI,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;AAC5C,MAAM,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;AAC9D,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,QAAQ,EAAE;AACpD,EAAE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC5B,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,WAAW,GAAG,WAAW;AAC5C,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACvB,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC7B,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC;AACxB,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,SAAS,GAAG,WAAW;AAC1C,EAAE,IAAI,UAAU,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC;AACzC,EAAE,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AACpC;AACA;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC5D,IAAI,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;AAChD;AACA;AACA,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AAC5C,QAAQ,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,OAAO,KAAK;AACZ,QAAQ,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,OAAO;AACP;AACA;AACA,MAAM,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,QAAQ,EAAE;AACrH,QAAQ,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAACA,UAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC;AACrF,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,OAAO,MAAM,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC;AAC1E,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,iBAAiB,GAAG,WAAW;AAClD;AACA;AACA,EAAE,IAAI,QAAQ,GAAG,4BAA4B,CAAC;AAC9C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC/B,IAAI,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC5D,GAAG;AACH;AACA,EAAE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC5B,CAAC,CAAC;AACF;AACA;AACA;AACA;AACAA,UAAQ,CAAC,SAAS,CAAC,aAAa,GAAG,WAAW;AAC9C,EAAE,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC;AAC7D;AACA;AACA;AACA,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;AAC5B,IAAI,WAAW,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC;AAC/C,GAAG;AACH;AACA;AACA,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;AAC9B;AACA;AACA;AACA,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC,CAAC;AACjF,GAAG;AACH;AACA,EAAE,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AACF;AACA;AACA;AACA;AACAA,UAAQ,CAAC,SAAS,CAAC,cAAc,GAAG,WAAW;AAC/C,EAAE,IAAI,cAAc,GAAG,IAAI,CAAC;AAC5B;AACA,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;AACpC,IAAI,cAAc,GAAG,KAAK,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,OAAO,cAAc,CAAC;AACxB,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,EAAE,EAAE;AAC5C,EAAE,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC;AAC7D;AACA,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;AAC5B,IAAI,WAAW,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC;AAC/C,GAAG;AACH;AACA,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;AACrC,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;AACvD,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,SAAS,GAAG,EAAE,MAAM,EAAE;AACxF,IAAI,IAAI,GAAG,EAAE;AACb,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;AACd,MAAM,OAAO;AACb,KAAK;AACL;AACA,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,MAAM,EAAE;AACpC,MAAM,WAAW,IAAI,MAAM,CAAC;AAC5B,KAAK,CAAC,CAAC;AACP;AACA,IAAI,EAAE,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AAC1B,GAAG,CAAC,CAAC;AACL,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,EAAE,EAAE;AACjD,EAAE,IAAI,OAAO;AACb,MAAM,OAAO;AACb,MAAM,QAAQ,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;AACjC,KAAK;AACL;AACA;AACA;AACA,EAAE,IAAI,OAAO,MAAM,IAAI,QAAQ,EAAE;AACjC;AACA,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC9B,IAAI,OAAO,GAAG,QAAQ,CAAC;AACvB,MAAM,IAAI,EAAE,MAAM,CAAC,IAAI;AACvB,MAAM,IAAI,EAAE,MAAM,CAAC,QAAQ;AAC3B,MAAM,IAAI,EAAE,MAAM,CAAC,QAAQ;AAC3B,MAAM,QAAQ,EAAE,MAAM,CAAC,QAAQ;AAC/B,KAAK,EAAE,QAAQ,CAAC,CAAC;AACjB;AACA;AACA,GAAG,MAAM;AACT;AACA,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AACzC;AACA,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACvB,MAAM,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ,IAAI,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAC;AAC7D,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACpD;AACA;AACA,EAAE,IAAI,OAAO,CAAC,QAAQ,IAAI,QAAQ,EAAE;AACpC,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACrC,GAAG,MAAM;AACT,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACpC,GAAG;AACH;AACA;AACA,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,EAAE,MAAM,EAAE;AACvC,IAAI,IAAI,GAAG,EAAE;AACb,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACvB,MAAM,OAAO;AACb,KAAK;AACL;AACA;AACA,IAAI,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;AAChD;AACA,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACvB,IAAI,IAAI,EAAE,EAAE;AACZ,MAAM,IAAI,UAAU,CAAC;AACrB;AACA,MAAM,IAAI,QAAQ,GAAG,UAAU,KAAK,EAAE,QAAQ,EAAE;AAChD,QAAQ,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAClD,QAAQ,OAAO,CAAC,cAAc,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;AACvD;AACA,QAAQ,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC9C,OAAO,CAAC;AACR;AACA,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC7C;AACA,MAAM,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACpC,MAAM,OAAO,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;AACzC,KAAK;AACL,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAChB;AACA,EAAE,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,GAAG,EAAE;AAC1C,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACnB,IAAI,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AACrB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;AACjB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AAC5B,GAAG;AACH,CAAC,CAAC;AACF;AACAA,UAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;AAC1C,EAAE,OAAO,mBAAmB,CAAC;AAC7B,CAAC;;AChfD,IAAI,eAAe,GAAG,CAACC,cAAI,IAAIA,cAAI,CAAC,eAAe,KAAK,UAAU,GAAG,EAAE;AACvE,IAAI,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;AAC9D,CAAC,CAAC;AACF,MAAM,CAAC,cAAc,CAACC,mBAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,IAAI,eAAe,GAAG1B,OAAwB,CAAC;AAC/C,IAAI,WAAW,GAAG,eAAe,CAACG,SAAoB,CAAC,CAAC;AACxD;AACA;AACA;AACA;AACA,IAAI,yBAAyB,GAAG,UAAU,KAAK,EAAE;AACjD,IAAI,OAAO,eAAe,CAAC,iBAAiB,CAAC,KAAK,CAAC;AACnD,SAAS,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;AAC1F,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,KAAK,EAAE,SAAS,EAAE;AAC7C,IAAI,IAAI,EAAE,GAAG,eAAe,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,yBAAyB,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;AACrJ,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE;AAC1B,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACrC,KAAK;AACL,IAAI,IAAI,IAAI,GAAG,OAAO,QAAQ,KAAK,WAAW,GAAG,WAAW,CAAC,OAAO,GAAG,QAAQ,CAAC;AAChF,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;AACrD,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC;AACjB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE;AACnC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;AACzB,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5C,IAAI,CAAC,GAAG,CAAC,CAAC;AACV,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE,IAAI,EAAE;AACzC,QAAQ,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACpC,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC;2BACc,GAAG;;;;ACvClB,IAAI,SAAS,GAAG,CAACsB,cAAI,IAAIA,cAAI,CAAC,SAAS,KAAK,CAAC,YAAY;AACzD,IAAI,IAAI,aAAa,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;AACxC,QAAQ,aAAa,GAAG,MAAM,CAAC,cAAc;AAC7C,aAAa,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;AACxF,YAAY,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAC9G,QAAQ,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC,KAAK,CAAC;AACN,IAAI,OAAO,UAAU,CAAC,EAAE,CAAC,EAAE;AAC3B,QAAQ,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B,QAAQ,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;AAC/C,QAAQ,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;AAC7F,KAAK,CAAC;AACN,CAAC,GAAG,CAAC;AACL,MAAM,CAAC,cAAc,CAAC,KAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC3C,GAAG,KAAK,EAAE;AAC7B,IAAI,WAAW,kBAAkB,UAAU,MAAM,EAAE;AACnD,IAAI,SAAS,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AACnC,IAAI,SAAS,WAAW,CAAC,QAAQ,EAAE,OAAO,EAAE;AAC5C,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,OAAO,GAAG,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;AACnF,YAAY,QAAQ,EAAE,QAAQ;AAC9B,YAAY,OAAO,EAAE,OAAO;AAC5B,SAAS,CAAC,CAAC;AACX,QAAQ,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC;AACnD,QAAQ,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC;AAC5D,QAAQ,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAClC,QAAQ,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;AAChC;AACA,QAAQ,IAAI,OAAO,KAAK,CAAC,iBAAiB,KAAK,UAAU,EAAE;AAC3D,YAAY,KAAK,CAAC,iBAAiB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AACxD,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,WAAW,CAAC,cAAc,GAAG,UAAU,QAAQ,EAAE;AACrD,QAAQ,IAAI;AACZ,YAAY,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;AAC9C,SAAS;AACT,QAAQ,OAAO,CAAC,EAAE;AAClB,YAAY,OAAO,uBAAuB,GAAG,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC;AACnE,SAAS;AACT,KAAK,CAAC;AACN,IAAI,OAAO,WAAW,CAAC;AACvB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;iBACS,GAAG,WAAW;;;AC3CjC,IAAI,QAAQ,GAAG,CAACA,cAAI,IAAIA,cAAI,CAAC,QAAQ,KAAK,YAAY;AACtD,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,EAAE;AAC5C,QAAQ,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7D,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC7B,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3E,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,SAAS;AACT,QAAQ,OAAO,CAAC,CAAC;AACjB,KAAK,CAAC;AACN,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC3C,CAAC,CAAC;AACF,IAAI,eAAe,GAAG,CAACA,cAAI,IAAIA,cAAI,CAAC,eAAe,MAAM,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;AAChG,IAAI,IAAI,EAAE,KAAK,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC;AACjC,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACzF,CAAC,KAAK,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;AAC5B,IAAI,IAAI,EAAE,KAAK,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC;AACjC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,IAAI,kBAAkB,GAAG,CAACA,cAAI,IAAIA,cAAI,CAAC,kBAAkB,MAAM,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,EAAE,CAAC,EAAE;AAC/F,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AACxE,CAAC,IAAI,SAAS,CAAC,EAAE,CAAC,EAAE;AACpB,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC;AACH,IAAI,YAAY,GAAG,CAACA,cAAI,IAAIA,cAAI,CAAC,YAAY,KAAK,UAAU,GAAG,EAAE;AACjE,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE,OAAO,GAAG,CAAC;AAC1C,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;AACpB,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC7I,IAAI,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACpC,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC,CAAC;AACF,IAAI,SAAS,GAAG,CAACA,cAAI,IAAIA,cAAI,CAAC,SAAS,KAAK,UAAU,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE;AACzF,IAAI,SAAS,KAAK,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AAChH,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE;AAC/D,QAAQ,SAAS,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;AACnG,QAAQ,SAAS,QAAQ,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;AACtG,QAAQ,SAAS,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;AACtH,QAAQ,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9E,KAAK,CAAC,CAAC;AACP,CAAC,CAAC;AACF,IAAI,WAAW,GAAG,CAACA,cAAI,IAAIA,cAAI,CAAC,WAAW,KAAK,UAAU,OAAO,EAAE,IAAI,EAAE;AACzE,IAAI,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACrH,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,WAAW,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7J,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AACtE,IAAI,SAAS,IAAI,CAAC,EAAE,EAAE;AACtB,QAAQ,IAAI,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;AACtE,QAAQ,OAAO,CAAC,EAAE,IAAI;AACtB,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACzK,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;AACpD,YAAY,QAAQ,EAAE,CAAC,CAAC,CAAC;AACzB,gBAAgB,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM;AAC9C,gBAAgB,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AACxE,gBAAgB,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;AACjE,gBAAgB,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS;AACjE,gBAAgB;AAChB,oBAAoB,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE;AAChI,oBAAoB,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AAC1G,oBAAoB,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE;AACzF,oBAAoB,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE;AACvF,oBAAoB,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AAC1C,oBAAoB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS;AAC3C,aAAa;AACb,YAAY,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AACvC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AAClE,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AACzF,KAAK;AACL,CAAC,CAAC;AACF,IAAI,MAAM,GAAG,CAACA,cAAI,IAAIA,cAAI,CAAC,MAAM,KAAK,UAAU,CAAC,EAAE,CAAC,EAAE;AACtD,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;AACvF,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;AACvE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChF,YAAY,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1F,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,SAAS;AACT,IAAI,OAAO,CAAC,CAAC;AACb,CAAC,CAAC;AACF,IAAI,eAAe,GAAG,CAACA,cAAI,IAAIA,cAAI,CAAC,eAAe,KAAK,UAAU,GAAG,EAAE;AACvE,IAAI,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;AAC9D,CAAC,CAAC;AACF,MAAM,CAAC,cAAc,UAAU,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,cAAc,kBAAkB,qBAAqB,wBAAwB,sBAAsB,KAAK,CAAC,CAAC;AAC1G,IAAI,aAAa,GAAG,YAAY,CAACzB,oBAAsB,CAAC,EAAE,UAAU,GAAG,aAAa,CAAC;AACrF,IAAI,SAAS,GAAG,UAAmC,CAAC;AACpD,IAAI,mBAAmB,GAAG,eAAe,CAACI,mBAA8B,CAAC,CAAC;AAC1E,IAAI,OAAO,GAAGc,KAAkB,CAAC;AACjC,IAAI,OAAO,GAAGA,KAAkB,CAAC;AACjC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,aAAa,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,OAAO,OAAO,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;AACtH;AACA;AACA;AACA,IAAI,cAAc,GAAG,UAAU,OAAO,EAAE;AACxC,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC;AACtB,IAAI,IAAI,OAAO,EAAE;AACjB,QAAQ,IAAI,CAAC,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,YAAY,OAAO;AACzE,YAAY,OAAO,YAAY,UAAU,CAAC,OAAO,EAAE;AACnD,YAAY,QAAQ,GAAG,4BAA4B,CAAC,OAAO,CAAC,CAAC;AAC7D,SAAS;AACT,aAAa,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACzC,YAAY,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;AAC1C,gBAAgB,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAChD,gBAAgB,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AACvC,aAAa,CAAC,CAAC;AACf,SAAS;AACT,aAAa;AACb,YAAY,QAAQ,GAAG,OAAO,CAAC;AAC/B,SAAS;AACT,KAAK;AACL,IAAI,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;AACF;AACA;AACA;AACA,IAAI,aAAa,kBAAkB,YAAY;AAC/C,IAAI,SAAS,aAAa,CAAC,GAAG,EAAE,OAAO,EAAE;AACzC,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACrC,KAAK;AACL,IAAI,aAAa,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,KAAK,EAAE,SAAS,EAAE,cAAc,EAAE;AACrF,QAAQ,OAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;AAC3D,YAAY,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC;AAC9G,YAAY,OAAO,WAAW,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE;AACnD,gBAAgB,QAAQ,EAAE,CAAC,KAAK;AAChC,oBAAoB,KAAK,CAAC;AAC1B,wBAAwB,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,UAAU,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,aAAa,CAAC,OAAO,GAAG,EAAE,EAAE,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;AACnL,wBAAwB,IAAI,GAAG,mBAAmB,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAC7E,wBAAwB,OAAO,CAAC,CAAC,YAAY,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,EAAE,cAAc,EAAE,kBAAkB,EAAE,GAAG,EAAE,EAAE,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,cAAc,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AACnS,oBAAoB,KAAK,CAAC;AAC1B,wBAAwB,QAAQ,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;AAC7C,wBAAwB,OAAO,CAAC,CAAC,YAAY,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAClE,oBAAoB,KAAK,CAAC;AAC1B,wBAAwB,MAAM,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;AAC3C,wBAAwB,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;AAC1E,4BAA4B,SAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;AACrF,4BAA4B,OAAO,CAAC,CAAC,aAAa,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;AAC5H,yBAAyB;AACzB,6BAA6B;AAC7B,4BAA4B,WAAW,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AAClG,4BAA4B,MAAM,IAAI,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;AAC/L,yBAAyB;AAEzB,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS,CAAC,CAAC;AACX,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,aAAa,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,QAAQ,EAAE,SAAS,EAAE,cAAc,EAAE;AACrF,QAAQ,OAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;AAC3D,YAAY,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC;AACtG,YAAY,OAAO,WAAW,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE;AACnD,gBAAgB,QAAQ,EAAE,CAAC,KAAK;AAChC,oBAAoB,KAAK,CAAC;AAC1B,wBAAwB,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,UAAU,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,aAAa,CAAC,OAAO,GAAG,EAAE,EAAE,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;AACnL,wBAAwB,WAAW,GAAG,sBAAsB,CAAC,QAAQ,CAAC,CAAC;AACvE,wBAAwB,IAAI,GAAG,mBAAmB,CAAC,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACnF,wBAAwB,OAAO,CAAC,CAAC,YAAY,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,EAAE,cAAc,EAAE,kBAAkB,EAAE,GAAG,EAAE,EAAE,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,cAAc,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AACnS,oBAAoB,KAAK,CAAC;AAC1B,wBAAwB,QAAQ,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;AAC7C,wBAAwB,OAAO,CAAC,CAAC,YAAY,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAClE,oBAAoB,KAAK,CAAC;AAC1B,wBAAwB,MAAM,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;AAC3C,wBAAwB,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;AAC1E,4BAA4B,OAAO,CAAC,CAAC,aAAa,MAAM,CAAC,IAAI,CAAC,CAAC;AAC/D,yBAAyB;AACzB,6BAA6B;AAC7B,4BAA4B,WAAW,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AAClG,4BAA4B,MAAM,IAAI,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;AAC1K,yBAAyB;AAEzB,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS,CAAC,CAAC;AACX,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,OAAO,EAAE;AAC5D,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;AACvC,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,aAAa,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,GAAG,EAAE,KAAK,EAAE;AAC9D,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;AAC3C,QAAQ,IAAI,OAAO,EAAE;AACrB;AACA;AACA,YAAY,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACjC,SAAS;AACT,aAAa;AACb,YAAY,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,CAAC;AAClE,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK,CAAC;AACN,IAAI,OAAO,aAAa,CAAC;AACzB,CAAC,EAAE,CAAC,CAAC;AACL,wBAAwB,aAAa,CAAC;AACtC;AACA;AACA;AACA,SAAS,UAAU,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE;AAC3C,IAAI,OAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;AACvD,QAAQ,IAAI,MAAM,CAAC;AACnB,QAAQ,OAAO,WAAW,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE;AAC/C,YAAY,MAAM,GAAG,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC;AAC5C,YAAY,OAAO,CAAC,CAAC,aAAa,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;AACvE,SAAS,CAAC,CAAC;AACX,KAAK,CAAC,CAAC;AACP,CAAC;AACD,qBAAqB,UAAU,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE;AAC3C,IAAI,OAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;AACvD,QAAQ,IAAI,MAAM,CAAC;AACnB,QAAQ,OAAO,WAAW,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE;AAC/C,YAAY,MAAM,GAAG,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC;AAC5C,YAAY,OAAO,CAAC,CAAC,aAAa,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;AACvE,SAAS,CAAC,CAAC;AACX,KAAK,CAAC,CAAC;AACP,CAAC;AACD,kBAAkB,OAAO,CAAC;AAC1B,kBAAkB,OAAO,CAAC;AAC1B;AACA;AACA;AACA,SAAS,SAAS,CAAC,QAAQ,EAAE;AAC7B,IAAI,IAAI,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAC3D,IAAI,IAAI,WAAW,IAAI,WAAW,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE;AACnE,QAAQ,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;AAC/B,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;AAC/B,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,SAAS,sBAAsB,CAAC,QAAQ,EAAE;AAC1C,IAAI,IAAI,OAAO,QAAQ,KAAK,QAAQ;AACpC,QAAQ,OAAO,QAAQ,CAAC;AACxB,IAAI,OAAO,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACrC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,CAAC,MAAM,EAAE;AACrB,IAAI,IAAI,SAAS,GAAG,EAAE,CAAC;AACvB,IAAI,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AAClD,QAAQ,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AAC1C,KAAK;AACL,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,UAAU,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,GAAG,WAAW,GAAG,KAAK,IAAI,KAAK,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACvJ,CAAC;AACD,cAAc,GAAG,CAAC;AAClB;AACA;AACA;AACA,SAAS,4BAA4B,CAAC,OAAO,EAAE;AAC/C,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,IAAI,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AACpC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,CAAC,CAAC;AACb,CAAC;;;;AClTD,MAAM,CAAC,cAAc,CAAC,QAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC/C,GAAG,KAAK,EAAE;AACzB,MAAM,iBAAiB,GAAGlB,IAA0B,CAAC;AACrD,MAAM,OAAO,GAAG,OAAO,MAAM,EAAE,WAAW,EAAE,OAAO,KAAK;AACxD,IAAI,MAAM,IAAI,GAAG,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC;AACJ,IAAI,IAAI,KAAK,CAAC;AACd,IAAI,IAAI,WAAW,EAAE;AACrB,QAAQ,KAAK,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;AACvC;AACA;AACA,UAAU,EAAE,IAAI,CAAC;AACjB;AACA;AACA,IAAI,CAAC,CAAC;AACN,KAAK;AACL,SAAS;AACT,QAAQ,KAAK,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;AACvC;AACA;AACA,UAAU,EAAE,IAAI,CAAC;AACjB;AACA;AACA,IAAI,CAAC,CAAC;AACN,KAAK;AACL,IAAI,MAAM,MAAM,GAAG,MAAM,iBAAiB,CAAC,OAAO,CAAC,OAAO;AAC1D,UAAU,yEAAyE;AACnF,UAAU,mEAAmE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;AAC/G,IAAI,IAAI,MAAM,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE;AACvD,QAAQ,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;gBACa,GAAG,OAAO;;;;;AC/CzB,MAAM,CAAC,cAAc,UAAU,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,mBAAmB,gBAAgB,aAAa,KAAK,CAAC,CAAC;AACvD,MAAM,cAAc,GAAGA,YAAuB,CAAC;AAC/C,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC;AAChC,IAAI,cAAc,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AAC/B,IAAI,aAAa,EAAE,CAAC;AACpB,IAAI,cAAc,EAAE,EAAE;AACtB,CAAC,CAAC,CAAC;AACH,kBAAkB,cAAc,CAAC,SAAS,CAAC;AAC3C,MAAM,EAAE,GAAG,CAAC,KAAK,KAAK,IAAI,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC1D,aAAa,EAAE,CAAC;AAChB,MAAM,KAAK,GAAG,CAAC,KAAK,EAAE,aAAa,KAAK,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;AACnG,gBAAgB,KAAK,CAAC;AACtB,MAAM,QAAQ,GAAG,CAAC,MAAM,EAAE,aAAa,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC;AAC/F,mBAAmB,QAAQ;;;;;;ACd3B,MAAM,CAAC,cAAc,UAAU,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,yBAAyB,sBAAsB,KAAK,CAAC,CAAC;AACtD,MAAM,WAAW,GAAG,CAAC,GAAG,KAAK;AAC7B,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;AAClC,CAAC,CAAC;AACF,sBAAsB,WAAW,CAAC;AAClC,MAAM,cAAc,GAAG,CAAC,IAAI,KAAK;AACjC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AACzC,CAAC,CAAC;AACF,yBAAyB,cAAc;;;;;;;;ACTvC;AACA;AACA,MAAM,CAAC,cAAc,UAAU,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,gBAAgB,kBAAkB,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,eAAe,KAAK,CAAC,CAAC;AACxK,MAAM,YAAY,GAAGA,SAAwB,CAAC;AAC9C,eAAe,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClC,cAAc,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjC,cAAc,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjC,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACtB,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC;AACF,cAAc,GAAG,CAAC;AAClB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACtB,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AACjB,QAAQ,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;AACxC,KAAK;AACL,IAAI,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC;AACF,cAAc,GAAG,CAAC;AAClB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACtB,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5B,CAAC,CAAC;AACF,cAAc,GAAG,CAAC;AAClB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACtB,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3B,CAAC,CAAC;AACF,cAAc,GAAG,CAAC;AAClB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACtB,IAAI,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC;AACF,cAAc,GAAG,CAAC;AAClB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,KAAK;AAC/B,IAAI,OAAO,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC;AACF,cAAc,GAAG,CAAC;AAClB,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC1B,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AACpB,QAAQ,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACzC,KAAK;AACL,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC;AACF,kBAAkB,OAAO,CAAC;AAC1B,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACxB,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AACpB,QAAQ,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACzC,KAAK;AACL,IAAI,OAAO,CAAC,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACtF,CAAC,CAAC;AACF,gBAAgB,KAAK;;;AChDrB,MAAM,CAAC,cAAc,CAAC,IAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,MAAM2B,cAAY,GAAG3B,SAAiC,CAAC;AACvD,MAAM4B,MAAI,GAAGzB,MAAgC,CAAC;AAC9C,MAAM,QAAQ,CAAC;AACf;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,IAAI,CAAC,uBAAuB,GAAGwB,cAAY,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;AACnE,QAAQ,IAAI,CAAC,uBAAuB,GAAGA,cAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AAC9D,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5B,QAAQ,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC;AAC7B,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC;AACvC,QAAQ,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,cAAc,CAAC;AACrD,QAAQ,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAC5D,QAAQ,IAAI,MAAM,CAAC,KAAK,EAAE;AAC1B,YAAY,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;AACvC,SAAS;AACT,KAAK;AACL;AACA,IAAI,IAAI,EAAE,GAAG;AACb,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC;AACxB,KAAK;AACL,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC;AAC7B,KAAK;AACL,IAAI,IAAI,cAAc,GAAG;AACzB,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC;AACpC,KAAK;AACL,IAAI,IAAI,iBAAiB,GAAG;AAC5B,QAAQ,OAAO,IAAI,CAAC,kBAAkB,CAAC;AACvC,KAAK;AACL,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,KAAK;AACL;AACA,IAAI,oBAAoB,CAAC,iBAAiB,EAAE;AAC5C,QAAQ,IAAIA,cAAY,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE;AACjF,YAAY,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;AACvD,SAAS;AACT,QAAQ,IAAIA,cAAY,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE;AACjF,YAAY,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;AACvD,SAAS;AACT,QAAQ,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;AACpD,KAAK;AACL,IAAI,QAAQ,CAAC,KAAK,EAAE;AACpB,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5B,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC/B,QAAQ,OAAOC,MAAI,CAAC,GAAG,CAACD,cAAY,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAEA,cAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;AACtG,KAAK;AACL,IAAI,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE;AACrC,QAAQ,OAAOA,cAAY,CAAC,KAAK,CAACC,MAAI,CAAC,OAAO,CAACD,cAAY,CAAC,EAAE,CAAC,MAAM,CAAC,EAAEA,cAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;AAC5H,KAAK;AACL,IAAI,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAE;AACnC,QAAQ,OAAOA,cAAY,CAAC,KAAK,CAACC,MAAI,CAAC,KAAK,CAACD,cAAY,CAAC,EAAE,CAAC,MAAM,CAAC,EAAEA,cAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;AAC1H,KAAK;AACL,CAAC;YACc,GAAG;;;;;;;;;ACzDlB;AACA;AACA,MAAM,CAAC,cAAc,UAAU,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,aAAa,cAAc,cAAc,cAAc,KAAK,CAAC,CAAC;AAC9D,MAAM,YAAY,GAAG3B,SAAwB,CAAC;AAC9C;AACA;AACA;AACA,MAAM,MAAM,GAAG,YAAY,CAAC,EAAE,CAAC,qBAAqB,CAAC,CAAC;AACtD;AACA,MAAM,MAAM,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACxD,MAAM,MAAM,GAAG,YAAY,CAAC,EAAE,CAAC,uCAAuC,CAAC,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACtE,MAAM,oBAAoB,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACtE;AACA;AACA,MAAM,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC;AAC9E,MAAM,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC;AAC7E,MAAM,mBAAmB,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrE;AACA,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACpD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,0DAA0D,CAAC,CAAC;AACvF,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,sBAAsB,CAAC,CAAC;AACnD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,8BAA8B,CAAC,CAAC;AAC3D;AACA,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,wBAAwB,CAAC,CAAC;AACrD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,oCAAoC,CAAC,CAAC;AACjE,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,wBAAwB,CAAC,CAAC;AACrD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,6BAA6B,CAAC,CAAC;AAC1D,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACpD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,0BAA0B,CAAC,CAAC;AACvD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACpD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,wBAAwB,CAAC,CAAC;AACrD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACpD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACpD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACpD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACpD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,sBAAsB,CAAC,CAAC;AACnD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACpD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,sBAAsB,CAAC,CAAC;AACnD,MAAM,EAAE,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACpD,MAAM,GAAG,GAAG,YAAY,CAAC,EAAE,CAAC,sBAAsB,CAAC,CAAC;AACpD,MAAM,GAAG,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACrD,MAAM,GAAG,GAAG,YAAY,CAAC,EAAE,CAAC,qBAAqB,CAAC,CAAC;AACnD,MAAM,GAAG,GAAG,YAAY,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC;AACrD,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACtB,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AACpB;AACA,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AACpB,QAAQ,OAAO,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClC,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AAC5C,QAAQ,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;AAC3C,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,EAAE;AACpC,QAAQ,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;AAC3C,KAAK;AACL,IAAI,IAAI,YAAY,CAAC;AACrB,IAAI,IAAI,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE;AAC5D,QAAQ,IAAI,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAChC;AACA;AACA;AACA;AACA,QAAQ,YAAY,GAAG,OAAO;AAC9B,aAAa,IAAI,CAAC,MAAM,CAAC;AACzB,aAAa,KAAK,CAAC,CAAC,CAAC;AACrB,aAAa,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7D,KAAK;AACL,SAAS;AACT,QAAQ,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACvC,KAAK;AACL,IAAI,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7C;AACA,IAAI,IAAI,YAAY,CAAC,EAAE,CAAC,oBAAoB,CAAC;AAC7C,QAAQ,YAAY,CAAC,EAAE,CAAC,oBAAoB,CAAC,EAAE;AAC/C,QAAQ,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AACrC,CAAC,CAAC;AACF,cAAc,GAAG,CAAC;AAClB,MAAM,GAAG,GAAG,CAAC,CAAC,KAAK;AACnB,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,oBAAoB,CAAC,EAAE;AAClE,QAAQ,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;AAC5C,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AACjB;AACA;AACA;AACA,QAAQ,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AACnE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,OAAO,CAAC;AAChB,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,QAAQ,OAAO,GAAG,EAAE,CAAC;AACrB,KAAK;AACL,SAAS,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACxB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,QAAQ,OAAO,GAAG,EAAE,CAAC;AACrB,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrC,KAAK;AACL;AACA;AACA,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACrB;AACA;AACA,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC;AACzB,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,QAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,QAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,QAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,QAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,QAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,QAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,QAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,QAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC;AAC3B,IAAI,IAAI,IAAI,CAAC;AACb;AACA,IAAI,IAAI,GAAG,CAAC,CAAC;AACb,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC;AACA;AACA,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC/C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC/C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC/C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1E,CAAC,CAAC;AACF,cAAc,GAAG,CAAC;AAClB,MAAM,GAAG,GAAG,CAAC,GAAG,EAAE,IAAI,KAAK;AAC3B;AACA;AACA;AACA,IAAI,IAAI,OAAO,CAAC;AAChB,IAAI,IAAI,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE;AAClE,QAAQ,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AAC/B,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC1C,KAAK;AACL,IAAI,IAAI,MAAM,CAAC;AACf,IAAI,IAAI,iBAAiB,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE;AAChE,QAAQ,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC7B,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACxC,KAAK;AACL;AACA,IAAI,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC9C,CAAC,CAAC;AACF,cAAc,GAAG,CAAC;AAClB,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK;AAClB;AACA,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AAClB,QAAQ,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACzC,KAAK;AACL,IAAI,IAAI,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE;AAC5D,QAAQ,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtC,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;AACtB,KAAK;AACL,CAAC,CAAC;AACF,aAAa,EAAE,CAAC;AAChB,MAAM,GAAG,GAAG,CAAC,CAAC,KAAK;AACnB,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE;AACtB;AACA;AACA;AACA,QAAQ,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;AAC3D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;AACjC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACvB,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;AACjC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACvB,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,KAAK;AACL;AACA,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACrB;AACA,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACnB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACpB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtC,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5B,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACpB,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtC,QAAQ,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACjE,IAAI,MAAM,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9C;AACA,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC;AAChB;AACA,IAAI,IAAI,SAAS,GAAG,GAAG,CAAC;AACxB;AACA,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7C;AACA;AACA,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACnC;AACA;AACA;AACA,IAAI,OAAO,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzC,CAAC,CAAC;AACF,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK;AACtB;AACA;AACA,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACxB;AACA;AACA;AACA,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACjE,IAAI,MAAM,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9C;AACA,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC;AAChB;AACA,IAAI,IAAI,SAAS,GAAG,GAAG,CAAC;AACxB;AACA,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7C,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7C,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7C;AACA;AACA,IAAI,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC;;;;AC5XD;AACA;AACA,MAAM,CAAC,cAAc,UAAU,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,qBAAqB,gBAAgB,kBAAkB,gBAAgB,kBAAkB,gBAAgB,kBAAkB,cAAc,cAAc,qCAAqC,iCAAiC,cAAc,eAAe,KAAK,CAAC,CAAC;AACjQ,MAAM,YAAY,GAAGA,SAAwB,CAAC;AAC9C,MAAM6B,QAAM,GAAG1B,MAAoB,CAAC;AACpC,eAAe,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClC,cAAc,YAAY,CAAC,EAAE,CAAC,qBAAqB,CAAC,CAAC;AACrD,iCAAiC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AACxD;AACA,qCAAqC,YAAY,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC;AAC3E,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACtB;AACA,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC;AACF,cAAc,GAAG,CAAC;AAClB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACtB;AACA,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AACjB,QAAQ,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;AACxC,KAAK;AACL,IAAI,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC;AACF,cAAc,GAAG,CAAC;AAClB,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC1B,IAAI,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACxC,CAAC,CAAC;AACF,kBAAkB,OAAO,CAAC;AAC1B,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACxB,IAAI,MAAM,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,IAAI,IAAI,OAAO,CAAC,MAAM,EAAE,EAAE;AAC1B,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK;AACL,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5F,KAAK;AACL,CAAC,CAAC;AACF,gBAAgB,KAAK,CAAC;AACtB,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC1B,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AACpB,QAAQ,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACzC,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AACpB,QAAQ,OAAO,CAAC,CAAC;AACjB,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,KAAK;AACL,CAAC,CAAC;AACF,kBAAkB,OAAO,CAAC;AAC1B,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACxB,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AACpB,QAAQ,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACzC,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AACpB,QAAQ,OAAO,CAAC,CAAC;AACjB,KAAK;AACL,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/F,KAAK;AACL,CAAC,CAAC;AACF,gBAAgB,KAAK,CAAC;AACtB,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC1B,IAAI,MAAM,GAAG,GAAG0B,QAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,sBAAsB,CAAC,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACzG,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE;AAC1B,QAAQ,OAAO,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClC,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AAC1C,KAAK;AACL,CAAC,CAAC;AACF,kBAAkB,OAAO,CAAC;AAC1B,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACxB,IAAI,MAAM,GAAG,GAAGA,QAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,sBAAsB,CAAC,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACzG,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AACtC,CAAC,CAAC;AACF,gBAAgB,KAAK,CAAC;AACtB,MAAM,UAAU,GAAG,CAAC,CAAC,KAAK;AAC1B,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC;AACF,qBAAqB,UAAU;;;;AC5F/B;AACA;AACA,MAAM,CAAC,cAAc,UAAU,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,6CAA6C,wCAAwC,uCAAuC,wCAAwC,uCAAuC,wCAAwC,0BAA0B,0BAA0B,8BAA8B,4BAA4B,wBAAwB,kBAAkB,kBAAkB,KAAK,CAAC,CAAC;AACpa,MAAM,YAAY,GAAG7B,SAAiC,CAAC;AACvD,MAAM,EAAE,GAAGG,UAAuC,CAAC;AACnD,MAAM,IAAI,GAAGC,MAAgC,CAAC;AAC9C,kBAAkB,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrC,kBAAkB,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACxC,wBAAwB,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC9C,4BAA4B,CAAC,CAAC;AAC9B;AACA;AACA,MAAM,mBAAmB,GAAG,CAAC,sBAAsB,EAAE,QAAQ,EAAE,OAAO,KAAK;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;AACxB,IAAI,IAAI,SAAS,GAAG,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACrD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,KAAK;AACL,IAAI,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE;AACtB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;AACzB,KAAK;AACL,IAAI,IAAI,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;AAClC,IAAI,IAAI,SAAS,GAAG,GAAG,CAAC;AACxB,IAAI,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,sBAAsB,EAAE,SAAS,CAAC,CAAC;AACpE,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClC,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClD,YAAY,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AAChG,SAAS;AACT,QAAQ,aAAa,GAAG,SAAS,CAAC;AAClC,QAAQ,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,aAAa,CAAC,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AAC5V,QAAQ,IAAI,SAAS,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE;AACzC,YAAY,IAAI,EAAE,CAAC,GAAG,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAChE,gBAAgB,OAAO,SAAS,CAAC;AACjC,aAAa;AACb,SAAS;AACT,aAAa,IAAI,EAAE,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACjE,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS;AACT,KAAK;AACL,IAAI,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;AACzD,CAAC,CAAC;AACF,8BAA8B,mBAAmB,CAAC;AAClD;AACA;AACA,MAAM,eAAe,GAAG,CAAC,sBAAsB,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,iBAAiB,KAAK;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,iBAAiB,EAAE;AAC3B,QAAQ,aAAa,GAAG,EAAE,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,CAAC,KAAK,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAC1F,KAAK;AACL;AACA;AACA,IAAI,MAAM,SAAS,GAAG,OAAO,CAAC,mBAAmB,CAAC,sBAAsB,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC1F,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,aAAa,CAAC,CAAC;AAC3E,IAAI,MAAM,eAAe,GAAG,iDAAiD,CAAC,sBAAsB,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC;AAC1I,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,aAAa,CAAC,CAAC;AAC3E,IAAI,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,eAAe,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9E,CAAC,CAAC;AACF,0BAA0B,eAAe,CAAC;AAC1C;AACA;AACA;AACA,MAAM,eAAe,GAAG,CAAC,sBAAsB,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,iBAAiB,KAAK;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,SAAS,GAAG,OAAO,CAAC,mBAAmB,CAAC,sBAAsB,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC1F,IAAI,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,cAAc,CAAC,CAAC;AAC9E,IAAI,MAAM,cAAc,GAAG,iDAAiD,CAAC,sBAAsB,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;AACxI,IAAI,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,cAAc,CAAC,CAAC;AAC9E,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACpF;AACA,IAAI,IAAI,iBAAiB,EAAE;AAC3B,QAAQ,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACxE,KAAK;AACL,IAAI,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;AACF,0BAA0B,eAAe,CAAC;AAC1C,MAAM,6BAA6B,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,cAAc,EAAE,iBAAiB,KAAK;AACvG;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;AAChC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,KAAK;AACL;AACA,IAAI,MAAM,oBAAoB,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC7D;AACA,IAAI,IAAI,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC;AAC3C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,MAAM,aAAa,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;AACnE,QAAQ,oBAAoB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7F,QAAQ,sBAAsB,GAAG,EAAE,CAAC,GAAG,CAAC,sBAAsB,EAAE,EAAE,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC;AACpH,KAAK;AACL;AACA,IAAI,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,IAAI,kBAAkB,CAAC;AAC/B;AACA,QAAQ,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,sBAAsB,CAAC,EAAE;AAChE,YAAY,MAAM,gBAAgB,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,sBAAsB,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACrG,YAAY,MAAM,aAAa,GAAG,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;AACzE,YAAY,kBAAkB,GAAG,EAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC;AACxH,SAAS;AACT,aAAa;AACb,YAAY,kBAAkB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC9C,SAAS;AACT,QAAQ,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC;AACjE,KAAK;AACL;AACA,IAAI,MAAM,gBAAgB,GAAG,OAAO,CAAC,mBAAmB,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC9E,IAAI,MAAM,YAAY,GAAG,OAAO,CAAC,mBAAmB,CAAC,GAAG,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC9E,IAAI,MAAM,cAAc,GAAG,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;AACtE;AACA,IAAI,IAAI,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;AACnC,QAAQ,OAAO,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1E,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;AACzB,KAAK;AACL,CAAC,CAAC;AACF,wCAAwC,6BAA6B,CAAC;AACtE,MAAM,4BAA4B,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,cAAc,EAAE,iBAAiB,KAAK;AACrH;AACA;AACA,IAAI,MAAM,gBAAgB,GAAG,OAAO,CAAC,mBAAmB,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC9E;AACA,IAAI,MAAM,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,EAAE,cAAc,CAAC,EAAE,gBAAgB,CAAC,CAAC;AACpH;AACA,IAAI,MAAM,oBAAoB,GAAG,iDAAiD,CAAC,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;AAC5H,IAAI,MAAM,kBAAkB,GAAG,EAAE,CAAC,GAAG,CAAC,oBAAoB,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;AAClF;AACA;AACA,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;AAChC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,KAAK;AACL;AACA;AACA,IAAI,MAAM,aAAa,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,WAAW,CAAC,CAAC;AACxE,IAAI,MAAM,iBAAiB,GAAG,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAC3D,IAAI,MAAM,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;AAC1E,IAAI,MAAM,gBAAgB,GAAG,EAAE,CAAC,GAAG,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;AACvE,IAAI,OAAO,EAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC;AAChG,CAAC,CAAC;AACF,uCAAuC,4BAA4B,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA,MAAM,6BAA6B,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAE,iBAAiB,KAAK;AACxG;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;AAChC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,KAAK;AACL;AACA,IAAI,MAAM,uBAAuB,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACjE,IAAI,IAAI,yBAAyB,GAAG,IAAI,CAAC,IAAI,CAAC;AAC9C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,MAAM,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;AACjE,QAAQ,uBAAuB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/F,QAAQ,yBAAyB,GAAG,EAAE,CAAC,GAAG,CAAC,yBAAyB,EAAE,EAAE,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC;AAC3H,KAAK;AACL;AACA,IAAI,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C;AACA;AACA,QAAQ,IAAI,gBAAgB,CAAC;AAC7B,QAAQ,IAAI,yBAAyB,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,EAAE;AACtE,YAAY,MAAM,gBAAgB,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,yBAAyB,CAAC,CAAC,CAAC;AACvG,YAAY,MAAM,aAAa,GAAG,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;AAC1E,YAAY,gBAAgB,GAAG,EAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC;AACpH,SAAS;AACT,aAAa;AACb,YAAY,gBAAgB,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;AAC/D,KAAK;AACL;AACA,IAAI,MAAM,gBAAgB,GAAG,OAAO,CAAC,mBAAmB,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC9E,IAAI,MAAM,YAAY,GAAG,OAAO,CAAC,mBAAmB,CAAC,GAAG,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC9E,IAAI,MAAM,cAAc,GAAG,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;AACtE;AACA,IAAI,OAAO,EAAE,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC;AACF,wCAAwC,6BAA6B,CAAC;AACtE,MAAM,4BAA4B,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,cAAc,EAAE,iBAAiB,KAAK;AACpH;AACA;AACA,IAAI,MAAM,gBAAgB,GAAG,OAAO,CAAC,mBAAmB,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC9E,IAAI,MAAM,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,EAAE,cAAc,CAAC,EAAE,gBAAgB,CAAC,CAAC;AACnH;AACA,IAAI,MAAM,oBAAoB,GAAG,iDAAiD,CAAC,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;AAC5H,IAAI,MAAM,mBAAmB,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,oBAAoB,CAAC,CAAC;AACnF;AACA;AACA,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;AAChC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,KAAK;AACL;AACA;AACA,IAAI,MAAM,aAAa,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,WAAW,CAAC,CAAC;AACxE,IAAI,MAAM,iBAAiB,GAAG,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAC3D;AACA;AACA,IAAI,MAAM,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AAC3E,IAAI,MAAM,gBAAgB,GAAG,EAAE,CAAC,GAAG,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC;AACxE,IAAI,OAAO,EAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC;AAClG,CAAC,CAAC;AACF,uCAAuC,4BAA4B,CAAC;AACpE,MAAM,6BAA6B,GAAG,CAAC,QAAQ,EAAE,WAAW,EAAE,cAAc,KAAK;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AAC7D,IAAI,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAClD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC1D,KAAK;AACL,IAAI,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC;AACF,wCAAwC,6BAA6B,CAAC;AACtE;AACA,MAAM,kCAAkC,GAAG,CAAC,sBAAsB,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,EAAE,yBAAyB,KAAK;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,oBAAoB,GAAG,iDAAiD,CAAC,sBAAsB,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;AAChJ,IAAI,IAAI,QAAQ,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAE;AACxD;AACA;AACA,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;AACzB,KAAK;AACL;AACA,IAAI,MAAM,wBAAwB,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,oBAAoB,CAAC,CAAC;AACxF,IAAI,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,wBAAwB,EAAE,yBAAyB,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;AAC/F,CAAC,CAAC;AACF,6CAA6C,kCAAkC,CAAC;AAChF;AACA;AACA,MAAM,iDAAiD,GAAG,CAAC,sBAAsB,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,KAAK;AACvH;AACA,IAAI,MAAM,SAAS,GAAG,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACvD,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,sBAAsB,EAAE,SAAS,CAAC,CAAC;AACtE,IAAI,IAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC;AACvF,QAAQ,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,KAAK;AACL,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;AAC5C,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AAChD;AACA,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;AAC9H,IAAI,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;AACnG;AACA,IAAI,IAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC;AACrC;AACA;AACA,IAAI,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;AACzE,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClC,QAAQ,gBAAgB,GAAG,YAAY,CAAC;AACxC,QAAQ,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;AACnJ,QAAQ,IAAI,YAAY,CAAC,EAAE,CAAC,gBAAgB,CAAC,EAAE;AAC/C,YAAY,IAAI,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACtE,gBAAgB,OAAO,YAAY,CAAC;AACpC,aAAa;AACb,SAAS;AACT,aAAa,IAAI,EAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACvE,YAAY,OAAO,YAAY,CAAC;AAChC,SAAS;AACT,KAAK;AACL,IAAI,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;AACzD,CAAC;;;ACvUD,MAAM,CAAC,cAAc,CAAC,MAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,MAAM0B,SAAO,GAAG9B,QAA+B,CAAC;AAChD,MAAM2B,cAAY,GAAGxB,SAAiC,CAAC;AACvD,MAAM4B,UAAQ,GAAG3B,MAA6B,CAAC;AAC/C,MAAM4B,QAAM,GAAGd,IAAkB,CAAC;AAClC,MAAMU,MAAI,GAAGT,MAAiB,CAAC;AAC/B,MAAMc,YAAU,SAASD,QAAM,CAAC,OAAO,CAAC;AACxC;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC,CAAC;AACtB,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAGJ,MAAI,CAAC,iBAAiB,EAAE;AAC3D,YAAY,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;AACjD,SAAS;AACT,QAAQ,IAAI,CAAC,OAAO,GAAGG,UAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9D,QAAQ,IAAIJ,cAAY,CAAC,EAAE,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAACC,MAAI,CAAC,OAAO,CAAC,EAAE;AAC7E,YAAY,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;AACvC,SAAS;AACT,QAAQ,IAAID,cAAY,CAAC,EAAE,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAACC,MAAI,CAAC,OAAO,CAAC,EAAE;AAC7E,YAAY,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;AACvC,SAAS;AACT,QAAQ,IAAI,CAAC,uBAAuB,GAAGD,cAAY,CAAC,EAAE,CAAC,MAAM,CAAC,sBAAsB,CAAC;AACrF,aAAa,KAAK,CAACC,MAAI,CAAC,aAAa,CAAC;AACtC,aAAa,QAAQ,EAAE,CAAC;AACxB,KAAK;AACL;AACA,IAAI,IAAI,MAAM,GAAG;AACjB;AACA,QAAQ,OAAOG,UAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrD,KAAK;AACL,IAAI,IAAI,sBAAsB,GAAG;AACjC,QAAQ,OAAOJ,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAACC,MAAI,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjG,KAAK;AACL;AACA,IAAI,aAAa,gBAAgB,CAAC,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE;AAC/E,QAAQ,MAAM,IAAI,GAAG,MAAME,SAAO,CAAC,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;AACzE,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;AACzD,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;AACxC,YAAY,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AACnD,SAAS;AACT,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AAC3B,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACrC,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC;AAChD,QAAQ,MAAM,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC;AAC/C,QAAQ,MAAM,sBAAsB,GAAG,IAAI,CAAC,GAAG,CAAC;AAChD,QAAQ,MAAM,MAAM,GAAG,EAAE,CAAC;AAC1B,QAAQ,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;AACzC,YAAY,MAAM,CAAC,IAAI,CAAC;AACxB,gBAAgB,OAAO,EAAE,KAAK,CAAC,OAAO;AACtC,gBAAgB,MAAM,EAAE,KAAK,CAAC,MAAM;AACpC,gBAAgB,OAAO,EAAE,KAAK,CAAC,OAAO;AACtC,gBAAgB,QAAQ,EAAE,KAAK,CAAC,QAAQ;AACxC,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,OAAO,IAAIG,YAAU,CAAC;AAC9B,YAAY,EAAE;AACd,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB,YAAY,cAAc;AAC1B,YAAY,iBAAiB;AAC7B,YAAY,sBAAsB;AAClC,YAAY,KAAK;AACjB,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA,IAAI,WAAW,CAAC,aAAa,EAAE,cAAc,EAAE,QAAQ,EAAE;AACzD,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,aAAa,CAAC,CAAC;AACvF,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,cAAc,CAAC,CAAC;AACzF,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACnD,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AACrD,QAAQ,MAAM,eAAe,GAAGL,MAAI,CAAC,eAAe,CAACD,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,YAAY,EAAE,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AACvR,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAClF;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,OAAO,CAAC,OAAO,GAAGA,cAAY,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;AACzF,YAAY,QAAQ,CAAC,OAAO,GAAGA,cAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC7F,SAAS;AACT,QAAQ,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;AACpC,KAAK;AACL,IAAI,YAAY,CAAC,aAAa,EAAE,cAAc,EAAE,SAAS,EAAE;AAC3D,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,aAAa,CAAC,CAAC;AACvF,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,cAAc,CAAC,CAAC;AACzF,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACnD,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AACrD,QAAQ,MAAM,cAAc,GAAGC,MAAI,CAAC,eAAe,CAACD,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,YAAY,EAAE,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AACxR,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7E;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,OAAO,CAAC,OAAO,GAAGA,cAAY,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;AACzF,YAAY,QAAQ,CAAC,OAAO,GAAGA,cAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC7F,SAAS;AACT,QAAQ,OAAO,QAAQ,CAAC,QAAQ,EAAE,CAAC;AACnC,KAAK;AACL;AACA,IAAI,0BAA0B,CAAC,SAAS,EAAE;AAC1C,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACnE,YAAY,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,MAAM,YAAY,GAAGC,MAAI,CAAC,6BAA6B,CAACD,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AAC5U,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AAC7D;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1D,gBAAgB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9C,gBAAgB,KAAK,CAAC,OAAO,GAAGA,cAAY,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;AAC9D,qBAAqB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAClD,qBAAqB,QAAQ,EAAE,CAAC;AAChC,aAAa;AACb,YAAY,IAAI,CAAC,eAAe,GAAGA,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjG,SAAS;AACT,QAAQ,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;AACjC,KAAK;AACL,IAAI,yBAAyB,CAAC,aAAa,EAAE,MAAM,EAAE;AACrD,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,aAAa,CAAC,CAAC;AACrF,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACjD,QAAQ,IAAI,CAAC,OAAO,EAAE;AACtB,YAAY,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,MAAM,cAAc,GAAGC,MAAI,CAAC,4BAA4B,CAACD,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3S,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7E;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,OAAO,CAAC,OAAO,GAAGA,cAAY,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;AACzF,YAAY,IAAI,CAAC,eAAe,GAAGA,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjG,SAAS;AACT,QAAQ,OAAO,QAAQ,CAAC,QAAQ,EAAE,CAAC;AACnC,KAAK;AACL,IAAI,yBAAyB,CAAC,cAAc,EAAE,KAAK,EAAE;AACrD,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,cAAc,CAAC,CAAC;AACtF,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAClD,QAAQ,IAAI,CAAC,QAAQ,EAAE;AACvB,YAAY,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,MAAM,eAAe,GAAGC,MAAI,CAAC,4BAA4B,CAACD,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3S,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAClF;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,QAAQ,CAAC,OAAO,GAAGA,cAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC7F,YAAY,IAAI,CAAC,eAAe,GAAGA,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjG,SAAS;AACT,QAAQ,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;AACpC,KAAK;AACL,IAAI,0BAA0B,CAAC,KAAK,EAAE;AACtC;AACA,QAAQ,IAAIA,cAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;AAC7D,YAAY,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;AAC3D,SAAS;AACT,QAAQ,MAAM,gBAAgB,GAAGC,MAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,CAAC;AACtM,QAAQ,MAAM,UAAU,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtH;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1D,gBAAgB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9C,gBAAgB,KAAK,CAAC,OAAO,GAAGD,cAAY,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC/F,aAAa;AACb,YAAY,IAAI,CAAC,eAAe,GAAGA,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjG,SAAS;AACT,QAAQ,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AACnD,KAAK;AACL,IAAI,0BAA0B,CAAC,UAAU,EAAE;AAC3C,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACpE,YAAY,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,MAAM,WAAW,GAAGC,MAAI,CAAC,6BAA6B,CAACD,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AAC5U,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAC3D;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1D,gBAAgB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9C,gBAAgB,KAAK,CAAC,OAAO,GAAGA,cAAY,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;AAC9D,qBAAqB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACpD,qBAAqB,QAAQ,EAAE,CAAC;AAChC,aAAa;AACb,YAAY,IAAI,CAAC,eAAe,GAAGA,cAAY,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjG,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;AAChC,KAAK;AACL,CAAC;cACc,GAAGM;;;;;;ACnLlB;AACA;AACA,MAAM,CAAC,cAAc,CAACL,MAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;mCAC1B,sCAAuC,4CAA6C,uCAAwC,sCAAuC,uCAAwC,sCAAuC,uCAAwC,yBAA0B,yBAA0B,6BAA8B,GAAG,KAAK,EAAE;AAC1Z,MAAMD,cAAY,GAAG3B,SAAiC,CAAC;AACvD,MAAM,EAAE,GAAGG,UAAuC,CAAC;AACnD;AACA,MAAM,YAAY,GAAGwB,cAAY,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC;AAC3D,MAAM,aAAa,GAAGA,cAAY,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC;AAC5D;AACA,MAAM,mBAAmB,GAAGA,cAAY,CAAC,EAAE,CAAC,qBAAqB,CAAC,CAAC;AACnE;AACA,MAAM,mBAAmB,GAAGA,cAAY,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC;AAClE,MAAM,mBAAmB,GAAG,CAAC,iBAAiB,EAAE,QAAQ,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG,EAAE,CAAC,GAAG,CAAC;AAC3B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvD,QAAQ,SAAS,GAAG,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,KAAK;AACL,IAAI,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AAChC,QAAQ,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC1C,KAAK;AACL,IAAI,OAAO,SAAS,CAAC;AACrB,CAAC,CAAC;0BACyB,GAAG,oBAAoB;AAClD;AACA;AACA,MAAM,eAAe,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,iBAAiB,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,iBAAiB,EAAE;AAC3B,QAAQ,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAC3E,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,EAAE;AAC1D,QAAQ,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;AACxC,KAAK;AACL,IAAI,MAAM,WAAW,GAAG,EAAE,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACpD,IAAI,MAAM,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AAClD,IAAI,MAAM,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AACrD,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC3C,IAAI,OAAO,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC;sBACqB,GAAG,gBAAgB;AAC1C;AACA;AACA,MAAM,eAAe,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,iBAAiB,KAAK;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC,EAAE;AAC7D,QAAQ,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACzC,KAAK;AACL,IAAI,MAAM,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;AACrE,IAAI,MAAM,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACnD,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC3C,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;AACxC,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAC9C;AACA,IAAI,IAAI,iBAAiB,EAAE;AAC3B,QAAQ,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACxE,KAAK;AACL,IAAI,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAC;sBACqB,GAAG,gBAAgB;AAC1C,MAAM,6BAA6B,GAAG,CAAC,QAAQ,EAAE,iBAAiB,EAAE,SAAS,EAAE,cAAc,EAAE,OAAO,KAAK;AAC3G;AACA,IAAI,MAAM,oBAAoB,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC7D,IAAI,IAAI,sBAAsB,GAAG,EAAE,CAAC,IAAI,CAAC;AACzC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,oBAAoB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7F,QAAQ,sBAAsB,GAAG,EAAE,CAAC,GAAG,CAAC,sBAAsB,EAAE,EAAE,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3H,KAAK;AACL,IAAI,IAAI,cAAc,GAAG,EAAE,CAAC,GAAG,CAAC;AAChC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,IAAI,kBAAkB,CAAC;AAC/B,QAAQ,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,sBAAsB,CAAC,EAAE;AAChE,YAAY,MAAM,gBAAgB,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,sBAAsB,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACrG,YAAY,MAAM,aAAa,GAAG,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;AACzE,YAAY,kBAAkB,GAAG,EAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9G,SAAS;AACT,aAAa;AACb,YAAY,kBAAkB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC9C,SAAS;AACT,QAAQ,MAAM,YAAY,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9F,QAAQ,cAAc,GAAG,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpG,KAAK;AACL,IAAI,IAAI,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;AACpC,QAAQ,OAAO,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1E,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,EAAE,CAAC,IAAI,CAAC;AACvB,KAAK;AACL,CAAC,CAAC;oCACmC,GAAG,8BAA8B;AACtE,MAAM,4BAA4B,GAAG,CAAC,OAAO,EAAE,gBAAgB,EAAE,YAAY,EAAE,cAAc,EAAE,OAAO,KAAK;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,cAAc,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,EAAE,cAAc,CAAC,CAAC;AAC1F,IAAI,IAAI,cAAc,CAAC,EAAE,CAAC,mBAAmB,CAAC,EAAE;AAChD,QAAQ,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AACpD,KAAK;AACL;AACA,IAAI,MAAM,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACtF,IAAI,MAAM,kBAAkB,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/E;AACA,IAAI,MAAM,iBAAiB,GAAG,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAC9D,IAAI,MAAM,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;AAC1E,IAAI,MAAM,gBAAgB,GAAG,EAAE,CAAC,GAAG,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;AACvE,IAAI,OAAO,EAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACrF,CAAC,CAAC;mCACkC,GAAG,6BAA6B;AACpE,MAAM,6BAA6B,GAAG,CAAC,QAAQ,EAAE,iBAAiB,EAAE,UAAU,EAAE,cAAc,EAAE,OAAO,KAAK;AAC5G;AACA,IAAI,MAAM,uBAAuB,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACjE,IAAI,IAAI,yBAAyB,GAAG,EAAE,CAAC,IAAI,CAAC;AAC5C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,uBAAuB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/F,QAAQ,yBAAyB,GAAG,EAAE,CAAC,GAAG,CAAC,yBAAyB,EAAE,EAAE,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClI,KAAK;AACL,IAAI,IAAI,cAAc,GAAG,EAAE,CAAC,GAAG,CAAC;AAChC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C;AACA;AACA,QAAQ,IAAI,gBAAgB,CAAC;AAC7B,QAAQ,IAAI,yBAAyB,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,EAAE;AACtE,YAAY,MAAM,gBAAgB,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,yBAAyB,CAAC,CAAC,CAAC;AACvG,YAAY,MAAM,aAAa,GAAG,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;AAC1E,YAAY,gBAAgB,GAAG,EAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACzG,SAAS;AACT,aAAa;AACb,YAAY,gBAAgB,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,MAAM,YAAY,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5F,QAAQ,cAAc,GAAG,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpG,KAAK;AACL,IAAI,OAAO,EAAE,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC;oCACmC,GAAG,8BAA8B;AACtE,MAAM,4BAA4B,GAAG,CAAC,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,cAAc,EAAE,OAAO,KAAK;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,cAAc,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,EAAE,cAAc,CAAC,CAAC;AACzF,IAAI,IAAI,cAAc,CAAC,EAAE,CAAC,mBAAmB,CAAC,EAAE;AAChD,QAAQ,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AACpD,KAAK;AACL;AACA,IAAI,MAAM,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACxF;AACA,IAAI,MAAM,mBAAmB,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;AACjF;AACA;AACA,IAAI,MAAM,iBAAiB,GAAG,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAC9D;AACA;AACA,IAAI,MAAM,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AAC3E,IAAI,MAAM,gBAAgB,GAAG,EAAE,CAAC,GAAG,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC;AACxE,IAAI,OAAO,EAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACvF,CAAC,CAAC;mCACkC,GAAG,6BAA6B;AACpE,MAAM,6BAA6B,GAAG,CAAC,QAAQ,EAAE,WAAW,EAAE,cAAc,KAAK;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AAC7D,IAAI,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAClD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC1D,KAAK;AACL,IAAI,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC;oCACmC,GAAG,8BAA8B;AACtE,MAAM,kCAAkC,GAAG,CAAC,OAAO,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,yBAAyB,KAAK;AAC1I;AACA;AACA;AACA,IAAI,IAAI,gBAAgB,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;AACjD;AACA;AACA,QAAQ,OAAO,EAAE,CAAC,IAAI,CAAC;AACvB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;AAC7D,IAAI,MAAM,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;AAC1D;AACA;AACA;AACA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,0BAA0B,CAAC;AAClD,UAAU,IAAI;AACd,UAAU,EAAE,CAAC,0BAA0B,CAAC;AACxC,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC3C,IAAI,MAAM,gBAAgB,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;AACvE,IAAI,OAAO,EAAE,CAAC,OAAO,CAAC,gBAAgB,EAAE,yBAAyB,CAAC,CAAC;AACnE,CAAC,CAAC;yCACwC,GAAG,mCAAmC;AAChF;AACA,MAAM,4BAA4B,GAAG,CAAC,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,KAAK;AACvG;AACA,IAAI,MAAM,2BAA2B,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;AACvF,IAAI,MAAM,oBAAoB,GAAG,EAAE,CAAC,OAAO,CAAC,2BAA2B,EAAE,gBAAgB,CAAC,CAAC;AAC3F,IAAI,IAAI,cAAc,GAAG,EAAE,CAAC,GAAG,CAAC;AAChC;AACA,IAAI,IAAI,4BAA4B,CAAC;AACrC;AACA;AACA;AACA,IAAI,IAAI,oBAAoB,CAAC,GAAG,CAAC,2BAA2B,CAAC,EAAE;AAC/D,QAAQ,4BAA4B,GAAG,EAAE,CAAC,IAAI,CAAC;AAC/C,KAAK;AACL,SAAS;AACT,QAAQ,4BAA4B,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,2BAA2B,EAAE,oBAAoB,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,2BAA2B,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACxJ,KAAK;AACL,IAAI,MAAM,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;AAC1E,IAAI,MAAM,gBAAgB,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;AAChF,IAAI,MAAM,iBAAiB,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC;AACpF,IAAI,cAAc,GAAG,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,OAAO,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACjG,IAAI,OAAO,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC;mCACkC,GAAG,6BAA6B;AACpE;AACA,SAAS,4BAA4B,CAAC,OAAO,EAAE,gBAAgB,EAAE,SAAS,EAAE,cAAc,EAAE,OAAO,EAAE;AACrG;AACA,IAAI,MAAM,2BAA2B,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC;AACtF,IAAI,MAAM,oBAAoB,GAAG,EAAE,CAAC,KAAK,CAAC,2BAA2B,EAAE,gBAAgB,CAAC,CAAC;AACzF,IAAI,IAAI,cAAc,GAAG,EAAE,CAAC,GAAG,CAAC;AAChC;AACA,IAAI,IAAI,4BAA4B,CAAC;AACrC;AACA;AACA,IAAI,IAAI,oBAAoB,CAAC,GAAG,CAAC,2BAA2B,CAAC,EAAE;AAC/D,QAAQ,4BAA4B,GAAG,EAAE,CAAC,IAAI,CAAC;AAC/C,KAAK;AACL,SAAS;AACT,QAAQ,4BAA4B,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,oBAAoB,EAAE,2BAA2B,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC,CAAC;AACvJ,KAAK;AACL,IAAI,MAAM,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;AAC1E,IAAI,MAAM,kBAAkB,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;AACjF,IAAI,MAAM,iBAAiB,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC,CAAC;AACnF,IAAI,cAAc,GAAG,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,OAAO,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACjG,IAAI,OAAO,EAAE,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;AACnE,CAAC;mCACmC,GAAG,4BAA4B;;ACvSnE,MAAM,CAAC,cAAc,CAAC,QAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,MAAM,OAAO,GAAG3B,QAA+B,CAAC;AAChD,MAAM,YAAY,GAAGG,SAAiC,CAAC;AACvD,MAAM,QAAQ,GAAGC,MAA6B,CAAC;AAC/C,MAAM,MAAM,GAAGc,IAAkB,CAAC;AAClC,MAAM,IAAI,GAAGC,MAAiB,CAAC;AAC/B,MAAMe,cAAY,SAAS,MAAM,CAAC,OAAO,CAAC;AAC1C;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC,CAAC;AACtB,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AAC5B;AACA;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAClD,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE;AACpD,YAAY,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;AAC1C,SAAS;AACT,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE;AACpD,YAAY,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;AAC1C,SAAS;AACT,QAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9D,QAAQ,IAAI,aAAa,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvD,YAAY,IAAI,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AAC9E,gBAAgB,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;AAC9C,aAAa;AACb,YAAY,aAAa,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AACxE,SAAS;AACT,QAAQ,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AAClC,YAAY,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;AAC3D,SAAS;AACT,KAAK;AACL;AACA,IAAI,IAAI,MAAM,GAAG;AACjB;AACA,QAAQ,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrD,KAAK;AACL;AACA,IAAI,aAAa,gBAAgB,CAAC,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE;AAC/E,QAAQ,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;AACzE,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;AACzD,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;AAC1C,YAAY,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AACrD,SAAS;AACT,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AAC3B,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACrC,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC;AAChD,QAAQ,MAAM,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC;AAC/C,QAAQ,MAAM,MAAM,GAAG,EAAE,CAAC;AAC1B,QAAQ,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;AACzC,YAAY,MAAM,CAAC,IAAI,CAAC;AACxB,gBAAgB,OAAO,EAAE,KAAK,CAAC,OAAO;AACtC,gBAAgB,MAAM,EAAE,KAAK,CAAC,MAAM;AACpC,gBAAgB,OAAO,EAAE,KAAK,CAAC,OAAO;AACtC,gBAAgB,QAAQ,EAAE,KAAK,CAAC,QAAQ;AACxC,gBAAgB,MAAM,EAAE,KAAK,CAAC,MAAM;AACpC,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,OAAO,IAAIA,cAAY,CAAC;AAChC,YAAY,EAAE;AACd,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB,YAAY,cAAc;AAC1B,YAAY,iBAAiB;AAC7B,YAAY,KAAK;AACjB,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACxK,QAAQ,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;AACpC,KAAK;AACL;AACA,IAAI,WAAW,CAAC,aAAa,EAAE,cAAc,EAAE,QAAQ,EAAE;AACzD,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,aAAa,CAAC,CAAC;AAC7E,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,cAAc,CAAC,CAAC;AAC/E,QAAQ,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AACzT,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAClF;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;AACzF,YAAY,QAAQ,CAAC,OAAO,GAAG,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC7F,SAAS;AACT,QAAQ,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;AACpC,KAAK;AACL,IAAI,YAAY,CAAC,aAAa,EAAE,cAAc,EAAE,SAAS,EAAE;AAC3D,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,aAAa,CAAC,CAAC;AAC7E,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,cAAc,CAAC,CAAC;AAC/E,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AAC1T,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7E;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;AACzF,YAAY,QAAQ,CAAC,OAAO,GAAG,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC7F,SAAS;AACT,QAAQ,OAAO,QAAQ,CAAC,QAAQ,EAAE,CAAC;AACnC,KAAK;AACL;AACA,IAAI,0BAA0B,CAAC,SAAS,EAAE;AAC1C,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACnE,YAAY,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AACnV,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AAC7D;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1D,gBAAgB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9C,gBAAgB,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;AAC9D,qBAAqB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAClD,qBAAqB,QAAQ,EAAE,CAAC;AAChC,aAAa;AACb,YAAY,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjG,SAAS;AACT,QAAQ,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;AACjC,KAAK;AACL,IAAI,yBAAyB,CAAC,aAAa,EAAE,MAAM,EAAE;AACrD,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,aAAa,CAAC,CAAC;AAC7E,QAAQ,IAAI,CAAC,OAAO,EAAE;AACtB,YAAY,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AACtQ,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7E;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;AACzF,YAAY,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjG,SAAS;AACT,QAAQ,OAAO,QAAQ,CAAC,QAAQ,EAAE,CAAC;AACnC,KAAK;AACL,IAAI,yBAAyB,CAAC,cAAc,EAAE,KAAK,EAAE;AACrD,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,cAAc,CAAC,CAAC;AAC/E,QAAQ,IAAI,CAAC,QAAQ,EAAE;AACvB,YAAY,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,MAAM,eAAe,GAAG,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AACzQ,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAClF;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,QAAQ,CAAC,OAAO,GAAG,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC7F,YAAY,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjG,SAAS;AACT,QAAQ,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;AACpC,KAAK;AACL,IAAI,0BAA0B,CAAC,KAAK,EAAE;AACtC;AACA,QAAQ,IAAI,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;AAC7D,YAAY,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;AAC3D,SAAS;AACT,QAAQ,MAAM,gBAAgB,GAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,CAAC;AACtM,QAAQ,MAAM,UAAU,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtH;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1D,gBAAgB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9C,gBAAgB,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC/F,aAAa;AACb,YAAY,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjG,SAAS;AACT,QAAQ,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AACnD,KAAK;AACL,IAAI,0BAA0B,CAAC,UAAU,EAAE;AAC3C,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACpE,YAAY,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;AACnV,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AACzD;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1D,gBAAgB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9C,gBAAgB,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;AAC9D,qBAAqB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACpD,qBAAqB,QAAQ,EAAE,CAAC;AAChC,aAAa;AACb,YAAY,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjG,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;AAChC,KAAK;AACL,CAAC;gBACc,GAAGA;;ACvLlB,MAAM,CAAC,cAAc,CAAC,GAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,qCAAoB,mBAAuB,GAAG,6BAAkB,iBAAqB,GAAG,KAAK,CAAC,CAAC;AAC/F,MAAM,QAAQ,GAAGlC,MAAyB,CAAC;cACzB,GAAG,QAAQ,CAAC,QAAQ;AACtC,MAAM,UAAU,GAAGG,MAA8B,CAAC;AAClD,iCAAkB,GAAG,UAAU,CAAC;AAChC,MAAM,UAAU,GAAGC,QAA2B,CAAC;gBAC3B,GAAG,UAAU,CAAC,QAAQ;AAC1C,MAAM,YAAY,GAAGc,MAAgC,CAAC;AACtD,iCAAoB,GAAG,YAAY;;ACRnC;AAEA;AACA;AACA;AAEA;AACA;SACgBiB,0BAAwB,CAAC,MAAM,EAAE,YAAY;IACzD,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,UAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAM,EAAE,GAAG,EAAE,EAAC,CAAC,CAAC,CAAC;;;;;;;;;;AAUpE,CAAC;AAED;AACA;SACgBC,0BAAwB,CAAC,MAAM,EAAE,YAAY;IACzD,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,UAAC,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,IAAM,EAAE,GAAG,EAAE,EAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;;;;;;AAOxE,CAAC;AAED;AACA;SACgBC,wBAAsB,CAAC,MAAM,EAAE,YAAY;IACvD,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAChD,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,UAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,GAAK,EAAE,CAAA,CAAC,CAAC,CAAC;AAC1E,CAAC;AAED;AACA;SACgBC,wBAAsB,CAAC,MAAM,EAAE,YAAY;IACvD,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAChD,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAChC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,CAAC,CAAC,CAAC,CAAC,GAAG,UAAC,CAAC,GAAG,KAAK,GAAG,IAAI,IAAM,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACpE,CAAC;AACN,CAAC;AAED;AACA;SACgBC,wBAAsB,CAAC,MAAM,EAAE,YAAY;IACvD,MAAM,IAAI,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC/C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAChC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,CAAC,CAAC,CAAC,GAAG,UAAC,CAAC,GAAG,KAAK,GAAG,IAAI,IAAM,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACnE,CAAC;AACN,CAAC;AAED;AACA;SACgBC,wBAAsB,CAAC,MAAM,EAAE,YAAY;IACvD,MAAM,IAAI,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC/C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,UAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,GAAK,EAAE,CAAA,CAAC,CAAC,CAAC;AACzE,CAAC;AAED;AACA;AACA;AAEA;AACA;SACgBC,4CAA0C,CACtD,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,EACI,CAAC,EAAE,GAAG,EAAE;SACP,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAC,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,IAAM,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAC,GAAG,EAAE,CAAC,CACvE,CACJ,CAAC;AACN,CAAC;AAED;AACA;SACgBC,4CAA0C,CACtD,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,EACI,CAAC,EAAE,GAAG,UAAC,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,IAAM,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAC,GAAG,EAAE;SAC/C,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CACvB,CACJ,CAAC;AACN,CAAC;AAED;AACA;SACgBC,0CAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAChD,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,CAAC,EAAE,GAAG,UAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,IAAM,CAAC,GAAG,EAAE,EAAC;SAClD,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CACxC,CAAC;AACN,CAAC;AAED;AACA;SACgBC,0CAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAChD,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAChC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,CAAC,UAAC,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,IAAM,CAAC,GAAG,EAAE,EAAC,GAAG,EAAE;SACpC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAClD,CAAC;AACN,CAAC;AAED;AACA;SACgBC,0CAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,MAAM,IAAI,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC/C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAChC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,CAAC,UAAC,CAAC,GAAG,KAAK,GAAG,IAAI,IAAM,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAC;QACnC,IAAI;SACH,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QACnB,EAAE;QACF,EAAE,CACT,CAAC;AACN,CAAC;AAED;AACA;SACgBC,0CAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,MAAM,IAAI,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC/C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,CAAC,IAAI;SACA,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QACnB,EAAE;QACF,UAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,IAAM,CAAC,CAAC,GAAG,EAAE,EAAC;QAChD,EAAE,CACT,CAAC;AACN,CAAC;AAED;AACA;AACA;AAEA;AACA;SACgBC,sDAAoD,CAChE,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,UAAC,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,IAAM,EAAE,GAAG,EAAE,EAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAChF,CAAC;AAED;AACA;SACgBC,sDAAoD,CAChE,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,EACI,CAAC,EAAE,GAAG,UAAC,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,IAAM,EAAE,GAAG,EAAE,EAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;SACpD,UAAC,EAAE,GAAG,EAAE,GAAK,CAAC,CAAA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAA,EAAE,EAAI,CAAC,CAAA,CAAC,CACxC,CACJ,CAAC;AACN,CAAC;AAED;AACA;SACgBC,oDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAChD,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,IAAI,GAAG,UAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,GAAK,EAAE,CAAA,GAAG,EAAE,CAAC,CAAC,CAC3E,CAAC;AACN,CAAC;AAED;AACA;SACgBC,oDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAChD,MAAM,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAChC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,EACI,CAAC,UAAC,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,IAAM,CAAC,GAAG,EAAE,EAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;SACpD,UAAC,KAAK,GAAG,IAAI,GAAK,CAAC,CAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,SAAA,EAAE,EAAI,CAAC,CAAA,CAAC,CACxD,CACJ,CAAC;AACN,CAAC;AAED;AACA;SACgBC,oDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,MAAM,IAAI,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC/C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAChC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,EACI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;SAC/B,UAAC,CAAC,GAAG,KAAK,GAAG,IAAI,IAAM,CAAC,GAAG,EAAE,EAAC,GAAG,EAAE,CAAC,CACxC,CACJ,CAAC;AACN,CAAC;AAED;AACA;SACgBC,oDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,MAAM,IAAI,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC/C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,OAAO,IAAI,CACP,EACI,CAAC,IAAI;QACD,UAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAK,CAAC,CAAA;SACvB,CAAC,CAAC,GAAG,EAAE,CAAC;QACT,EAAE;QACF,UAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,IAAM,CAAC,CAAC,GAAG,EAAE,EAAC;QACpD,SAAA,EAAE,EAAI,CAAC,CAAA,CACV,CACJ,CAAC;AACN;;MC9Qa,YAAY;IAyBrB,YACI,EAAU,EACV,OAAe,EACf,OAAe,EACf,WAAmB,EACnB,WAAmB,EACnB,MAA2B,EAC3B,UAAoB;QA/BxB,aAAQ,GAAc,SAAS,CAAC,QAAQ,CAAC;QASzC,iBAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,kBAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAuBtB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;KACxC;IA5BD,OAAO,QAAQ,CAAC,IAAsB;QAClC,OAAO,IAAI,YAAY,CACnB,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,UAAU,CAClB,CAAC;KACL;IAoBD,cAAc,CAAC,IAAkB;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC5B;IAED,iBAAiB,CAAC,OAAe,EAAE,QAAgB;QAC/C,IAAI,QAAmB,CAAC;QACxB,IAAI,EAAqB,CAAC;QAC1B,IAAI,EAAqB,CAAC;QAC1B,IAAI,SAAiB,CAAC;QACtB,IAAI,UAAkB,CAAC;QACvB,IAAI,WAA4B,CAAC;QACjC,IAAI,UAA2B,CAAC;QAChC,IAAI,QAAmB,CAAC;QACxB,IAAI,SAAoB,CAAC;;QAGzB,IAAI,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE;YACzB,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;YAChC,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS;gBAC9B,MAAM,gCAAgC,CAAC;YAC3C,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;YAC7B,UAAU,GAAG,IAAI,CAAC;YAClB,QAAQ,GAAG,GAAG,CAAC;SAClB;aAAM,IAAI,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;YACjC,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;YAChC,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS;gBAC9B,MAAM,gCAAgC,CAAC;YAC3C,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9B,WAAW,GAAG,IAAI,CAAC;YACnB,SAAS,GAAG,GAAG,CAAC;SACnB;aAAM;YACH,QAAQ,GAAG,SAAS,CAAC,YAAY,CAAC;SACrC;QAED,IAAI,QAAQ,IAAI,SAAS,CAAC,UAAU,EAAE;YAClC,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CACtC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,OAAO,CAAC,CACvD,CAAC;YACF,IAAI,YAAY,GAAG,CAAC;gBAAE,MAAM,+BAA+B,CAAC;YAC5D,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC/B,SAAS,GAAG,EAAE,CAAC,OAAO,CAAC;YACvB,UAAU,GAAG,EAAE,CAAC,QAAQ,CAAC;YACzB,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACpD;QACD,IAAI,QAAQ,IAAI,SAAS,CAAC,UAAU,EAAE;YAClC,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CACvC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,QAAQ,CAAC,CACxD,CAAC;YACF,IAAI,aAAa,GAAG,CAAC;gBAAE,MAAM,gCAAgC,CAAC;YAC9D,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YAChC,UAAU,GAAG,EAAE,CAAC,OAAO,CAAC;YACxB,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC;YAC1B,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACrD;QAED,MAAM,YAAY,GAAyB;YACvC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC;YAC9B,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC;YAChC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;YAC1B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;YAC5B,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CAAC;QAEF,OAAO,YAAY,CAAC;KACvB;;;;;IAMD,sBAAsB,CAAC,YAAkC;QACrD,IAAI,YAAY,CAAC,QAAQ,IAAI,SAAS,CAAC,YAAY,EAAE;YACjD,OAAO,YAAY,CAAC,UAAU;iBACzB,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC;iBAC5B,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;SAChE;aAAM,IAAI,YAAY,CAAC,QAAQ,IAAI,SAAS,CAAC,UAAU,EAAE;YACtD,OAAO,YAAY,CAAC,UAAU,CAAC;SAClC;aAAM,IAAI,YAAY,CAAC,QAAQ,IAAI,SAAS,CAAC,UAAU,EAAE;YACtD,OAAO,YAAY,CAAC,UAAU,CAAC,GAAG,CAC9B,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CACnC,CAAC;SACL;KACJ;IAED,kBAAkB,CACd,YAA0B,EAC1B,QAAmB;QAEnB,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;YACpC,OAAO,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC1D;aAAM;YACH,OAAO,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC5D;KACJ;;IAGD,yBAAyB,CAAC,KAAa,EAAE,UAAqB;;QAE1D,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE;YACvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;SAC5C;aAAM;;YAEH,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;YACvD,CAAC,CAAC,OAAO,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;SACrC;KACJ;;;;IAKD,wBAAwB,CACpB,YAAkC,EAClC,MAAiB;QAEjB,OAAOjB,0BAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,EAAE,CACpD,YAAY,CAAC,WAAW,EACxB,CAAC,CACJ,CAAC;KACL;IAED,sBAAsB,CAClB,YAAkC,EAClC,MAAiB;QAEjB,OAAOE,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;IAED,sBAAsB,CAClB,YAAkC,EAClC,MAAiB;QAEjB,OAAOG,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;;;;IAKD,wBAAwB,CACpB,YAAkC,EAClC,MAAiB;QAEjB,OAAOJ,0BAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,EAAE,CACpD,YAAY,CAAC,UAAU,EACvB,CAAC,CACJ,CAAC;KACL;IAED,sBAAsB,CAClB,YAAkC,EAClC,MAAiB;QAEjB,OAAOE,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;IAED,sBAAsB,CAClB,YAAkC,EAClC,MAAiB;QAEjB,OAAOC,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;IAED,0CAA0C,CACtC,YAAkC,EAClC,MAAiB;QAEjB,OAAOE,4CAA0C,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KAC3E;IAED,wCAAwC,CACpC,YAAkC,EAClC,MAAiB;QAEjB,OAAOE,0CAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,wCAAwC,CACpC,YAAkC,EAClC,MAAiB;QAEjB,OAAOE,0CAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,0CAA0C,CACtC,YAAkC,EAClC,MAAiB;QAEjB,OAAOH,4CAA0C,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KAC3E;IAED,wCAAwC,CACpC,YAAkC,EAClC,MAAiB;QAEjB,OAAOE,0CAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,wCAAwC,CACpC,YAAkC,EAClC,MAAiB;QAEjB,OAAOE,0CAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,oDAAoD,CAChD,YAAkC,EAClC,MAAiB;QAEjB,OAAOC,sDAAoD,CACvD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAkC,EAClC,MAAiB;QAEjB,OAAOE,oDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAkC,EAClC,MAAiB;QAEjB,OAAOE,oDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,oDAAoD,CAChD,YAAkC,EAClC,MAAiB;QAEjB,OAAOH,sDAAoD,CACvD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAkC,EAClC,MAAiB;QAEjB,OAAOE,oDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAkC,EAClC,MAAiB;QAEjB,OAAOE,oDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,cAAc,CACV,YAAkC,EAClC,MAAiB;QAEjB,IAAI;;YAEA,MAAM,GAAG,GAAGC,cAAgB,CAAC,eAAe,CACxC,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,UAAU,CAAC,EACtD,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,EAChC,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC,WAAW,CAAC,EACxD,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,EACjC,KAAK,CAAC,MAAM,EAAE,YAAY,CAAC,UAAU,CAAC,EACtC,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,CAAC,CAClC,CAAC;;YAEF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;SAChD;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAkC,EAClC,MAAiB;QAEjB,IAAI;;YAEA,MAAM,GAAG,GAAGA,cAAgB,CAAC,4BAA4B,CACrD,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,UAAU,CAAC,EACtD,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,EAChC,KAAK,CAAC,MAAM,EAAE,YAAY,CAAC,UAAU,CAAC,EACtC,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC;YAClC,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,CAAC,CAClC,CAAC;;YAEF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAkC,EAClC,MAAiB;QAEjB,IAAI;;YAEA,MAAM,GAAG,GAAGA,cAAgB,CAAC,4BAA4B,CACrD,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC,WAAW,CAAC,EACxD,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,EACjC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC;YACjB,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC;YACjC,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,CAAC,CAClC,CAAC;;YAEF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;SAChD;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,IAAI,CAAC;SACf;KACJ;IAED,cAAc,CACV,YAAkC,EAClC,MAAiB;QAEjB,IAAI;;YAEA,MAAM,GAAG,GAAGA,cAAgB,CAAC,eAAe,CACxC,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,UAAU,CAAC,EACtD,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,EAChC,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC,WAAW,CAAC,EACxD,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,EACjC,KAAK,CAAC,MAAM,EAAE,YAAY,CAAC,WAAW,CAAC,EACvC,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,CAAC,CAClC,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;SAC/C;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAkC,EAClC,MAAiB;QAEjB,IAAI;;YAEA,MAAM,GAAG,GAAGA,cAAgB,CAAC,4BAA4B,CACrD,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,UAAU,CAAC,EACtD,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,EAChC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EACjB,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC;YAClC,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,CAAC,CAClC,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;SAC/C;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAkC,EAClC,MAAiB;QAEjB,IAAI;;YAEA,MAAM,GAAG,GAAGA,cAAgB,CAAC,4BAA4B,CACrD,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC,WAAW,CAAC,EACxD,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,EACjC,KAAK,CAAC,MAAM,EAAE,YAAY,CAAC,WAAW,CAAC,EACvC,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC;YACjC,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,CAAC,CAClC,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,IAAI,CAAC;SACf;KACJ;;;AC5eL;AACA;AAEA;AAEA;;;;;;;;SAQgBC,YAAU,CACtB,GAAc;AACd,QAAqB;;IAErB,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;IACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;QACjC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/B;IACD,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE;QACd,OAAO,IAAI,CAAC;KACf;IACD,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,IAAI,GAAG,GAAG,GAAG,CAAC;IACd,MAAM,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC,SAAA,UAAU,EAAI,UAAU,CAAA,CAAC,CAAC;IAE1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;;YAEjC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAC3D;QACD,OAAO,GAAG,GAAG,CAAC;;QAEd,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;aACjB,KAAK,CAAC,GAAG,CAAC;aACV,KAAK,CAAC,GAAG,CAAC;aACV,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACzC,GAAG,CACA,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACf,KAAK,CAAC,GAAG,CAAC;aACV,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAC/C,CAAC;;QAEN,IAAI,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;YACjB,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAA,EAAE,EAAI,CAAC,EAAE,CAAA,CAAC,CAAC,EAAE;gBACxC,MAAM;aACT;SACJ;aAAM,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAA,EAAE,EAAI,CAAC,EAAE,CAAA,CAAC,CAAC,EAAE;YAC/C,MAAM;SACT;KACJ;;IAED,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;SAWgBnB,0BAAwB,CAAC,MAAM,EAAE,YAAY;;;IAGzD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,IAAI,aAAa,GAAG,MAAM,CAAC;IAC3B,aAAa,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;IAGxD,MAAM,GAAG,GAAGmB,YAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,GAAG,CAAC;IACZ,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACzC,IAAI,OAAO,GAAG,GAAG,CAAC;IAClB,IAAI,CAAC,GAAG,IAAI,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAEpC,IAAI,CAAC,IAAI,YAAY,EAAE;YACnB,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACvC;aAAM,IAAI,CAAC,IAAI,aAAa,EAAE;YAC3B,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;SACnB;aAAM;YACH,SAAS;SACZ;QACD,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;QAElB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC3B;;IAGD,MAAM,CAAC,GAAGC,yBAAuB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;;IAI7D,OAAO,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC;AAED;AACA;AACA;;;;;;;;;;;SAWgBnB,0BAAwB,CAAC,MAAM,EAAE,YAAY;;;IAGzD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,cAAc,GAAG,MAAM,CAAC;;IAE9B,MAAM,GAAG,GAAGkB,YAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,GAAG,CAAC;IACZ,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACzC,IAAI,OAAO,GAAG,GAAG,CAAC;IAClB,IAAI,CAAC,GAAG,IAAI,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAEpC,IAAI,CAAC,IAAI,aAAa,EAAE;YACpB,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;SACzC;aAAM,IAAI,CAAC,IAAI,YAAY,EAAE;YAC1B,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;SACnB;aAAM;YACH,SAAS;SACZ;QACD,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;QAElB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC3B;;IAGD,MAAM,CAAC,GAAGC,yBAAuB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;IAG7D,OAAO,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACnE,CAAC;AAED;AACA;AACA,SAASC,mDAAiD,CACtD,GAAc,EACd,QAAqB,EACrB,GAAc,EACd,UAAkB;IAElB,IAAI,CAAC,GAAG,GAAG,CAAC;IACZ,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;IACnC,IAAI,KAAK,GAAG,GAAG,CAAC;IAChB,IAAI,CAAC,GAAG,IAAI,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;QACjC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,UAAU,EAAE;YACjB,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;SACnB;aAAM;YACH,SAAS;SACZ;QACD,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;QAElB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC3B;;IAGD,OAAOD,yBAAuB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5D,CAAC;AAED;SACgBA,yBAAuB,CACnC,GAAc,EACd,GAAc,EACd,GAAc,EACd,OAAkB,EAClB,CAAY;;IAGZ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;IAExD,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;;;;IAKhD,IAAI,CAAC,CAAC;IACN,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;QACZ,CAAC,GAAG,GAAG;aACF,KAAK,CAAC,CAAC,CAAC;aACR,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;KACvE;SAAM;QACH,CAAC,GAAG,CAAC;aACA,KAAK,CAAC,GAAG,CAAC;aACV,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACnB,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAChB,IAAI,EAAE;aACN,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;KAC5B;;IAED,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC;AAED;;;;SAIgBlB,wBAAsB,CAAC,MAAM,EAAE,YAAY;;;IAGvD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GACzD,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,aAAa,GAAG,MAAM,CAAC;;IAE7B,MAAM,gBAAgB,GAAGiB,YAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;;IAInD,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/C;;IAGD,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC9D,MAAM,2BAA2B,GAAG,QAAQ,CAAC,YAAY,CAAC;SACrD,IAAI,CAAC,aAAa,CAAC;SACnB,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IACjC,MAAM,oBAAoB,GAAG,GAAG,CAAC,IAAI,CACjC,2BAA2B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAC9D,CAAC;;;IAIF,MAAM,4BAA4B,GAAG,2BAA2B;SAC3D,KAAK,CAAC,oBAAoB,CAAC;SAC3B,GAAG,CAAC,2BAA2B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAEjD,MAAM,gBAAgB,GAAG,aAAa,CAAC,KAAK,CACxC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CACzD,CAAC;IACF,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;;IAGvE,MAAM,YAAY,GAAGA,YAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAE/C,OAAO,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3E,CAAC;AAED;;;;;SAKgBhB,wBAAsB,CAAC,MAAM,EAAE,YAAY;;;IAGvD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GACzD,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,YAAY,GAAG,MAAM,CAAC;;;;;IAO5B,MAAM,gBAAgB,GAAGgB,YAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;IAEnD,MAAM,YAAY,GAAG,UAAU;SAC1B,IAAI,CAAC,YAAY,CAAC;SAClB,GAAG,CAAC,UAAU,CAAC;SACf,KAAK,CAAC,gBAAgB,CAAC,CAAC;;;IAI7B,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/C;;IAGD,MAAM,oBAAoB,GACtBE,mDAAiD,CAC7C,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,YAAY,CACf,CAAC;IACN,MAAM,gBAAgB,GAAG,oBAAoB,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;;IAG5E,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC9D,MAAM,4BAA4B,GAAG,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;;IAG9D,OAAO,gBAAgB,CAAC,GAAG,CACvB,GAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CACzD,CAAC;AACN,CAAC;AAED;;;;SAIgBjB,wBAAsB,CAAC,MAAM,EAAE,YAAY;;;IAGvD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GACzD,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,cAAc,GAAG,MAAM,CAAC;;IAG9B,MAAM,gBAAgB,GAAGe,YAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;;IAInD,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/C;;IAGD,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC/D,MAAM,2BAA2B,GAAG,QAAQ,CAAC,aAAa,CAAC;SACtD,KAAK,CAAC,cAAc,CAAC;SACrB,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;IAClC,MAAM,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAClC,GAAG,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAC9D,CAAC;;IAGF,MAAM,4BAA4B,GAAG,oBAAoB;SACpD,KAAK,CAAC,2BAA2B,CAAC;SAClC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;IAEjD,MAAM,kBAAkB,GAAG,cAAc,CAAC,GAAG,CACzC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CACzD,CAAC;IACF,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;;IAG5E,MAAM,YAAY,GAAGA,YAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;IAG/C,OAAO,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC;AAED;;;;;SAKgBd,wBAAsB,CAAC,MAAM,EAAE,YAAY;;;IAGvD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GACzD,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,WAAW,GAAG,MAAM,CAAC;;;;;IAM3B,MAAM,gBAAgB,GAAGc,YAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;IAEnD,MAAM,YAAY,GAAG,SAAS;SACzB,KAAK,CAAC,WAAW,CAAC;SAClB,GAAG,CAAC,SAAS,CAAC;SACd,KAAK,CAAC,gBAAgB,CAAC,CAAC;;;IAI7B,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/C;;IAGD,MAAM,oBAAoB,GACtBE,mDAAiD,CAC7C,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,CAChB,CAAC;IACN,MAAM,kBAAkB,GACpB,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;;IAGxD,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC/D,MAAM,4BAA4B,GAAG,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;;IAG9D,OAAO,kBAAkB,CAAC,KAAK,CAC3B,GAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CACzD,CAAC;AACN,CAAC;AAED;AACA;AACA;SAEgBC,kBAAgB,CAC5B,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,mBAAmB,EACnB,OAAO;IAEP,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;IACnC,MAAM,CAAC,GAAGH,YAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACpC,IAAI,CAAC,GAAG,IAAI,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;QACjC,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,IAAI,aAAa,EAAE;YACzC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3B;KACJ;IACD,MAAM,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;IACjC,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC;IAClC,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,SAAA,UAAU,EAAI,UAAU,CAAA,CAAC,CAAC;IAC9C,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClD,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,IAAI,GAAG,CAAC;IACR,IAAI,mBAAmB,EAAE;QACrB,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;KAClC;SAAM;QACH,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,SAAS,CAAC;QACd,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;aACd,KAAK,CAAC,SAAS,CAAC;aAChB,KAAK,CAAC,SAAS,CAAC;aAChB,KAAK,CAAC,UAAU,CAAC;aACjB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACzC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACtD,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACjC,IAAI,OAAO,EAAE;YACT,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SAC7C;KACJ;IACD,OAAO,GAAG,CAAC;AACf,CAAC;SAEeI,qBAAmB,CAC/B,GAAG,EACH,QAAQ,EACR,SAAS,EACT,YAAY,EACZ,mBAAmB,EACnB,UAAU,EACV,OAAO;IAEP,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;IACnC,MAAM,CAAC,GAAGJ,YAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACpC,IAAI,CAAC,GAAG,IAAI,CAAC;IACb,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;QACjC,IAAI,CAAC,IAAI,YAAY,EAAE;YACnB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YACxB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD;KACJ;IACD,MAAM,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,SAAA,UAAU,EAAI,UAAU,CAAA,CAAC,CAAC;IAClD,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC/B,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;SACpB,KAAK,CAAC,KAAK,CAAC;SACZ,KAAK,CAAC,CAAC,CAAC;SACR,IAAI,CAAC,IAAI,CAAC;SACV,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,MAAM,eAAe,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAC9C,IAAI,GAAG,CAAC;IACR,IAAI,mBAAmB,EAAE;QACrB,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAChE;SAAM;QACH,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACxC,MAAM,UAAU,GAAG,KAAK,CAAC;QACzB,MAAM,gBAAgB,GAAG,UAAU,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;QACvD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,UAAU,EAAE;YACZ,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChE,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvD,MAAM,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACxC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAC7D,IAAI,OAAO,EAAE;gBACT,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrD,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;aAClD;SACJ;aAAM;YACH,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;iBACR,KAAK,CAAC,UAAU,CAAC;iBACjB,GAAG,CAAC,SAAS,CAAC;iBACd,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxD,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YACtC,IAAI,OAAO,EAAE;gBACT,GAAG,GAAG,GAAG;qBACJ,KAAK,CAAC,SAAS,CAAC;qBAChB,GAAG,CAAC,eAAe,CAAC;qBACpB,KAAK,CAAC,SAAS,CAAC;qBAChB,GAAG,CAAC,CAAC,CAAC,CAAC;aACf;SACJ;KACJ;IACD,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;AACA;AAEA;AACA;SACgBb,4CAA0C,CACtD,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAChD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CACnC,CAAC;IACF,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnDN,0BAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CACjD,CAAC;IACF,IAAI,GAAG,GAAGsB,kBAAgB,CACtB,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,IAAI,EACJ,KAAK,CACR,CAAC;IACF,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7C,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;SACgBf,4CAA0C,CACtD,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,GAAGN,0BAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,KAAK,CAC5D,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CACrB,CAAC;IACF,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAChE,IAAI,GAAG,GAAGqB,kBAAgB,CACtB,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,IAAI,EACJ,IAAI,CACP,CAAC;IACF,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7C,OAAO,GAAG,CAAC;AACf,CAAC;AAED,SAASE,YAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO;IAC7C,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/C;IACD,MAAM,aAAa,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC5D,MAAM,4BAA4B,GAAG,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IAC9D,OAAO,GAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAClE,CAAC;AAED;AACA;SACgBhB,0CAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,SAAS,GAAGgB,YAAU,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IAC9D,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAChD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAC1B,CAAC;IACF,UAAU,GAAG,UAAU,CAAC,IAAI,CAACtB,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;IAC3E,IAAI,GAAG,GAAGqB,qBAAmB,CACzB,GAAG,EACH,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,IAAI,EACJ,IAAI,EACJ,KAAK,CACR,CAAC;IACF,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;SACgBd,0CAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,GAAGN,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IACzD,MAAM,SAAS,GAAGqB,YAAU,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IAC9D,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IAC3E,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrC,IAAI,GAAG,GAAGD,qBAAmB,CACzB,GAAG,EACH,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,IAAI,EACJ,IAAI,EACJ,IAAI,CACP,CAAC;IACF,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;SACgBb,0CAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,IAAI,GAAGL,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC1D,MAAM,SAAS,GAAGmB,YAAU,CAAC,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC/D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CACtB,CAAC;IACF,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACpC,MAAM,GAAG,GAAGD,qBAAmB,CAC3B,GAAG,EACH,QAAQ,EACR,SAAS,EACT,aAAa,EACb,IAAI,EACJ,KAAK,EACL,KAAK,CACR,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACjB,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;SACgBZ,0CAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,SAAS,GAAGa,YAAU,CAAC,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC/D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnD,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CACxB,CAAC;IACF,SAAS,GAAG,SAAS,CAAC,KAAK,CAACpB,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;IAC1E,MAAM,GAAG,GAAGmB,qBAAmB,CAC3B,GAAG,EACH,QAAQ,EACR,SAAS,EACT,aAAa,EACb,IAAI,EACJ,KAAK,EACL,IAAI,CACP,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACjB,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;AACA;AAEA;AACA;SACgBX,sDAAoD,CAChE,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAChD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CACnC,CAAC;IACF,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnDZ,0BAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CACjD,CAAC;IACF,OAAOsB,kBAAgB,CACnB,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,KAAK,EACL,KAAK,CACR,CAAC;AACN,CAAC;AAED;AACA;SACgBT,sDAAoD,CAChE,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,GAAGZ,0BAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,KAAK,CAC5D,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CACrB,CAAC;IACF,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAChE,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,OAAOqB,kBAAgB,CACnB,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,KAAK,EACL,IAAI,CACP,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACrB,CAAC;AAED;AACA;SACgBR,oDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,SAAS,GAAGU,YAAU,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IAC9D,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAChD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAC1B,CAAC;IACF,UAAU,GAAG,UAAU,CAAC,IAAI,CAACtB,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;IAC3E,MAAM,GAAG,GAAGqB,qBAAmB,CAC3B,GAAG,EACH,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,KAAK,EACL,IAAI,EACJ,KAAK,CACR,CAAC;IACF,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;SACgBR,oDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,GAAGZ,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IACzD,MAAM,SAAS,GAAGqB,YAAU,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IAC9D,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IAC3E,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrC,OAAOD,qBAAmB,CACtB,GAAG,EACH,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,KAAK,EACL,IAAI,EACJ,IAAI,CACP,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACrB,CAAC;AAED;AACA;SACgBP,oDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,IAAI,GAAGX,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC1D,MAAM,SAAS,GAAGmB,YAAU,CAAC,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC/D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CACtB,CAAC;IACF,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACpC,MAAM,GAAG,GAAGD,qBAAmB,CAC3B,GAAG,EACH,QAAQ,EACR,SAAS,EACT,aAAa,EACb,KAAK,EACL,KAAK,EACL,KAAK,CACR,CAAC;IACF,OAAO,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC9B,CAAC;AAED;AACA;SACgBN,oDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,GAAGb,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IACzD,MAAM,SAAS,GAAGoB,YAAU,CAAC,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC/D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnD,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CACxB,CAAC;IACF,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,MAAM,GAAG,GAAGD,qBAAmB,CAC3B,GAAG,EACH,QAAQ,EACR,SAAS,EACT,aAAa,EACb,KAAK,EACL,KAAK,EACL,IAAI,CACP,CAAC;IACF,OAAO,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC;;MC/zBa,UAAU;IA4BnB,YACI,EAAU,EACV,OAAe,EACf,GAAW,EACX,OAAe,EACf,WAAmB,EACnB,MAAyB,EACzB,UAAoB;QAlCxB,aAAQ,GAAc,SAAS,CAAC,MAAM,CAAC;QAUvC,kBAAa,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,iBAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,kBAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAwBtB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACzD;IA9BD,OAAO,QAAQ,CAAC,IAAsB;QAClC,OAAO,IAAI,UAAU,CACjB,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,UAAU,CAClB,CAAC;KACL;IAsBD,cAAc,CAAC,IAAkB;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC5B;IAED,iBAAiB,CAAC,OAAe,EAAE,QAAgB;QAC/C,IAAI,QAAmB,CAAC;QACxB,IAAI,EAAmB,CAAC;QACxB,IAAI,EAAmB,CAAC;QACxB,IAAI,SAAiB,CAAC;QACtB,IAAI,UAAkB,CAAC;QACvB,IAAI,WAA4B,CAAC;QACjC,IAAI,UAA2B,CAAC;QAChC,IAAI,YAAoB,CAAC;QACzB,IAAI,aAAqB,CAAC;;QAG1B,IAAI,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;YAC1B,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;YAChC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;YAC7B,UAAU,GAAG,IAAI,CAAC;SACrB;aAAM,IAAI,QAAQ,KAAK,IAAI,CAAC,OAAO,EAAE;YAClC,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;YAChC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9B,WAAW,GAAG,IAAI,CAAC;SACtB;aAAM;YACH,QAAQ,GAAG,SAAS,CAAC,YAAY,CAAC;SACrC;QAED,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YACnC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAChC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,OAAO,CAAC,CACvD,CAAC;YACF,IAAI,YAAY,GAAG,CAAC;gBAAE,MAAM,+BAA+B,CAAC;YAC5D,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC/B,SAAS,GAAG,EAAE,CAAC,OAAO,CAAC;YACvB,UAAU,GAAG,EAAE,CAAC,QAAQ,CAAC;SAC5B;QACD,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YACnC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CACjC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,QAAQ,CAAC,CACxD,CAAC;YACF,IAAI,aAAa,GAAG,CAAC;gBAAE,MAAM,gCAAgC,CAAC;YAC9D,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YAChC,UAAU,GAAG,EAAE,CAAC,OAAO,CAAC;YACxB,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC;SAC7B;;QAGD,MAAM,WAAW,GAAgB,EAAE,CAAC;QACpC,MAAM,iBAAiB,GAAgB,EAAE,CAAC;QAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAC/C,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;SAChD;QAED,MAAM,GAAG,GAAGJ,YAAU,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;QAE9C,MAAM,YAAY,GAAuB;YACrC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;YAC1B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;YAC5B,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,WAAW;YACX,iBAAiB;YACjB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,YAAY,EAAE,YAAY;YAC1B,aAAa,EAAE,aAAa;YAC5B,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC;YAC9B,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC;SACnC,CAAC;QAEF,OAAO,YAAY,CAAC;KACvB;IAED,sBAAsB,CAAC,YAAgC;;QAEnD,OAAO,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;KAC1D;IAED,kBAAkB,CACd,YAA0B,EAC1B,QAAmB;;;;QAKnB,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;YACpC,OAAO,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC1D;aAAM;YACH,OAAO,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC5D;KACJ;;IAGD,yBAAyB,CAAC,KAAa,EAAE,UAAqB;;QAE1D,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE;YACvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;SAC5C;aAAM;;YAEH,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;YACvD,CAAC,CAAC,OAAO,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;SACrC;KACJ;IAED,wBAAwB,CACpB,YAAgC,EAChC,MAAiB;;;;QAKjB,OAAOnB,0BAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,EAAE,CACpD,YAAY,CAAC,WAAW,EACxB,CAAC,CACJ,CAAC;KACL;IAED,sBAAsB,CAClB,YAAgC,EAChC,MAAiB;QAEjB,OAAOE,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;IAED,sBAAsB,CAClB,YAAgC,EAChC,MAAiB;QAEjB,OAAOG,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;IAED,wBAAwB,CACpB,YAAgC,EAChC,MAAiB;;;;QAKjB,OAAOJ,0BAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,EAAE,CACpD,YAAY,CAAC,UAAU,EACvB,CAAC,CACJ,CAAC;KACL;IAED,sBAAsB,CAClB,YAAgC,EAChC,MAAiB;QAEjB,OAAOE,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;IAED,sBAAsB,CAClB,YAAgC,EAChC,MAAiB;QAEjB,OAAOC,wBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;IAED,0CAA0C,CACtC,YAAgC,EAChC,MAAiB;QAEjB,OAAOE,4CAA0C,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KAC3E;IAED,wCAAwC,CACpC,YAAgC,EAChC,MAAiB;QAEjB,OAAOE,0CAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,wCAAwC,CACpC,YAAgC,EAChC,MAAiB;QAEjB,OAAOE,0CAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,0CAA0C,CACtC,YAAgC,EAChC,MAAiB;QAEjB,OAAOH,4CAA0C,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KAC3E;IAED,wCAAwC,CACpC,YAAgC,EAChC,MAAiB;QAEjB,OAAOE,0CAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,wCAAwC,CACpC,YAAgC,EAChC,MAAiB;QAEjB,OAAOE,0CAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,oDAAoD,CAChD,YAAgC,EAChC,MAAiB;QAEjB,OAAOC,sDAAoD,CACvD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAgC,EAChC,MAAiB;QAEjB,OAAOE,oDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAgC,EAChC,MAAiB;QAEjB,OAAOE,oDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,oDAAoD,CAChD,YAAgC,EAChC,MAAiB;QAEjB,OAAOH,sDAAoD,CACvD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAgC,EAChC,MAAiB;QAEjB,OAAOE,oDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAgC,EAChC,MAAiB;QAEjB,OAAOE,oDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,cAAc,CACV,YAAgC,EAChC,MAAiB;QAEjB,IAAI;;;YAGA,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAEpC,MAAM,GAAG,GAAGQ,YAAc,CAAC,eAAe,CACtC,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,YAAY,CAAC,YAAY,EACzB,YAAY,CAAC,aAAa,EAC1B,SAAS,EACT,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,mBAAmB,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAChD,OAAO,IAAI,CAAC;SACf;KACJ;IAED,cAAc,CACV,YAAgC,EAChC,MAAiB;QAEjB,IAAI;;;YAGA,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAEpC,MAAM,GAAG,GAAGA,YAAc,CAAC,eAAe,CACtC,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,YAAY,CAAC,YAAY,EACzB,YAAY,CAAC,aAAa,EAC1B,SAAS,EACT,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,mBAAmB,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAChD,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAgC,EAChC,MAAiB;QAEjB,IAAI;;;YAGA,MAAM,oBAAoB,GAAG,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;;YAEhE,MAAM,SAAS,GAAG,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBAClD,IAAI,CAAC,KAAK,YAAY,CAAC,YAAY;oBAAE,OAAO,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;;oBACzD,OAAO,IAAI,CAAC;aACpB,CAAC,CAAC;YAEH,MAAM,GAAG,GAAGA,YAAc,CAAC,6BAA6B,CACpD,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,SAAS,EACT,oBAAoB,EACpB,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,8BAA8B,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAgC,EAChC,MAAiB;QAEjB,IAAI;;;YAGA,MAAM,iBAAiB,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAC5C,MAAM,oBAAoB,GAAG,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YAE/D,MAAM,GAAG,GAAGA,YAAc,CAAC,4BAA4B,CACnD,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,YAAY,CAAC,aAAa,EAC1B,iBAAiB,EACjB,oBAAoB,EACpB,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,8BAA8B,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAgC,EAChC,MAAiB;QAEjB,IAAI;;;YAGA,MAAM,kBAAkB,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAC7C,MAAM,oBAAoB,GAAG,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;YAEhE,MAAM,GAAG,GAAGA,YAAc,CAAC,4BAA4B,CACnD,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,YAAY,CAAC,YAAY,EACzB,kBAAkB,EAClB,oBAAoB,EACpB,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,8BAA8B,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAgC,EAChC,MAAiB;QAEjB,IAAI;;;;YAIA,MAAM,UAAU,GAAG,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBACnD,IAAI,CAAC,KAAK,YAAY,CAAC,aAAa;oBAAE,OAAO,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;;oBAC1D,OAAO,IAAI,CAAC;aACpB,CAAC,CAAC;YACH,MAAM,oBAAoB,GAAG,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YAE/D,MAAM,GAAG,GAAGA,YAAc,CAAC,6BAA6B,CACpD,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,UAAU,EACV,oBAAoB,EACpB,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAEF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,8BAA8B,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC;SACf;KACJ;;;AC1hBL;SACgBzB,0BAAwB,CACpC,MAAiB,EACjB,YAAiC;;;IAIjC,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,CAAC,GAAG,iBAAiB,CACvB,YAAY,CAAC,UAAU,EACvB,YAAY,CAAC,qBAAqB,EAClC,YAAY,CAAC,WAAW,CAC3B,CAAC;IACF,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,OAAO,IAAI,CACP,EAAE;QACE,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,IAChD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;QACjB,IAAI,CAAC,GAAG,CACJ,EAAE;YACE,EAAE;YACF,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,IAChD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,CACxB;YACG,CAAC,CACZ,CAAC;AACN,CAAC;AAED;SACgBC,0BAAwB,CACpC,MAAiB,EACjB,YAAiC;;;IAIjC,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,CAAC,GAAG,iBAAiB,CACvB,YAAY,CAAC,UAAU,EACvB,YAAY,CAAC,qBAAqB,EAClC,YAAY,CAAC,WAAW,CAC3B,CAAC;IACF,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,OAAO,IAAI,CACP,CAAC,EAAE;QACC,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,IACjD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;QACjB,IAAI,CAAC,GAAG,CACJ,CAAC,EAAE;YACC,EAAE;YACF,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,IACjD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,CACxB;YACG,CAAC,CACZ,CAAC;AACN,CAAC;AAED;AACA;AACA;AAEA;AACA;SACgBK,4CAA0C,CACtD,MAAiB,EACjB,YAAiC;IAEjC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,CAAC,GAAG,iBAAiB,CACvB,YAAY,CAAC,UAAU,EACvB,YAAY,CAAC,qBAAqB,EAClC,YAAY,CAAC,WAAW,CAC3B,CAAC;IACF,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,OAAO,IAAI,CACP,CAAC;SACI,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,IACjD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;YAClB,UAAC,EAAE,GAAG,EAAE,GAAK,CAAC,CAAA;YACd,IAAI,CAAC,GAAG,CACJ,CAAC;gBACG,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC;oBACV,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC;oBACpB,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,IACZ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;oBAClB,UAAC,EAAE,GAAG,EAAE,GAAK,CAAC,CAAA,CACzB;gBACG,CAAC,CAAC,CACjB,CAAC;AACN,CAAC;AAED;AACA;SACgBC,4CAA0C,CACtD,MAAiB,EACjB,YAAiC;IAEjC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,CAAC,GAAG,iBAAiB,CACvB,YAAY,CAAC,UAAU,EACvB,YAAY,CAAC,qBAAqB,EAClC,YAAY,CAAC,WAAW,CAC3B,CAAC;IACF,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,OAAO,IAAI,CACP,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,IACjD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;QAClB,UAAC,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,CAAA;QACf,IAAI,CAAC,GAAG,CACJ,CAAC,CAAC;YACE,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,IACjD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;gBAClB,UAAC,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,CAAA,CAC1B;YACG,CAAC,CACZ,CAAC;AACN,CAAC;AAED;AACA;AACA;AAEA;AACA;SACgBK,sDAAoD,CAChE,MAAiB,EACjB,YAAiC;IAEjC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,CAAC,GAAG,iBAAiB,CACvB,YAAY,CAAC,UAAU,EACvB,YAAY,CAAC,qBAAqB,EAClC,YAAY,CAAC,WAAW,CAC3B,CAAC;IACF,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,OAAO,IAAI,CACP,EACI,CAAC,EACG,CAAC,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,IACjD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;SACjB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACjB,CAAC,GAAG,CAAC,CAAC;QACX,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,CACvB;QACG,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,CAAC,GAAG,CAAC,EAAC;YACjB,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,IAChD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;YACtB,CAAC;QACL,CAAC;YACG,IAAI,CAAC,GAAG,CACJ,CAAC,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC;gBACX,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC;gBACpB,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,IACZ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;iBACjB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;iBACjB,CAAC,GAAG,CAAC,CAAC;gBACP,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC;gBACpB,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,CAAC,GAAG,CAAC,EAAC;oBACjB,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC;wBACV,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC;wBACpB,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,IACZ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;oBACtB,CAAC,CACZ;QACT,UAAC,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,IACjD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;YAClB,UAAC,EAAE,GAAG,EAAE,GAAK,CAAC,CAAA;YACd,IAAI,CAAC,GAAG,CACJ,CAAC;gBACG,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC;oBACV,UAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC;oBACpB,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,IACZ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;oBAClB,UAAC,EAAE,GAAG,EAAE,GAAK,CAAC,CAAA,CACzB;gBACG,CAAC,GACL,CAAC,CAAA,CACR,CACJ,CAAC;AACN,CAAC;AAED;AACA;SACgBC,sDAAoD,CAChE,MAAiB,EACjB,YAAiC;IAEjC,MAAM,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1C,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC9C,MAAM,CAAC,GAAG,iBAAiB,CACvB,YAAY,CAAC,UAAU,EACvB,YAAY,CAAC,qBAAqB,EAClC,YAAY,CAAC,WAAW,CAC3B,CAAC;IACF,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,OAAO,IAAI,CACP,CAAC,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,IAClD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;SACjB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACjB,CAAC,GAAG,CAAC,CAAC;QACP,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC;QACrB,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,CAAC,GAAG,CAAC,EAAC;YAClB,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,IACjD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;YACtB,CAAC;QACL,CAAC;YACG,IAAI,CAAC,GAAG,CACJ,CAAC,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,IAClD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;iBACjB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;iBACjB,CAAC,GAAG,CAAC,CAAC;gBACP,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC;gBACrB,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,CAAC,GAAG,CAAC,EAAC;oBAClB,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC;wBACV,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC;wBACb,UAAC,CAAC,EAAE,GAAG,EAAE,IAAM,CAAC,GAAG,CAAC,EAAC,IACpB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;oBACtB,CAAC,CACZ,CACZ,CAAC;AACN,CAAC;SAEe,iBAAiB,CAC7B,UAAkB,EAClB,qBAA6B,EAC7B,WAAmB;IAEnB,IAAI,CAAC,GACD,qBAAqB,GAAG,UAAU;UAC5B,UAAU,GAAG,qBAAqB;UAClC,CAAC,CAAC;IACZ,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;IACpB,OAAO,CAAC,CAAC;AACb;;MCxMa,WAAW;IA+BpB,YACI,EAAU,EACV,OAAe,EACf,OAAe,EACf,WAAmB,EACnB,MAA0B,EAC1B,UAAoB,EACpB,UAAkB,EAClB,WAAmB,EACnB,cAAsB,EACtB,SAAiB;QAxCrB,aAAQ,GAAc,SAAS,CAAC,OAAO,CAAC;QA0CpC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;KAClC;IAtCD,OAAO,QAAQ,CAAC,IAAsB;QAClC,OAAO,IAAI,WAAW,CAClB,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,SAAS,CACjB,CAAC;KACL;IA2BD,wBAAwB,CAAC,SAAiB;QACtC,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC;KAC1C;IAED,cAAc,CAAC,IAAkB;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC5B;IAED,iBAAiB,CAAC,OAAe,EAAE,QAAgB;QAC/C,IAAI,QAAmB,CAAC;QACxB,IAAI,EAAoB,CAAC;QACzB,IAAI,EAAoB,CAAC;QACzB,IAAI,SAAiB,CAAC;QACtB,IAAI,UAAkB,CAAC;QACvB,IAAI,WAA4B,CAAC;QACjC,IAAI,UAA2B,CAAC;QAChC,IAAI,YAAoB,CAAC;QACzB,IAAI,aAAqB,CAAC;;QAG1B,IAAI,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE;YACzB,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;YAChC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;YAC7B,UAAU,GAAG,IAAI,CAAC;SACrB;aAAM,IAAI,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;YACjC,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;YAChC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9B,WAAW,GAAG,IAAI,CAAC;SACtB;aAAM;YACH,QAAQ,GAAG,SAAS,CAAC,YAAY,CAAC;SACrC;QAED,IAAI,QAAQ,IAAI,SAAS,CAAC,UAAU,EAAE;YAClC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAChC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,OAAO,CAAC,CACvD,CAAC;YACF,IAAI,YAAY,GAAG,CAAC;gBAAE,MAAM,+BAA+B,CAAC;YAC5D,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC/B,SAAS,GAAG,EAAE,CAAC,OAAO,CAAC;YACvB,UAAU,GAAG,EAAE,CAAC,QAAQ,CAAC;SAC5B;QACD,IAAI,QAAQ,IAAI,SAAS,CAAC,UAAU,EAAE;YAClC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CACjC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,QAAQ,CAAC,CACxD,CAAC;YACF,IAAI,aAAa,GAAG,CAAC;gBAAE,MAAM,gCAAgC,CAAC;YAC9D,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YAChC,UAAU,GAAG,EAAE,CAAC,OAAO,CAAC;YACxB,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC;SAC7B;;QAGD,IAAI,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,IAAI,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,OAAO,IAAI,IAAI,CAAC,cAAc,EAAE;YAChC,aAAa,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SAC9D;aAAM,IAAI,QAAQ,IAAI,IAAI,CAAC,cAAc,EAAE;YACxC,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SAChE;QACD,MAAM,YAAY,GAAwB;YACtC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,QAAQ;YAClB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC;YAC9B,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC;YAChC,SAAS,EAAE,aAAa;YACxB,UAAU,EAAE,cAAc;YAC1B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAC3B,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;YACnC,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;SACpD,CAAC;QAEF,OAAO,YAAY,CAAC;KACvB;;;;;IAMD,sBAAsB,CAAC,YAAiC;;;;QAIpD,OAAO,YAAY,CAAC,UAAU,CAAC;KAClC;IAED,kBAAkB,CACd,YAAiC,EACjC,QAAmB;QAEnB,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;;;YAGpC,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC7C,MAAM,EAAE,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC9C,MAAM,CAAC,GAAG,iBAAiB,CACvB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,WAAW,CACnB,CAAC;YACF,OAAO,IAAI,CAAC,UAAC,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,GAAG,SAAA,EAAE,GAAK,CAAC,GAAG,CAAC,EAAC,IAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,GAAG,EAAE,CAAC,CAAC;SACtE;aAAM;YACH,OAAO,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;SACvD;KACJ;;IAGD,yBAAyB,CAAC,KAAa,EAAE,UAAqB;;QAE1D,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE;YACvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;SAC5C;aAAM;;YAEH,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;YACvD,CAAC,CAAC,OAAO,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;SACrC;KACJ;IAED,wBAAwB,CACpB,YAAiC,EACjC,MAAiB;QAEjB,YAAY,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAChE,OAAOb,0BAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzD;IAED,sBAAsB,CAClB,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;IAED,sBAAsB,CAClB,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;IAED,wBAAwB,CACpB,YAAiC,EACjC,MAAiB;QAEjB,YAAY,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAChE,OAAOC,0BAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzD;IAED,sBAAsB,CAClB,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;IAED,sBAAsB,CAClB,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;IAED,0CAA0C,CACtC,YAAiC,EACjC,MAAiB;QAEjB,YAAY,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAChE,OAAOK,4CAA0C,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KAC3E;IAED,wCAAwC,CACpC,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;IAED,wCAAwC,CACpC,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;IAED,0CAA0C,CACtC,YAAiC,EACjC,MAAiB;QAEjB,YAAY,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAChE,OAAOC,4CAA0C,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KAC3E;IAED,wCAAwC,CACpC,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;IAED,wCAAwC,CACpC,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;IAED,oDAAoD,CAChD,YAAiC,EACjC,MAAiB;QAEjB,YAAY,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAChE,OAAOK,sDAAoD,CACvD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;IAED,kDAAkD,CAC9C,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;IAED,oDAAoD,CAChD,YAAiC,EACjC,MAAiB;QAEjB,YAAY,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAChE,OAAOC,sDAAoD,CACvD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;IAED,kDAAkD,CAC9C,YAAiC,EACjC,MAAiB;QAEjB,MAAM,wDAAwD,CAAC;KAElE;;;ACzXL;AACA;AAEA;AAEA;;;;;;;;SAQgB,UAAU,CACtB,GAAc;AACd,QAAqB;;IAErB,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;IACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;QACjC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/B;IACD,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE;QACd,OAAO,IAAI,CAAC;KACf;IACD,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,IAAI,GAAG,GAAG,GAAG,CAAC;IACd,MAAM,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC,SAAA,UAAU,EAAI,UAAU,CAAA,CAAC,CAAC;IAE1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;;YAEjC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAC3D;QACD,OAAO,GAAG,GAAG,CAAC;;QAEd,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;aACjB,KAAK,CAAC,GAAG,CAAC;aACV,KAAK,CAAC,GAAG,CAAC;aACV,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACzC,GAAG,CACA,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACf,KAAK,CAAC,GAAG,CAAC;aACV,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAC/C,CAAC;;QAEN,IAAI,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;YACjB,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAA,EAAE,EAAI,CAAC,EAAE,CAAA,CAAC,CAAC,EAAE;gBACxC,MAAM;aACT;SACJ;aAAM,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAA,EAAE,EAAI,CAAC,EAAE,CAAA,CAAC,CAAC,EAAE;YAC/C,MAAM;SACT;KACJ;;IAED,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;SAWgB,wBAAwB,CAAC,MAAM,EAAE,YAAY;;;IAGzD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,IAAI,aAAa,GAAG,MAAM,CAAC;IAC3B,aAAa,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;IAGxD,MAAM,GAAG,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,GAAG,CAAC;IACZ,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACzC,IAAI,OAAO,GAAG,GAAG,CAAC;IAClB,IAAI,CAAC,GAAG,IAAI,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAEpC,IAAI,CAAC,IAAI,YAAY,EAAE;YACnB,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACvC;aAAM,IAAI,CAAC,IAAI,aAAa,EAAE;YAC3B,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;SACnB;aAAM;YACH,SAAS;SACZ;QACD,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;QAElB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC3B;;IAGD,MAAM,CAAC,GAAG,uBAAuB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;;IAI7D,OAAO,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC;AAED;AACA;AACA;;;;;;;;;;;SAWgB,wBAAwB,CAAC,MAAM,EAAE,YAAY;;;IAGzD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,cAAc,GAAG,MAAM,CAAC;;IAE9B,MAAM,GAAG,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,GAAG,CAAC;IACZ,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACzC,IAAI,OAAO,GAAG,GAAG,CAAC;IAClB,IAAI,CAAC,GAAG,IAAI,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAEpC,IAAI,CAAC,IAAI,aAAa,EAAE;YACpB,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;SACzC;aAAM,IAAI,CAAC,IAAI,YAAY,EAAE;YAC1B,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;SACnB;aAAM;YACH,SAAS;SACZ;QACD,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;QAElB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC3B;;IAGD,MAAM,CAAC,GAAG,uBAAuB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;IAG7D,OAAO,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACnE,CAAC;AAED;AACA;AACA,SAAS,iDAAiD,CACtD,GAAc,EACd,QAAqB,EACrB,GAAc,EACd,UAAkB;IAElB,IAAI,CAAC,GAAG,GAAG,CAAC;IACZ,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;IACnC,IAAI,KAAK,GAAG,GAAG,CAAC;IAChB,IAAI,CAAC,GAAG,IAAI,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;QACjC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,UAAU,EAAE;YACjB,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;SACnB;aAAM;YACH,SAAS;SACZ;QACD,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;QAElB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC3B;;IAGD,OAAO,uBAAuB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5D,CAAC;AAED;SACgB,uBAAuB,CACnC,GAAc,EACd,GAAc,EACd,GAAc,EACd,OAAkB,EAClB,CAAY;;IAGZ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;IAExD,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;;;;IAKhD,IAAI,CAAC,CAAC;IACN,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;QACZ,CAAC,GAAG,GAAG;aACF,KAAK,CAAC,CAAC,CAAC;aACR,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;KACvE;SAAM;QACH,CAAC,GAAG,CAAC;aACA,KAAK,CAAC,GAAG,CAAC;aACV,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACnB,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAChB,IAAI,EAAE;aACN,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;KAC5B;;IAED,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC;AAED;;;;SAIgB,sBAAsB,CAAC,MAAM,EAAE,YAAY;;;IAGvD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GACzD,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,aAAa,GAAG,MAAM,CAAC;;IAE7B,MAAM,gBAAgB,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;;IAInD,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/C;;IAGD,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC9D,MAAM,2BAA2B,GAAG,QAAQ,CAAC,YAAY,CAAC;SACrD,IAAI,CAAC,aAAa,CAAC;SACnB,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IACjC,MAAM,oBAAoB,GAAG,GAAG,CAAC,IAAI,CACjC,2BAA2B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAC9D,CAAC;;;IAIF,MAAM,4BAA4B,GAAG,2BAA2B;SAC3D,KAAK,CAAC,oBAAoB,CAAC;SAC3B,GAAG,CAAC,2BAA2B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAEjD,MAAM,gBAAgB,GAAG,aAAa,CAAC,KAAK,CACxC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CACzD,CAAC;IACF,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;;IAGvE,MAAM,YAAY,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAE/C,OAAO,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3E,CAAC;AAED;;;;;SAKgB,sBAAsB,CAAC,MAAM,EAAE,YAAY;;;IAGvD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GACzD,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,YAAY,GAAG,MAAM,CAAC;;;;;IAO5B,MAAM,gBAAgB,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;IAEnD,MAAM,YAAY,GAAG,UAAU;SAC1B,IAAI,CAAC,YAAY,CAAC;SAClB,GAAG,CAAC,UAAU,CAAC;SACf,KAAK,CAAC,gBAAgB,CAAC,CAAC;;;IAI7B,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/C;;IAGD,MAAM,oBAAoB,GACtB,iDAAiD,CAC7C,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,YAAY,CACf,CAAC;IACN,MAAM,gBAAgB,GAAG,oBAAoB,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;;IAG5E,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC9D,MAAM,4BAA4B,GAAG,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;;IAG9D,OAAO,gBAAgB,CAAC,GAAG,CACvB,GAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CACzD,CAAC;AACN,CAAC;AAED;;;;SAIgB,sBAAsB,CAAC,MAAM,EAAE,YAAY;;;IAGvD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GACzD,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,cAAc,GAAG,MAAM,CAAC;;IAG9B,MAAM,gBAAgB,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;;IAInD,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/C;;IAGD,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC/D,MAAM,2BAA2B,GAAG,QAAQ,CAAC,aAAa,CAAC;SACtD,KAAK,CAAC,cAAc,CAAC;SACrB,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;IAClC,MAAM,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAClC,GAAG,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAC9D,CAAC;;IAGF,MAAM,4BAA4B,GAAG,oBAAoB;SACpD,KAAK,CAAC,2BAA2B,CAAC;SAClC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;IAEjD,MAAM,kBAAkB,GAAG,cAAc,CAAC,GAAG,CACzC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CACzD,CAAC;IACF,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;;IAG5E,MAAM,YAAY,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;IAG/C,OAAO,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC;AAED;;;;;SAKgB,sBAAsB,CAAC,MAAM,EAAE,YAAY;;;IAGvD,IAAI,MAAM,CAAC,MAAM,EAAE;QAAE,OAAO,MAAM,CAAC;IACnC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GACzD,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,WAAW,GAAG,MAAM,CAAC;;;;;IAM3B,MAAM,gBAAgB,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;IAEnD,MAAM,YAAY,GAAG,SAAS;SACzB,KAAK,CAAC,WAAW,CAAC;SAClB,GAAG,CAAC,SAAS,CAAC;SACd,KAAK,CAAC,gBAAgB,CAAC,CAAC;;;IAI7B,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/C;;IAGD,MAAM,oBAAoB,GACtB,iDAAiD,CAC7C,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,CAChB,CAAC;IACN,MAAM,kBAAkB,GACpB,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;;IAGxD,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC/D,MAAM,4BAA4B,GAAG,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;;IAG9D,OAAO,kBAAkB,CAAC,KAAK,CAC3B,GAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CACzD,CAAC;AACN,CAAC;AAED;AACA;AACA;SAEgB,gBAAgB,CAC5B,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,mBAAmB,EACnB,OAAO;IAEP,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;IACnC,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACpC,IAAI,CAAC,GAAG,IAAI,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;QACjC,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,IAAI,aAAa,EAAE;YACzC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3B;KACJ;IACD,MAAM,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;IACjC,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC;IAClC,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,SAAA,UAAU,EAAI,UAAU,CAAA,CAAC,CAAC;IAC9C,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClD,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,IAAI,GAAG,CAAC;IACR,IAAI,mBAAmB,EAAE;QACrB,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;KAClC;SAAM;QACH,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,SAAS,CAAC;QACd,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;aACd,KAAK,CAAC,SAAS,CAAC;aAChB,KAAK,CAAC,SAAS,CAAC;aAChB,KAAK,CAAC,UAAU,CAAC;aACjB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACzC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACtD,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACjC,IAAI,OAAO,EAAE;YACT,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SAC7C;KACJ;IACD,OAAO,GAAG,CAAC;AACf,CAAC;SAEe,mBAAmB,CAC/B,GAAG,EACH,QAAQ,EACR,SAAS,EACT,YAAY,EACZ,mBAAmB,EACnB,UAAU,EACV,OAAO;IAEP,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;IACnC,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACpC,IAAI,CAAC,GAAG,IAAI,CAAC;IACb,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;QACjC,IAAI,CAAC,IAAI,YAAY,EAAE;YACnB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YACxB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD;KACJ;IACD,MAAM,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;IACjC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,SAAA,UAAU,EAAI,UAAU,CAAA,CAAC,CAAC;IAClD,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC/B,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;SACpB,KAAK,CAAC,KAAK,CAAC;SACZ,KAAK,CAAC,CAAC,CAAC;SACR,IAAI,CAAC,IAAI,CAAC;SACV,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,MAAM,eAAe,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAC9C,IAAI,GAAG,CAAC;IACR,IAAI,mBAAmB,EAAE;QACrB,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAChE;SAAM;QACH,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACxC,MAAM,UAAU,GAAG,KAAK,CAAC;QACzB,MAAM,gBAAgB,GAAG,UAAU,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;QACvD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,UAAU,EAAE;YACZ,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChE,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvD,MAAM,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACxC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAC7D,IAAI,OAAO,EAAE;gBACT,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrD,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;aAClD;SACJ;aAAM;YACH,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;iBACR,KAAK,CAAC,UAAU,CAAC;iBACjB,GAAG,CAAC,SAAS,CAAC;iBACd,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxD,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YACtC,IAAI,OAAO,EAAE;gBACT,GAAG,GAAG,GAAG;qBACJ,KAAK,CAAC,SAAS,CAAC;qBAChB,GAAG,CAAC,eAAe,CAAC;qBACpB,KAAK,CAAC,SAAS,CAAC;qBAChB,GAAG,CAAC,CAAC,CAAC,CAAC;aACf;SACJ;KACJ;IACD,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;AACA;AAEA;AACA;SACgB,0CAA0C,CACtD,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAChD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CACnC,CAAC;IACF,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnD,wBAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CACjD,CAAC;IACF,IAAI,GAAG,GAAG,gBAAgB,CACtB,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,IAAI,EACJ,KAAK,CACR,CAAC;IACF,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7C,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;SACgB,0CAA0C,CACtD,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,GAAG,wBAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,KAAK,CAC5D,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CACrB,CAAC;IACF,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAChE,IAAI,GAAG,GAAG,gBAAgB,CACtB,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,IAAI,EACJ,IAAI,CACP,CAAC;IACF,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7C,OAAO,GAAG,CAAC;AACf,CAAC;AAED,SAAS,UAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO;IAC7C,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/C;IACD,MAAM,aAAa,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC5D,MAAM,4BAA4B,GAAG,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IAC9D,OAAO,GAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAClE,CAAC;AAED;AACA;SACgB,wCAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IAC9D,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAChD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAC1B,CAAC;IACF,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;IAC3E,IAAI,GAAG,GAAG,mBAAmB,CACzB,GAAG,EACH,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,IAAI,EACJ,IAAI,EACJ,KAAK,CACR,CAAC;IACF,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;SACgB,wCAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,GAAG,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IACzD,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IAC9D,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IAC3E,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrC,IAAI,GAAG,GAAG,mBAAmB,CACzB,GAAG,EACH,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,IAAI,EACJ,IAAI,EACJ,IAAI,CACP,CAAC;IACF,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;SACgB,wCAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,IAAI,GAAG,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC1D,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC/D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CACtB,CAAC;IACF,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACpC,MAAM,GAAG,GAAG,mBAAmB,CAC3B,GAAG,EACH,QAAQ,EACR,SAAS,EACT,aAAa,EACb,IAAI,EACJ,KAAK,EACL,KAAK,CACR,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACjB,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;SACgB,wCAAwC,CACpD,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC/D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnD,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CACxB,CAAC;IACF,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;IAC1E,MAAM,GAAG,GAAG,mBAAmB,CAC3B,GAAG,EACH,QAAQ,EACR,SAAS,EACT,aAAa,EACb,IAAI,EACJ,KAAK,EACL,IAAI,CACP,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACjB,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;AACA;AAEA;AACA;SACgB,oDAAoD,CAChE,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAChD,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CACnC,CAAC;IACF,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnD,wBAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CACjD,CAAC;IACF,OAAO,gBAAgB,CACnB,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,KAAK,EACL,KAAK,CACR,CAAC;AACN,CAAC;AAED;AACA;SACgB,oDAAoD,CAChE,MAAM,EACN,YAAY;IAEZ,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,GAC5D,YAAY,CAAC;IACjB,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,GAAG,wBAAwB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,KAAK,CAC5D,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CACrB,CAAC;IACF,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAChE,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,OAAO,gBAAgB,CACnB,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,KAAK,EACL,IAAI,CACP,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACrB,CAAC;AAED;AACA;SACgB,kDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IAC9D,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAChD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAC1B,CAAC;IACF,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;IAC3E,MAAM,GAAG,GAAG,mBAAmB,CAC3B,GAAG,EACH,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,KAAK,EACL,IAAI,EACJ,KAAK,CACR,CAAC;IACF,OAAO,GAAG,CAAC;AACf,CAAC;AAED;AACA;SACgB,kDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,GAAG,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IACzD,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IAC9D,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IAC3E,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrC,OAAO,mBAAmB,CACtB,GAAG,EACH,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,KAAK,EACL,IAAI,EACJ,IAAI,CACP,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACrB,CAAC;AAED;AACA;SACgB,kDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,IAAI,GAAG,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC1D,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC/D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CACtB,CAAC;IACF,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACpC,MAAM,GAAG,GAAG,mBAAmB,CAC3B,GAAG,EACH,QAAQ,EACR,SAAS,EACT,aAAa,EACb,KAAK,EACL,KAAK,EACL,KAAK,CACR,CAAC;IACF,OAAO,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC9B,CAAC;AAED;AACA;SACgB,kDAAkD,CAC9D,MAAM,EACN,YAAY;IAEZ,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,GAAG,YAAY,CAAC;IAC3E,MAAM,QAAQ,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;IAClC,MAAM,GAAG,GAAG,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IACzD,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC/D,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CACnD,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CACxB,CAAC;IACF,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,MAAM,GAAG,GAAG,mBAAmB,CAC3B,GAAG,EACH,QAAQ,EACR,SAAS,EACT,aAAa,EACb,KAAK,EACL,KAAK,EACL,IAAI,CACP,CAAC;IACF,OAAO,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC;;MC5zBa,cAAc;IA4BvB,YACI,EAAU,EACV,OAAe,EACf,GAAW,EACX,OAAe,EACf,WAAmB,EACnB,MAA6B,EAC7B,UAAoB;QAlCxB,aAAQ,GAAc,SAAS,CAAC,UAAU,CAAC;QAU3C,kBAAa,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,iBAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,kBAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAwBtB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACzD;IA9BD,OAAO,QAAQ,CAAC,IAAsB;QAClC,OAAO,IAAI,cAAc,CACrB,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,UAAU,CAClB,CAAC;KACL;IAsBD,cAAc,CAAC,IAAkB;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC5B;IAED,iBAAiB,CACb,OAAe,EACf,QAAgB;QAEhB,IAAI,QAAmB,CAAC;QACxB,IAAI,EAAuB,CAAC;QAC5B,IAAI,EAAuB,CAAC;QAC5B,IAAI,SAAoB,CAAC;QACzB,IAAI,UAAqB,CAAC;QAC1B,IAAI,WAA4B,CAAC;QACjC,IAAI,UAA2B,CAAC;QAChC,IAAI,YAAoB,CAAC;QACzB,IAAI,aAAqB,CAAC;QAC1B,IAAI,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;QAGhC,IAAI,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;YAC1B,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;YAChC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACnC,UAAU,GAAG,IAAI,CAAC;SACrB;aAAM,IAAI,QAAQ,KAAK,IAAI,CAAC,OAAO,EAAE;YAClC,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;YAChC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACpC,WAAW,GAAG,IAAI,CAAC;SACtB;aAAM;YACH,QAAQ,GAAG,SAAS,CAAC,YAAY,CAAC;SACrC;QAED,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YACnC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAChC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,OAAO,CAAC,CACvD,CAAC;YACF,IAAI,YAAY,GAAG,CAAC;gBAAE,MAAM,+BAA+B,CAAC;YAC5D,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;;YAE/B,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;YACvD,UAAU,GAAG,EAAE,CAAC,QAAQ,CAAC;YACzB,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;SACzC;QACD,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YACnC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CACjC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,QAAQ,CAAC,CACxD,CAAC;YACF,IAAI,aAAa,GAAG,CAAC;gBAAE,MAAM,gCAAgC,CAAC;YAC9D,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;;YAEhC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;YACxD,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC;YAC1B,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;SAC1C;;QAGD,MAAM,WAAW,GAAgB,EAAE,CAAC;QACpC,MAAM,iBAAiB,GAAgB,EAAE,CAAC;QAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;YAEzC,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;iBACzC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;iBACrC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;SAChD;QAED,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;QAE9C,MAAM,YAAY,GAA2B;YACzC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,SAAS;YACpB,UAAU,EAAE,UAAU;YACtB,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,WAAW;YACX,iBAAiB;YACjB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,YAAY,EAAE,YAAY;YAC1B,aAAa,EAAE,aAAa;YAC5B,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC;YAC9B,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC;YAChC,gBAAgB;YAChB,iBAAiB;SACpB,CAAC;QAEF,OAAO,YAAY,CAAC;KACvB;IAED,sBAAsB,CAAC,YAAoC;;QAEvD,OAAO,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;KAC1D;IAED,kBAAkB,CACd,YAAoC,EACpC,QAAmB;;;;;QAMnB,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;YACpC,OAAO,YAAY,CAAC,SAAS;iBACxB,GAAG,CAAC,YAAY,CAAC,gBAAgB,CAAC;iBAClC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACjC;aAAM;YACH,OAAO,YAAY,CAAC,UAAU;iBACzB,GAAG,CAAC,YAAY,CAAC,iBAAiB,CAAC;iBACnC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAClC;KACJ;;IAGD,yBAAyB,CAAC,KAAa,EAAE,UAAqB;;QAE1D,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE;YACvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;SAC5C;aAAM;;YAEH,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;YACvD,CAAC,CAAC,OAAO,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;SACrC;KACJ;IAED,wBAAwB,CACpB,YAAoC,EACpC,MAAiB;;;;QAKjB,MAAM,GAAG,GAAG,wBAAwB,CAChC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAC3C,YAAY,CACf,CAAC,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAClC,OAAO,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;KAClD;IAED,sBAAsB,CAClB,YAAoC,EACpC,MAAiB;QAEjB,OAAO,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;IAED,sBAAsB,CAClB,YAAoC,EACpC,MAAiB;QAEjB,OAAO,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;IAED,wBAAwB,CACpB,YAAoC,EACpC,MAAiB;;;;QAKjB,MAAM,GAAG,GAAG,wBAAwB,CAChC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAC5C,YAAY,CACf,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAEjC,OAAO,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;KACjD;IAED,sBAAsB,CAClB,YAAoC,EACpC,MAAiB;QAEjB,OAAO,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;IAED,sBAAsB,CAClB,YAAoC,EACpC,MAAiB;QAEjB,OAAO,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACvD;IAED,0CAA0C,CACtC,YAAoC,EACpC,MAAiB;QAEjB,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QACpE,MAAM,MAAM,GAAG,0CAA0C,CACrD,eAAe,EACf,YAAY,CACf,CAAC;QACF,OAAO,MAAM,CAAC;KACjB;IAED,wCAAwC,CACpC,YAAoC,EACpC,MAAiB;QAEjB,OAAO,wCAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,wCAAwC,CACpC,YAAoC,EACpC,MAAiB;QAEjB,OAAO,wCAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,0CAA0C,CACtC,YAAoC,EACpC,MAAiB;QAEjB,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QACrE,MAAM,MAAM,GAAG,0CAA0C,CACrD,eAAe,EACf,YAAY,CACf,CAAC;QACF,OAAO,MAAM,CAAC;KACjB;IAED,wCAAwC,CACpC,YAAoC,EACpC,MAAiB;QAEjB,OAAO,wCAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,wCAAwC,CACpC,YAAoC,EACpC,MAAiB;QAEjB,OAAO,wCAAwC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACzE;IAED,oDAAoD,CAChD,YAAoC,EACpC,MAAiB;QAEjB,OAAO,oDAAoD,CACvD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAoC,EACpC,MAAiB;QAEjB,OAAO,kDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAoC,EACpC,MAAiB;QAEjB,OAAO,kDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,oDAAoD,CAChD,YAAoC,EACpC,MAAiB;QAEjB,OAAO,oDAAoD,CACvD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAoC,EACpC,MAAiB;QAEjB,OAAO,kDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,kDAAkD,CAC9C,YAAoC,EACpC,MAAiB;QAEjB,OAAO,kDAAkD,CACrD,MAAM,EACN,YAAY,CACf,CAAC;KACL;IAED,cAAc,CACV,YAAoC,EACpC,MAAiB;QAEjB,IAAI;;;YAGA,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YACpC,MAAM,eAAe,GAAG,SAAS,CAAC,KAAK,CACnC,YAAY,CAAC,gBAAgB,CAChC,CAAC;YAEF,MAAM,GAAG,GAAGY,YAAc,CAAC,eAAe,CACtC,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,YAAY,CAAC,YAAY,EACzB,YAAY,CAAC,aAAa,EAC1B,eAAe,EACf,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAEF,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAC9D;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,mBAAmB,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAChD,OAAO,IAAI,CAAC;SACf;KACJ;IAED,cAAc,CACV,YAAoC,EACpC,MAAiB;QAEjB,IAAI;;;YAGA,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YACpC,MAAM,eAAe,GAAG,SAAS,CAAC,KAAK,CACnC,YAAY,CAAC,iBAAiB,CACjC,CAAC;YAEF,MAAM,GAAG,GAAGA,YAAc,CAAC,eAAe,CACtC,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,YAAY,CAAC,YAAY,EACzB,YAAY,CAAC,aAAa,EAC1B,eAAe,EACf,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAC7D;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,mBAAmB,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAChD,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAoC,EACpC,MAAiB;QAEjB,IAAI;;;YAGA,MAAM,oBAAoB,GAAG,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;;YAEhE,MAAM,SAAS,GAAG,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBAClD,IAAI,CAAC,KAAK,YAAY,CAAC,YAAY;oBAAE,OAAO,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;;oBACzD,OAAO,IAAI,CAAC;aACpB,CAAC,CAAC;YAEH,MAAM,GAAG,GAAGA,YAAc,CAAC,6BAA6B,CACpD,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,SAAS,EACT,oBAAoB,EACpB,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,8BAA8B,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAoC,EACpC,MAAiB;QAEjB,IAAI;;;YAGA,MAAM,iBAAiB,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAC5C,MAAM,oBAAoB,GAAG,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YAE/D,MAAM,GAAG,GAAGA,YAAc,CAAC,4BAA4B,CACnD,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,YAAY,CAAC,aAAa,EAC1B,iBAAiB,EACjB,oBAAoB,EACpB,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,8BAA8B,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAoC,EACpC,MAAiB;QAEjB,IAAI;;;YAGA,MAAM,kBAAkB,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAC7C,MAAM,oBAAoB,GAAG,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;YAEhE,MAAM,GAAG,GAAGA,YAAc,CAAC,4BAA4B,CACnD,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,YAAY,CAAC,YAAY,EACzB,kBAAkB,EAClB,oBAAoB,EACpB,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAGF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,8BAA8B,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC;SACf;KACJ;IAED,yBAAyB,CACrB,YAAoC,EACpC,MAAiB;QAEjB,IAAI;;;;YAIA,MAAM,UAAU,GAAG,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBACnD,IAAI,CAAC,KAAK,YAAY,CAAC,aAAa;oBAAE,OAAO,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;;oBAC1D,OAAO,IAAI,CAAC;aACpB,CAAC,CAAC;YACH,MAAM,oBAAoB,GAAG,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YAE/D,MAAM,GAAG,GAAGA,YAAc,CAAC,6BAA6B,CACpD,IAAI,CAAC,WAAW,EAChB,YAAY,CAAC,iBAAiB,EAC9B,UAAU,EACV,oBAAoB,EACpB,YAAY,CAAC,aAAa,CAC7B,CAAC;;YAEF,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1B;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,8BAA8B,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC;SACf;KACJ;;;SCzjBW,YAAY,CACxB,IAAsB,EACtB,qBAAqB,GAAG,CAAC;IAEzB,IAAI,OAAgD,CAAC;IACrD,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU;QAAE,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACnE,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ;QAAE,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACpE,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;QAClC,OAAO,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,CAAC;KAC3D;SAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,YAAY,EAAE;QACvC,OAAO,GAAG,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC3C;SAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,wBAAwB,EAAE;;;QAGnD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI;YAAE,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;YAChE,OAAO,SAAS,CAAC;KACzB;SAAM;QACH,OAAO,CAAC,KAAK,CACT,4CAA4C,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,EAAE,CACzE,CAAC;QACF,OAAO,SAAS,CAAC;KACpB;IACD,OAAO,OAAO,CAAC;AACnB,CAAC;AAED;SACgB,mBAAmB,CAC/B,IAAc,EACd,YAA0B,EAC1B,QAAmB,EACnB,MAAiB;IAEjB,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;;IAGvC,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;QACpC,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE;YACjC,OAAO,IAAI,CAAC;SACf;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,YAAY,EAAE;YAC5C,OAAO,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAC9D;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAC5D;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAC5D;KACJ;SAAM;QACH,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE;YAClC,OAAO,IAAI,CAAC;SACf;aAAM,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;YAC5C,OAAOlE,UAAQ,CAAC;SACnB;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,YAAY,EAAE;YAC5C,OAAO,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAC9D;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAC5D;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAC5D;KACJ;AACL;;SC3DgB,8BAA8B,CAC1C,KAAgB,EAChB,QAAgB;IAEhB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,EAAE,CAAC;IAClC,MAAM,YAAY,GAAG,EAAE,CAAC;IACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;QAC/B,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE;YAClB,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACzC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAClC;KACJ;IACD,OAAO,YAAY,CAAC;AACxB,CAAC;SAEe,4BAA4B,CACxC,KAAqB,EACrB,IAAa,EACb,QAAmB,EACnB,MAAiB;IAEjB,IAAI,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE;;;QAG1B,OAAO,4BAA4B,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;KAC/D;IACD,MAAM,gBAAgB,GAAG,0BAA0B,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC5E,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;QACpC,OAAO,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;KACvC;SAAM;QACH,OAAO,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KACvC;AACL,CAAC;SAEe,0BAA0B,CACtC,IAAa,EACb,QAAmB,EACnB,MAAiB;IAEjB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;;IAIzB,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;QAC7B,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;YACpC,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAOA,UAAQ,CAAC;SACnB;KACJ;IACD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACvC,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;QAC1B,OAAO,mBAAmB,CACtB,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;KACL;SAAM,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;QACjC,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;;YAEpC,MAAM,iBAAiB,GAAG,mBAAmB,CACzC,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;YACF,OAAO,mBAAmB,CACtB,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,iBAAiB,CACpB,CAAC;SACL;aAAM;;YAEH,MAAM,iBAAiB,GAAG,mBAAmB,CACzC,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;YACF,OAAO,mBAAmB,CACtB,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,iBAAiB,CACpB,CAAC;SACL;KACJ;SAAM;QACH,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;KAChE;AACL,CAAC;SAEe,4BAA4B,CACxC,IAAa,EACb,QAAmB,EACnB,MAAiB;IAEjB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACzB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACvC,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;QAC1B,OAAO,qBAAqB,CACxB,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;KACL;SAAM,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;QACjC,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;YACpC,MAAM,iBAAiB,GAAG,mBAAmB,CACzC,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;YACF,MAAM,mBAAmB,GAAG,qBAAqB,CAC7C,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;YACF,MAAM,mBAAmB,GAAG,qBAAqB,CAC7C,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,iBAAiB,CACpB,CAAC;YACF,OAAO,mBAAmB,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACzD;aAAM;YACH,MAAM,iBAAiB,GAAG,mBAAmB,CACzC,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;YACF,MAAM,mBAAmB,GAAG,qBAAqB,CAC7C,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,iBAAiB,CACpB,CAAC;YACF,MAAM,mBAAmB,GAAG,qBAAqB,CAC7C,KAAK,CAAC,CAAC,CAAC,EACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;YACF,OAAO,mBAAmB,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACzD;KACJ;SAAM;QACH,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;KAChE;AACL,CAAC;AAED;SACgB,qBAAqB,CACjC,IAAc,EACd,YAA0B,EAC1B,QAAmB,EACnB,MAAiB;IAEjB,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;;IAGvC,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;QACpC,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE;YACjC,OAAO,IAAI,CAAC;SACf;KACJ;SAAM;QACH,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE;YAClC,OAAO,IAAI,CAAC;SACf;QACD,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC;YAAE,OAAOA,UAAQ,CAAC;KAC5D;IACD,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;QACpC,IAAI,QAAQ,KAAK,SAAS,CAAC,YAAY,EAAE;YACrC,OAAO,IAAI,CAAC,0CAA0C,CAClD,YAAY,EACZ,MAAM,CACT,CAAC;SACL;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,wCAAwC,CAChD,YAAY,EACZ,MAAM,CACT,CAAC;SACL;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,wCAAwC,CAChD,YAAY,EACZ,MAAM,CACT,CAAC;SACL;KACJ;SAAM;QACH,IAAI,QAAQ,KAAK,SAAS,CAAC,YAAY,EAAE;YACrC,OAAO,IAAI,CAAC,0CAA0C,CAClD,YAAY,EACZ,MAAM,CACT,CAAC;SACL;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,wCAAwC,CAChD,YAAY,EACZ,MAAM,CACT,CAAC;SACL;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,wCAAwC,CAChD,YAAY,EACZ,MAAM,CACT,CAAC;SACL;KACJ;AACL,CAAC;SAEe,sCAAsC,CAClD,IAAa,EACb,QAAmB,EACnB,MAAiB;IAEjB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACvC,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;QAC1B,OAAO,+BAA+B,CAClC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;KACL;SAAM,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;QACjC,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;YACpC,MAAM,iBAAiB,GAAG,mBAAmB,CACzC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;;;;;;;YAOF,MAAM,KAAK,GAAG,qBAAqB,CAC/B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,iBAAiB,CACpB,CAAC;YACF,MAAM,MAAM,GAAG,+BAA+B,CAC1C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;YACF,MAAM,MAAM,GAAG,+BAA+B,CAC1C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,iBAAiB,CACpB,CAAC;;;;;;;;;;YAUF,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3C;aAAM;YACH,MAAM,iBAAiB,GAAG,mBAAmB,CACzC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;YACF,MAAM,KAAK,GAAG,qBAAqB,CAC/B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,iBAAiB,CACpB,CAAC;YACF,MAAM,KAAK,GAAG,qBAAqB,CAC/B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;YACF,MAAM,MAAM,GAAG,+BAA+B,CAC1C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,iBAAiB,CACpB,CAAC;YACF,MAAM,MAAM,GAAG,+BAA+B,CAC1C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EACpB,QAAQ,EACR,MAAM,CACT,CAAC;;;;;;;;;;;YAWF,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;SACrE;KACJ;SAAM;QACH,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;KAChE;AACL,CAAC;AAED;SACgB,+BAA+B,CAC3C,IAAc,EACd,YAA0B,EAC1B,QAAmB,EACnB,MAAiB;IAEjB,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;;IAGvC,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;QACpC,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE;YACjC,OAAO,IAAI,CAAC;SACf;KACJ;SAAM;QACH,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE;YAClC,OAAO,IAAI,CAAC;SACf;QACD,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC;YAAE,OAAOA,UAAQ,CAAC;KAC5D;IACD,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;QACpC,IAAI,QAAQ,KAAK,SAAS,CAAC,YAAY,EAAE;YACrC,OAAO,IAAI,CAAC,oDAAoD,CAC5D,YAAY,EACZ,MAAM,CACT,CAAC;SACL;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,kDAAkD,CAC1D,YAAY,EACZ,MAAM,CACT,CAAC;SACL;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,kDAAkD,CAC1D,YAAY,EACZ,MAAM,CACT,CAAC;SACL;KACJ;SAAM;QACH,IAAI,QAAQ,KAAK,SAAS,CAAC,YAAY,EAAE;YACrC,OAAO,IAAI,CAAC,oDAAoD,CAC5D,YAAY,EACZ,MAAM,CACT,CAAC;SACL;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,kDAAkD,CAC1D,YAAY,EACZ,MAAM,CACT,CAAC;SACL;aAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC,kDAAkD,CAC1D,YAAY,EACZ,MAAM,CACT,CAAC;SACL;KACJ;AACL,CAAC;AAED;AACA;SACgB,sBAAsB,CAClC,IAAc,EACd,YAA0B,EAC1B,QAAmB,EACnB,MAAiB;IAEjB,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC;IAE5E,IAAI,YAAuB,CAAC;IAE5B,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;QACpC,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE;YACjC,OAAO,IAAI,CAAC;SACf;KACJ;SAAM;QACH,IAAI,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE;YAClC,OAAO,IAAI,CAAC;SACf;QACD,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC;YAAE,OAAOA,UAAQ,CAAC;KAC5D;IACD,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;;QAEpC,IACI,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ;YACpC,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,MAAM;YAClC,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,UAAU,EACxC;;YAEE,IAAI,QAAQ,KAAK,SAAS,CAAC,YAAY,EAAE;gBACrC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;aAC5D;iBAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;gBAC1C,YAAY,GAAG,IAAI,CAAC,yBAAyB,CACzC,YAAY,EACZ,MAAM,CACT,CAAC;aACL;iBAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;gBAC1C,YAAY,GAAG,IAAI,CAAC,yBAAyB,CACzC,YAAY,EACZ,MAAM,CACT,CAAC;aACL;SACJ;aAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,OAAO,EAAE;;YAE5C,YAAY,GAAG,mBAAmB,CAC9B,IAAI,EACJ,YAAY,EACZ,QAAQ,EACR,MAAM,CACT,CAAC;SACL;KACJ;SAAM;;QAEH,IACI,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ;YACpC,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,MAAM;YAClC,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,UAAU,EACxC;YACE,IAAI,QAAQ,KAAK,SAAS,CAAC,YAAY,EAAE;gBACrC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;aAC5D;iBAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;gBAC1C,YAAY,GAAG,IAAI,CAAC,yBAAyB,CACzC,YAAY,EACZ,MAAM,CACT,CAAC;aACL;iBAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,UAAU,EAAE;gBAC1C,YAAY,GAAG,IAAI,CAAC,yBAAyB,CACzC,YAAY,EACZ,MAAM,CACT,CAAC;aACL;SACJ;aAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,OAAO,EAAE;;YAE5C,YAAY,GAAG,mBAAmB,CAC9B,IAAI,EACJ,YAAY,EACZ,QAAQ,EACR,MAAM,CACT,CAAC;SACL;KACJ;;IAED,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACtE,IAAI,CAAC,yBAAyB,CAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAEnE,OAAO,YAAY,CAAC;AACxB;;ACxcA;AACO,MAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;AAE9C,MAAM,YAAY,GAAG,CAAC,CAAC;AACvB,MAAM,WAAW,GAAW,QAAQ,CAAC;AACrC,MAAM,QAAQ,GAAW,QAAQ,CAAC;AAE3B,MAAM,gBAAgB,GAAG,CAC5B,KAAqB,EACrB,KAAgB,EAChB,QAAmB,EACnB,eAA0B,EAC1B,QAAgB,EAChB,eAA0B;IAE1B,IAAI,eAAe,GAAc,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;IAClD,IAAI,8BAA8B,GAAc,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;IACjE,IAAI,WAAW,EAAE,0BAA0B,CAAC;IAC5C,IAAI,eAAe,EAAE,SAAS,EAAE,WAAW,CAAC;;IAG5C,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,eAAe,CAAC,MAAM,EAAE,EAAE;QAC/C,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KACjC;;IAED,MAAM,mBAAmB,GAAG,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;;;;IAK5E,IAAI,eAAe,GAAG,CAAC,CAAC,CAAC;IACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;QAC/B,MAAM,sBAAsB,GAAG,mBAAmB;aAC7C,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;aACf,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,eAAe,CAAC,EAAE,CAAC,sBAAsB,CAAC;YAAE,SAAS;;QAEzD,eAAe,GAAG,CAAC,GAAG,CAAC,CAAC;QACxB,WAAW,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;;;QAG5D,MAAM,UAAU,GAAG,sBAAsB,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QACjE,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;YAC/B,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC1D,MAAM;KACT;IACD,IAAI,eAAe,IAAI,CAAC,CAAC,EAAE;QACvB,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KACjC;;;;IAKD,KAAK,IAAI,CAAC,GAAG,eAAe,EAAE,CAAC,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClD,WAAW,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,eAAe,EAAE;;;;;;;;;YAUtB,MAAM,aAAa,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;gBAC5C,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAClC,mBAAmB,CAAC,CAAC,GAAG,CAAC,CAAC;aAC7B,CAAC,CAAC;;;YAGH,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC9B,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CACjC,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAChD,CAAC;aACL,CAAC,CAAC;YACH,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACnC;;;QAID,MAAM,sBAAsB,GAAG,EAAE,CAAC;QAClC,IAAI,aAAa,CAAC;QAClB,IAAI,CACA,gBAAgB,EAChB,gBAAgB,EAChB,wBAAwB,EACxB,OAAO,EACV,GAAG,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;;;QAIxD,IAAI,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;;;QAG5D,OAAO,CAAC,sBAAsB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACjE,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC/C,aAAa,GAAG,gBAAgB,CAAC;YACjC,CAAC,WAAW,EAAE,gBAAgB,CAAC,GAAG,kBAAkB,CAChD,KAAK,EACL,aAAa,EACb,QAAQ,EACR,eAAe,EACf,WAAW,EACX,gBAAgB,EAChB,wBAAwB,CAC3B,CAAC;YACF;gBACI,gBAAgB;gBAChB,gBAAgB;gBAChB,wBAAwB;gBACxB,OAAO;aACV,GAAG,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;YAExD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;gBAAE,MAAM;YAEhC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;SAC3D;;QAED,IAAI,CAAC,IAAI,CAAC;YAAE,aAAa,GAAG,gBAAgB,CAAC;QAE7C,WAAW,GAAG,eAAe,CAAC,aAAa,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;;QAGpE,IAAI,kBAAkB,GAAG,CAAC,CAAC;QAC3B,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI;YACvB,kBAAkB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SAC3C,CAAC,CAAC;;;;;;QAOH,IAAI,oBAAoB,GAAG,KAAK,CAAC;QACjC,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;YACpC,0BAA0B,GAAG,WAAW,CAAC,KAAK,CAC1C,IAAI,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,CAClD,CAAC;YACF,oBAAoB;gBAChB,0BAA0B,CAAC,aAAa,CACpC,8BAA8B,CACjC,IAAI,CAAC,KAAK,eAAe,CAAC;SAClC;aAAM;YACH,0BAA0B,GAAG,WAAW,CAAC,IAAI,CACzC,IAAI,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,CAClD,CAAC;YACF,oBAAoB;gBAChB,0BAA0B,CAAC,UAAU,CACjC,8BAA8B,CACjC,IAAI,CAAC,KAAK,eAAe,CAAC;SAClC;QACD,IAAI,oBAAoB,KAAK,IAAI,EAAE;YAC/B,eAAe,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;YACnC,SAAS,GAAG,CAAC,GAAG,aAAa,CAAC,CAAC;YAC/B,eAAe,GAAG,WAAW,CAAC;YAC9B,8BAA8B,GAAG,0BAA0B,CAAC;SAC/D;aAAM;YACH,MAAM;SACT;;QAGD,IAAI,kBAAkB,IAAI,QAAQ;YAAE,MAAM;KAC7C;;IAGD,IAAI,KAAK,GAAa,EAAE,CAAC;IACzB,IAAI,iCAAiC,GAAc,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;IACpE,IAAI,IAAI,GAAc,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;IACvC,IAAI,eAAe,CAAC;IACpB,IAAI,cAAc,GAAG,IAAI,CAAC;IAC1B,IAAI,eAAwB,CAAC;IAC7B,eAAe,GAAG,IAAI,CAAC;;;IAGvB,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;QACtB,MAAM,UAAU,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;;QAEtC,IAAI,UAAU,CAAC,MAAM,EAAE;YAAE,OAAO;QAEhC,IAAI,UAAU,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE;YAC/B,cAAc,GAAG,UAAU,CAAC;YAC5B,eAAe,GAAG,IAAI,CAAC;SAC1B;QACD,iCAAiC;YAC7B,iCAAiC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;;;;;;;;;QAWvD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAEvC,IAAI,CAAC,IAAI,CAAC;;YAEN,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAExC,IAAI,YAAY,CAAC;QAEjB,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;;YAE1B,MAAM,IAAI,GAAS;gBACf,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;gBACxB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO;gBAC9B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ;gBAChC,UAAU,EAAE,UAAU,CAAC,QAAQ,EAAE;gBACjC,iBAAiB,EACb,QAAQ,KAAK,SAAS,CAAC,WAAW;sBAC5B,YAAY,CAAC,QAAQ,EAAE;sBACvB,WAAW;gBACrB,QAAQ,EAAE,QAAQ;gBAClB,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE;gBAC3D,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE;aAChE,CAAC;YACF,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;;YAEnB,YAAY,GAAG,sBAAsB,CACjC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,YAAY,CAAC,CAAC,CAAC,EACf,QAAQ,EACR,UAAU,CACb,CAAC;SACL;aAAM;;YAGH,IAAI,WAAW,EAAE,WAAW,CAAC;YAC7B,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;gBACpC,WAAW,GAAG,UAAU,CAAC;gBACzB,WAAW,GAAG,sBAAsB,CAChC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,YAAY,CAAC,CAAC,CAAC,EACf,QAAQ,EACR,UAAU,CACb,CAAC;;;gBAGF,YAAY,GAAG,sBAAsB,CACjC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,YAAY,CAAC,CAAC,CAAC,EACf,QAAQ,EACR,WAAW,CACd,CAAC;aACL;iBAAM;gBACH,WAAW,GAAG,sBAAsB,CAChC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,YAAY,CAAC,CAAC,CAAC,EACf,QAAQ,EACR,UAAU,CACb,CAAC;gBACF,WAAW,GAAG,UAAU,CAAC;;;gBAGzB,YAAY,GAAG,sBAAsB,CACjC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EACb,YAAY,CAAC,CAAC,CAAC,EACf,QAAQ,EACR,WAAW,CACd,CAAC;aACL;;YAGD,MAAM,QAAQ,GAAS;gBACnB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;gBACxB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO;gBAC9B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ;gBAChC,UAAU,EAAE,WAAW,CAAC,QAAQ,EAAE;gBAClC,iBAAiB,EACb,QAAQ,KAAK,SAAS,CAAC,WAAW;sBAC5B,YAAY,CAAC,QAAQ,EAAE;sBACvB,WAAW;gBACrB,QAAQ,EAAE,QAAQ;gBAClB,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE;gBAC3D,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE;aAChE,CAAC;;YAGF,MAAM,QAAQ,GAAS;gBACnB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;gBACxB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO;gBAC9B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ;gBAChC,UAAU,EAAE,WAAW,CAAC,QAAQ,EAAE;gBAClC,iBAAiB,EACb,QAAQ,KAAK,SAAS,CAAC,WAAW;sBAC5B,YAAY,CAAC,QAAQ,EAAE;sBACvB,WAAW;gBACrB,QAAQ,EAAE,QAAQ;gBAClB,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE;gBAC3D,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE;aAChE,CAAC;YACF,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;SACpC;;QAED,eAAe,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACxD,CAAC,CAAC;;;;IAKH,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QAClB,IAAI,GAAG,eAAe,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;QAChE,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EAAE;YACpC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;iBACzD,IAAI,CAAC,IAAI,CAAC;iBACV,QAAQ,EAAE,CAAC;SACnB;aAAM;YACH,IAAI,eAAe,IAAI,CAAC;;gBAEpB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;qBACzD,IAAI,CAAC,IAAI,CAAC;qBACV,QAAQ,EAAE,CAAC;;;;gBAIhB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;qBACzD,IAAI,CAAC,IAAI,CAAC;qBACV,QAAQ,EAAE,CAAC;SACvB;KACJ;IAED,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;QACtB,QAAQ,GAAG,4BAA4B,CACnC,eAAe,EACf,QAAQ,EACR,IAAI,CACP,CAAC;SACD;QACD,KAAK,GAAG,EAAE,CAAC;QACX,QAAQ,GAAG,IAAI,CAAC;QAChB,8BAA8B,GAAG,IAAI,CAAC;KACzC;IAED,OAAO,CAAC,KAAK,EAAE,eAAe,EAAE,QAAQ,EAAE,8BAA8B,CAAC,CAAC;AAC9E,CAAC,CAAC;AAEF;AACA;AACA;AACA,SAAS,cAAc,CACnB,KAAqB,EACrB,aAAwB,EACxB,QAAmB,EACnB,WAAwB;IAExB,MAAM,WAAW,GAAG,EAAE,CAAC;IACvB,MAAM,aAAa,GAAG,EAAE,CAAC;IACzB,MAAM,wBAAwB,GAAG,EAAE,CAAC;IACpC,MAAM,4BAA4B,GAAG,EAAE,CAAC;IACxC,MAAM,KAAK,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;;IAGvC,MAAM,iBAAiB,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACjD,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;KAChC,CAAC,CAAC;IAEH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/C,MAAM,UAAU,GAAc,iBAAiB,CAAC,CAAC,CAAC,CAAC;;QAEnD,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,kBAAkB,GAAGA,UAAQ,CAAC;QAClC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;;YAElB,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;;;;;gBAKlC,IAAI,cAAc,CAAC;gBACnB,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;oBACjC,cAAc,GAAGA,UAAQ,CAAC;iBAC7B;qBAAM;;;oBAGH,cAAc,GAAG,4BAA4B,CACzC,KAAK,EACL,IAAI,EACJ,QAAQ,EACR,UAAU,CACb,CAAC;iBACL;gBACD,IAAI,cAAc,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAAE;oBACxC,kBAAkB,GAAG,cAAc,CAAC;oBACpC,aAAa,GAAG,CAAC,CAAC;iBACrB;aACJ;SACJ,CAAC,CAAC;QAEH,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE;YACtB,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAC3B;QACD,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1C,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QACzC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,CAAC;QAChE,4BAA4B,CAAC,IAAI,CAC7B,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,CACrD,CAAC;QACF,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;KAClC;IACD,OAAO;QACH,aAAa;QACb,4BAA4B;QAC5B,wBAAwB;QACxB,WAAW;KACd,CAAC;AACN,CAAC;AAED;AACA;AACA;AACA,SAAS,kBAAkB,CACvB,KAAqB,EACrB,aAAwB,EACxB,QAAmB,EACnB,eAA0B,EAC1B,WAAwB,EACxB,gBAA6B,EAC7B,gBAA6B;IAE7B,IAAI,UAAU,GAAG,GAAG,CAAC;IACrB,IAAI,MAAM,GAAG,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;IAwBhB,IAAI,cAAc,GAAG,CAAC,CAAC;IACvB,OAAO,UAAU,CAAC,aAAa,CAAC,qBAAqB,CAAC,EAAE;QACpD,CAAC,MAAM,EAAE,WAAW,EAAE,gBAAgB,CAAC;YACnC,+BAA+B,CAC3B,KAAK,EACL,aAAa,EACb,QAAQ,EACR,eAAe,EACf,WAAW,EACX,gBAAgB,EAChB,gBAAgB,EAChB,cAAc,CACjB,CAAC;QACN,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACnD,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACnD,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpD,cAAc,EAAE,CAAC;QACjB,IAAI,cAAc,GAAG,GAAG;YAAE,MAAM;KACnC;IACD,OAAO,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAC3C,CAAC;AAED,SAAS,+BAA+B,CACpC,KAAqB,EACrB,aAAwB,EACxB,QAAmB,EACnB,eAA0B,EAC1B,WAAwB,EACxB,gBAA6B;AAC7B,gBAA6B,EAC7B,cAAsB;IAEtB,IAAI,yBAAyB,GAAG,IAAI,CAAC;IACrC,IAAI,+BAA+B,GAAG,IAAI,CAAC;IAC3C,MAAM,KAAK,GAAG,EAAE,CAAC;IACjB,MAAM,eAAe,GAAG,EAAE,CAAC;;;;;IAM3B,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;;QAE9B,IACI,CAAC,cAAc,IAAI,CAAC;YAChB,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC;YACpB,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;aAChC,cAAc,IAAI,CAAC;gBAChB,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC;gBACnB,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EACnC;YACE,MAAM,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,IAAI,GAAG,4BAA4B,CACrC,IAAI,EACJ,QAAQ,EACR,UAAU,CACb,CAAC;YACF,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjB,MAAM,eAAe,GAAG,sCAAsC,CAC1D,IAAI,EACJ,QAAQ,EACR,UAAU,CACb,CAAC;YACF,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACtC,yBAAyB,GAAG,yBAAyB,CAAC,IAAI,CACtD,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAC3B,CAAC;YACF,+BAA+B;gBAC3B,+BAA+B,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;SACvE;aAAM;;YAEH,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAClC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SAC3B;KACJ,CAAC,CAAC;;;;;;;IAQH,MAAM,qBAAqB,GAAG,IAAI,CAC9B,+BAA+B,CAAC,QAAQ,EAAE;QACtC,yBAAyB,CAAC,QAAQ,EAAE,CAC3C,CAAC;IAEF,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;QAC9B,IACI,CAAC,cAAc,IAAI,CAAC;YAChB,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC;YACpB,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;aAChC,cAAc,IAAI,CAAC;gBAChB,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC;gBACnB,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EACnC;YACE,MAAM,eAAe,GAAG,qBAAqB;iBACxC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBACf,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACtD,gBAAgB,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACnE;KACJ,CAAC,CAAC;;IAGH,OACI,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC;QAC/C,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EACtD;QACE,CAAC,WAAW,EAAE,gBAAgB,CAAC,GAAG,wBAAwB,CACtD,WAAW,EACX,gBAAgB,EAChB,eAAe,CAClB,CAAC;KACL;IAED,MAAM,sBAAsB,GAAG,EAAE,CAAC;IAClC,IAAI,gCAAgC,GAAG,IAAI,CAAC;IAC5C,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;QAC9B,gCAAgC;YAC5B,gCAAgC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtD,IACI,CAAC,cAAc,IAAI,CAAC;YAChB,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC;YACpB,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;aAChC,cAAc,IAAI,CAAC;gBAChB,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC;gBACnB,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAEjC,sBAAsB,CAAC,IAAI,CACvB,4BAA4B,CACxB,aAAa,CAAC,CAAC,CAAC,EAChB,QAAQ,EACR,UAAU,CACb,CACJ,CAAC;KACT,CAAC,CAAC;IAEH,MAAM,aAAa,GAAG,eAAe,CAAC,KAAK,CACvC,gCAAgC,CACnC,CAAC;;;;;;;;;;;IAYF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACzC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YACzD,IACI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC;gBAC3C,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAClD;gBACE,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACpD,gBAAgB,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC9D,MAAM;aACT;SACJ;KACJ;IAED,OAAO,CAAC,sBAAsB,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;AACnE,CAAC;AAED,SAAS,wBAAwB,CAC7B,WAAwB,EACxB,gBAA6B,EAC7B,eAA4B;IAE5B,IAAI,yCAAyC,GAAG,IAAI,CAAC;IACrD,IAAI,2CAA2C,GAAG,IAAI,CAAC;IACvD,IAAI,4CAA4C,GAAG,IAAI,CAAC;IACxD,IAAI,iCAAiC,GAAG,IAAI,CAAC;IAC7C,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;;QAE9B,IAAI,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACtB,iCAAiC;gBAC7B,iCAAiC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACvD,2CAA2C;gBACvC,2CAA2C,CAAC,IAAI,CAC5C,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAC9B,CAAC;SACT;;aAEI,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACpC,iCAAiC;gBAC7B,iCAAiC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;YAChE,4CAA4C;gBACxC,4CAA4C,CAAC,IAAI,CAC7C,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAC9B,CAAC;SACT;;;;YAIG,yCAAyC;gBACrC,yCAAyC,CAAC,IAAI,CAC1C,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAC9B,CAAC;KACb,CAAC,CAAC;;;;IAKH,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;QAC9B,IAAI,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACtB,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YACtB,gBAAgB,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SAC/D;aAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACtC,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,gBAAgB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAC9B;aAAM;YACH,MAAM,eAAe,GAAG,iCAAiC;iBACpD,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;iBAClC,GAAG,CAAC,yCAAyC,CAAC,CAAC;YACpD,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACtD,gBAAgB,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACnE;KACJ,CAAC,CAAC;;;IAIH,IAAI,yCAAyC,CAAC,MAAM,EAAE,EAAE;QACpD,IAAI,iCAAiC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;;;YAG5C,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC9B,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE;oBAC9B,MAAM,eAAe,GAAG,iCAAiC;yBACpD,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;yBAClC,GAAG,CAAC,4CAA4C,CAAC,CAAC;oBACvD,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBACtD,gBAAgB,CAAC,CAAC,CAAC;wBACf,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBACjD;aACJ,CAAC,CAAC;SACN;aAAM;;;YAGH,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;gBAC9B,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE;oBACzB,MAAM,eAAe,GAAG,iCAAiC;yBACpD,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;yBAClC,GAAG,CAAC,2CAA2C,CAAC,CAAC;oBACtD,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBACtD,gBAAgB,CAAC,CAAC,CAAC;wBACf,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBACjD;aACJ,CAAC,CAAC;SACN;KACJ;IACD,OAAO,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAC3C,CAAC;AAED;AACO,MAAM,eAAe,GAAG,CAC3B,KAAgB,EAChB,QAAmB,EACnB,WAAwB;IAExB,IAAI,WAAW,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;;IAEnC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;QAClB,WAAW,GAAG,WAAW,CAAC,IAAI,CAC1B,0BAA0B,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAC7D,CAAC;KACL,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACvtBM,MAAM,QAAQ,GAAkC;IACnD,CAAC,EAAE,4CAA4C;IAC/C,CAAC,EAAE,4CAA4C;IAC/C,EAAE,EAAE,4CAA4C;IAChD,GAAG,EAAE,4CAA4C;IACjD,KAAK,EAAE,4CAA4C;CACtD,CAAC;AAEK,MAAM,SAAS,GAAkC;IACpD,CAAC,EAAE,4CAA4C;IAC/C,CAAC,EAAE,4CAA4C;IAC/C,EAAE,EAAE,4CAA4C;IAChD,GAAG,EAAE,4CAA4C;IACjD,KAAK,EAAE,4CAA4C;CACtD,CAAC;AAEK,MAAM,SAAS,GAAkC;IACpD,CAAC,EAAE,4CAA4C;IAC/C,CAAC,EAAE,4CAA4C;IAC/C,EAAE,EAAE,4CAA4C;IAChD,GAAG,EAAE,4CAA4C;IACjD,KAAK,EAAE,4CAA4C;CACtD,CAAC;AAEK,MAAM,cAAc,GAAa;IACpC,cAAc,EAAE,EAAE;IAClB,KAAK,EAAE,EAAE;IACT,UAAU,EAAE,IAAI;IAChB,kBAAkB,EAAE,IAAI;IACxB,OAAO,EAAE,EAAE;IACX,QAAQ,EAAE,EAAE;IACZ,YAAY,EAAE,IAAI;IAClB,2BAA2B,EAAE,IAAI;IACjC,qBAAqB,EAAE,IAAI;IAC3B,QAAQ,EAAE,IAAI;CACjB;;AC5BM,MAAM,IAAI,GAAG;IAChB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IACjB,KAAK,EAAE;QACH,CAAC,EAAE,4CAA4C;QAC/C,EAAE,EAAE,4CAA4C;KACnD;IACD,MAAM,EAAE;QACJ,CAAC,EAAE,4CAA4C;QAC/C,EAAE,EAAE,4CAA4C;KACnD;IACD,IAAI,EAAE;QACF,CAAC,EAAE,4CAA4C;QAC/C,EAAE,EAAE,4CAA4C;KACnD;IACD,GAAG,EAAE;QACD,CAAC,EAAE,4CAA4C;QAC/C,EAAE,EAAE,4CAA4C;KACnD;IACD,IAAI,EAAE;QACF,CAAC,EAAE,4CAA4C;QAC/C,EAAE,EAAE,4CAA4C;KACnD;IACD,IAAI,EAAE;QACF,CAAC,EAAE,4CAA4C;QAC/C,EAAE,EAAE,4CAA4C;KACnD;IACD,WAAW,EAAE;;QAET,MAAM,EAAE;YACJ,CAAC,EAAE,oEAAoE;YACvE,EAAE,EAAE,oEAAoE;SAC3E;;QAED,OAAO,EAAE;YACL,CAAC,EAAE,oEAAoE;YACvE,EAAE,EAAE,oEAAoE;SAC3E;;QAED,UAAU,EAAE;YACR,CAAC,EAAE,oEAAoE;YACvE,EAAE,EAAE,oEAAoE;SAC3E;KACJ;CACJ,CAAC;AAEK,MAAM,MAAM,GAAG;IAClB,CAAC,EAAE,EAAE;IACL,EAAE,EAAE,EAAE;CACT,CAAC;AAEF;AACA;AACA,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC5C,IAAI,EAAE,wBAAwB;IAC9B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3D,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC5C,IAAI,EAAE,wBAAwB;IAC9B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC5C,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3D,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC5C,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC7C,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,CAAC;IAClB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACzE,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC7C,IAAI,EAAE,0BAA0B;IAChC,eAAe,EAAE,CAAC;IAClB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACzE,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC7C,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,CAAC;IACnB,cAAc,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzE,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC7C,IAAI,EAAE,0BAA0B;IAChC,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,CAAC;IACnB,cAAc,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzE,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC7C,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,CAAC;IAClB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACzE,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC7C,IAAI,EAAE,0BAA0B;IAChC,eAAe,EAAE,CAAC;IAClB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACzE,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC7C,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,CAAC;IACnB,cAAc,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzE,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;IAC7C,IAAI,EAAE,0BAA0B;IAChC,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,CAAC;IACnB,cAAc,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzE,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACtC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA;AACA,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAChD,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,CAAC;IAClB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC/D,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAChD,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,CAAC;IACnB,cAAc,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC/D,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAChD,IAAI,EAAE,0BAA0B;IAChC,eAAe,EAAE,CAAC;IAClB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC/D,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAChD,IAAI,EAAE,0BAA0B;IAChC,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,CAAC;IACnB,cAAc,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC/D,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAC/C,IAAI,EAAE,wBAAwB;IAC9B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE;QACZ,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;QACZ,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;KAClB;IACD,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;YACnC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAC/C,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE;QACZ,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;QACZ,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;KAClB;IACD,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAC/C,IAAI,EAAE,wBAAwB;IAC9B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE;QACZ,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;KACf;IACD,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAC/C,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE;QACZ,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;KACf;IACD,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;YACnC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAChD,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,CAAC;IAClB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE;QACZ,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;KAClB;IACD,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;YACnC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAChD,IAAI,EAAE,0BAA0B;IAChC,eAAe,EAAE,CAAC;IAClB,gBAAgB,EAAE,EAAE;IACpB,cAAc,EAAE;QACZ,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;KAClB;IACD,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;AACA,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAChD,IAAI,EAAE,yBAAyB;IAC/B,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,CAAC;IACnB,cAAc,EAAE;QACZ,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;KAChB;IACD,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;YACnC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;IAChD,IAAI,EAAE,0BAA0B;IAChC,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE,CAAC;IACnB,cAAc,EAAE;QACZ,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;KAChB;IACD,KAAK,EAAE;QACH;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;YACnC,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACpC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;QACD;YACI,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,MAAM,EAAE,GAAG;YACX,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,GAAG;YAClB,QAAQ,EAAE,IAAI;SACjB;KACJ;CACJ,CAAC;AAEF;SACgB,gBAAgB,CAC5B,OAAe,EACf,OAAe,EACf,QAAgB;IAEhB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;QAAE,OAAO,KAAK,CAAC;IAEnD,OAAO,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;IAChC,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;IAElC,IACI,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;SAClE,OAAO,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACpE,OAAO,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACpE,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACnE,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACpE,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACpE,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAClE,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACnE,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACnE,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAClE,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACnE,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEpE,OAAO,IAAI,CAAC;;QACX,OAAO,KAAK,CAAC;AACtB,CAAC;AAED;AACA,SAAe,cAAc,CACzB,QAAmB,EACnB,KAAe,EACf,MAAgB,EAChB,QAAsB;;QAEtB,MAAM,SAAS,GAAG,4CAA4C,CAAC;QAC/D,MAAM,aAAa,GAAG,IAAI,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAClE,MAAM,KAAK,GAAG;YACV,MAAM,EAAE,WAAW;YACnB,SAAS,EAAE,WAAW;YACtB,mBAAmB,EAAE,KAAK;YAC1B,iBAAiB,EAAE,KAAK;SAC3B,CAAC;QAEF,IAAI;YACA,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,UAAU,CAAC,cAAc,CACxD,QAAQ,EACR,KAAK,EACL,MAAM,EACN,KAAK,CACR,CAAC;;YAEF,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW;gBAClC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;gBAC3D,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC1C;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,CACT,yDAAyD,CAC5D,CAAC;YACF,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;KACJ;CAAA;AAED;;;;AAIA,SAAS,iBAAiB,CACtB,QAAmB,EACnB,KAAe,EACf,MAAgB,EAChB,KAAyB;IAEzB,MAAM,UAAU,GAAgB,EAAE,CAAC;IACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;QAGtB,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;;QAGtC,MAAM,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO;YAAE,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;;QAG7B,MAAM,YAAY,GAAQ,OAAO,CAAC,iBAAiB,CAC/C,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EACzB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAC7B,CAAC;;QAGF,IAAI,SAAoB,CAAC;QACzB,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW;YAClC,SAAS,GAAG,OAAO,CAAC,0CAA0C,CAC1D,YAAY,EACZ,IAAI,CACP,CAAC;;;YAGF,SAAS,GAAG,OAAO,CAAC,0CAA0C,CAC1D,YAAY,EACZ,IAAI,CACP,CAAC;;QAGN,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC9B;;IAGD,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC;SAEqB,YAAY,CAC9B,QAAsB,EACtB,OAAe;;;QAGf,MAAM,cAAc,GAAG,IAAI,QAAQ,CAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EACpB,CAAC,2DAA2D,CAAC,EAC7D,QAAQ,CACX,CAAC;QACF,MAAM,IAAI,GAAG,MAAM,cAAc,CAAC,cAAc,EAAE,CAAC;QACnD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;KAC5C;CAAA;AAED;;;;SAIsB,kBAAkB,CACpC,KAAyB,EACzB,OAAe,EACf,OAAe,EACf,QAAgB,EAChB,QAAmB,EACnB,UAAqB,EACrB,QAAsB;;;QAGtB,IAAI,YAAY,EACZ,aAAa,GAAG,KAAK,CAAC;QAC1B,IAAI,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YACjC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC/B,YAAY,GAAG,IAAI,CAAC;SACvB;QACD,IAAI,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YAClC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAChC,aAAa,GAAG,IAAI,CAAC;SACxB;QAED,MAAM,QAAQ,GAAa,SAAS,CAAC,cAAc,CAAC,CAAC;QACrD,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,QAAQ,GAAG,QAAQ,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,WAAW;YAAE,OAAO,QAAQ,CAAC;QAElC,QAAQ,CAAC,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;QACrD,QAAQ,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;QACnC,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW;YAClC,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,EAAE,WAAW,CAAC,eAAe,CAAC,CAAC,EAAE,CACnE,CAAC,CACJ,CAAC;;YAEF,QAAQ,CAAC,UAAU,GAAG,KAAK,CACvB,UAAU,EACV,WAAW,CAAC,gBAAgB,CAC/B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC1D,IAAI,YAAY;YAAE,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;YACpD,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;QAEhC,IAAI,aAAa;YAAE,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;YACtD,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;;QAGlC,QAAQ,CAAC,QAAQ,GAAG,iBAAiB,CACjC,QAAQ,EACR,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,cAAc,EACvB,KAAK,CACR,CAAC;;QAGF,QAAQ,CAAC,YAAY,GAAG,MAAM,cAAc,CACxC,QAAQ,EACR,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,cAAc,EACvB,QAAQ,CACX,CAAC;QAEF,IAAI,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE;YAChC,yBAAY,cAAc,EAAG;SAChC;;QAGD,QAAQ,CAAC,2BAA2B,GAAG,QAAQ,CAAC,YAAY,CAAC;QAC7D,OAAO,QAAQ,CAAC;KACnB;;;ACn9BM,MAAM,aAAa,GAAG,CAAC,QAAgB,EAAE,QAAgB,KAC5D,UAAU,CAAC,QAAQ,CAAC,KAAK,UAAU,CAAC,QAAQ,CAAC;;ACoBjD,IAAY,SAIX;AAJD,WAAY,SAAS;IACjB,yCAAI,CAAA;IACJ,uCAAG,CAAA;IACH,2CAAK,CAAA;AACT,CAAC,EAJW,SAAS,KAAT,SAAS,QAIpB;SAEqB,cAAc,CAChC,QAAsB,EACtB,QAAmB,EACnB,OAAe,EACf,QAAgB,EAChB,OAAe,EACf,UAAqB;;;QAGrB,OAAO,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QAChC,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;QAElC,IAAI,kBAAkB,GAAG,UAAU,CAAC;QAEpC,IAAI,eAAe,GAAG,OAAO,CAAC;QAC9B,IAAI,eAAe,GAAG,SAAS,CAAC,IAAI,CAAC;QACrC,IAAI,gBAAgB,GAAG,QAAQ,CAAC;QAChC,IAAI,gBAAgB,GAAG,SAAS,CAAC,IAAI,CAAC;QACtC,IAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;QAG3B,IAAI,OAAO,KAAK,WAAW,EAAE;YACzB,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;YAClD,eAAe,GAAG,SAAS,CAAC,GAAG,CAAC;SACnC;QACD,IAAI,QAAQ,KAAK,WAAW,EAAE;YAC1B,gBAAgB,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;YACnD,gBAAgB,GAAG,SAAS,CAAC,GAAG,CAAC;SACpC;;QAGD,IAAI,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YACjC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACvC,eAAe,GAAG,SAAS,CAAC,KAAK,CAAC;YAClC,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACnD,WAAW,GAAG,IAAI,CAAC;YACnB,IAAI,QAAQ,KAAK,SAAS,CAAC,WAAW;gBAClC,kBAAkB,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1D;QACD,IAAI,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YAClC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACxC,gBAAgB,GAAG,SAAS,CAAC,KAAK,CAAC;YACnC,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACnD,YAAY,GAAG,IAAI,CAAC;YACpB,IAAI,QAAQ,KAAK,SAAS,CAAC,YAAY;gBACnC,kBAAkB,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAC1D;QAED,OAAO;YACH,kBAAkB,EAAE,UAAU;YAC9B,kBAAkB,EAAE,kBAAkB;YACtC,OAAO,EAAE;gBACL,eAAe,EAAE,OAAO;gBACxB,eAAe,EAAE,eAAe;gBAChC,QAAQ,EAAE,eAAe;gBACzB,IAAI,EAAE,WAAW;aACpB;YACD,QAAQ,EAAE;gBACN,eAAe,EAAE,QAAQ;gBACzB,eAAe,EAAE,gBAAgB;gBACjC,QAAQ,EAAE,gBAAgB;gBAC1B,IAAI,EAAE,YAAY;aACrB;SACJ,CAAC;KACL;CAAA;SAEe,cAAc,CAC1B,QAAkB,EAClB,QAAmB,EACnB,WAAwB,EACxB,OAAe;IAEf,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,QAAQ,CAAC;IAEjD,QAAQ,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,eAAe,CAAC;IACvD,QAAQ,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC;IAEzD,IACI,WAAW,CAAC,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,GAAG;QAC9C,WAAW,CAAC,QAAQ,CAAC,QAAQ,KAAK,SAAS,CAAC,GAAG,EACjD;;QAEE,QAAQ,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,KACvD,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,WAAW,GAAG,IAAI,CAC9D,CAAC;KACL;;IAGD,IACI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,KAAK;QAC7C,QAAQ,KAAK,SAAS,CAAC,WAAW;SACrC,WAAW,CAAC,QAAQ,CAAC,QAAQ,KAAK,SAAS,CAAC,KAAK;YAC9C,QAAQ,KAAK,SAAS,CAAC,YAAY,CAAC,EAC1C;QACE,QAAQ,CAAC,kBAAkB,GAAG,KAAK,CAC/B,WAAW,CAAC,kBAAkB,EAC9B,EAAE,CACL,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACR,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACzE;SAAM;;QAEH,QAAQ,CAAC,kBAAkB,GAAG,QAAQ,CAAC,UAAU,CAAC;KACrD;;IAGD,QAAQ,CAAC,qBAAqB,GAAG,QAAQ,CAAC,YAAY,CAAC;;IAGvD,IACI,QAAQ,KAAK,SAAS,CAAC,WAAW;QAClC,WAAW,CAAC,QAAQ,CAAC,QAAQ,KAAK,SAAS,CAAC,KAAK,EACnD;QACE,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY;aACxC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;aAC9B,EAAE,CAAC,CAAC,CAAC,CAAC;QACX,QAAQ,CAAC,2BAA2B;YAChC,QAAQ,CAAC,2BAA2B;iBAC/B,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;iBAC9B,EAAE,CAAC,CAAC,CAAC,CAAC;KAClB;;IAGD,IACI,QAAQ,KAAK,SAAS,CAAC,YAAY;QACnC,WAAW,CAAC,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,KAAK,EAClD;QACE,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY;aACxC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC;aAC7B,EAAE,CAAC,CAAC,CAAC,CAAC;QACX,QAAQ,CAAC,2BAA2B;YAChC,QAAQ,CAAC,2BAA2B;iBAC/B,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC;iBAC7B,EAAE,CAAC,CAAC,CAAC,CAAC;KAClB;IACD,OAAO,QAAQ,CAAC;AACpB;;AChKA;;;AAGA,MAAM,iBAAiB,GAAG,CAAC,KAAe;IACtC,MAAM,iBAAiB,GAAgB,IAAI,GAAG,CAC1C,KAAK,CAAC,OAAO,CAAC,CAAC,QAAQ,KACnB,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,KAAuB;QACzC,IAAI,CAAC,OAAO;QACZ,IAAI,CAAC,QAAQ;KAChB,CAAC,CACL,CACJ,CAAC;IAEF,OAAO,CAAC,GAAG,iBAAiB,CAAC,CAAC;AAClC,CAAC,CAAC;AAEF;;;;AAIA,MAAM,kBAAkB,GAAG,CAAC,KAAe;IACvC,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;AACrE,CAAC,CAAC;AAEF;;;;;;;;;AASA,MAAM,cAAc,GAAG,CACnB,QAAmB,EACnB,QAAgB,EAChB,cAAwB;IAExB,IAAI,QAAQ,KAAK,SAAS,CAAC,YAAY,EAAE;;;QAGrC,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;KACjC;IAED,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;;;;QAIxB,IAAI,YAAY,GAAG,GAAG,CAAC;;QAGvB,IAAI,CAAC,KAAK,CAAC,EAAE;;;YAGT,MAAM,aAAa,GACf,QAAQ,KAAK,SAAS,CAAC,WAAW;kBAC5B,IAAI,CAAC,eAAe;kBACpB,IAAI,CAAC,gBAAgB,CAAC;YAEhC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,aAAa,CAAC;iBACrD,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;iBACnB,QAAQ,EAAE,CAAC;SACnB;QAED,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,MAAM,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvD,OAAO;YACH,MAAM,EAAE,IAAI,CAAC,IAAI;YACjB,YAAY,EAAE,OAAO;YACrB,aAAa,EAAE,QAAQ;YACvB,MAAM,EAAE,YAAY;YACpB,QAAQ,EAAE,IAAI;SACjB,CAAC;KACL,CAAC,CAAC;AACP,CAAC,CAAC;SAEc,WAAW,CACvB,aAAuB,EACvB,QAAmB,EACnB,UAAqB,EACrB,OAAe,EACf,QAAgB,EAChB,YAAuB,EACvB,2BAAsC,EACtC,QAAmB;IAEnB,MAAM,KAAK,GAAa,SAAS,CAAC,aAAa,CAAC,CAAC;IAEjD,MAAM,QAAQ,mCACP,cAAc,KACjB,QAAQ,EAAE,QAAQ,GACrB,CAAC;IAEF,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACpB,OAAO,QAAQ,CAAC;KACnB;IAED,MAAM,EAAE,eAAe,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CACrC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,KAAK,OAAO,CACrC,CAAC;IACF,MAAM,EAAE,gBAAgB,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CACtC,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,KAAK,QAAQ,CACvC,CAAC;IAEF,MAAM,UAAU,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAC5C,MAAM,OAAO,GAAa,KAAK,CAAC,OAAO,CAAC,CAAC,QAAQ,KAC7C,cAAc,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,CACjD,CAAC;IAEF,MAAM,CAAC,aAAa,EAAE,cAAc,CAAC,GACjC,QAAQ,KAAK,SAAS,CAAC,WAAW;UAC5B,CAAC,eAAe,EAAE,gBAAgB,CAAC;UACnC,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;IAE9C,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IACvD,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,EAAE,CAC1D,CAAC,EACD,SAAS,CAAC,WAAW,CACxB,CAAC;IACF,QAAQ,CAAC,2BAA2B,GAAG,KAAK,CACxC,2BAA2B,EAC3B,cAAc,CACjB,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;;IAG/B,MAAM,IAAI,GAAG,QAAQ,CAAC,UAAU;SAC3B,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;SAClC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACd,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QACV,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;IAEtE,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC;IACzB,QAAQ,CAAC,cAAc,GAAG,UAAU,CAAC;IACrC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,OAAO,QAAQ,CAAC;AACpB;;;;;;;;;;;ACpIA;AACA,IAAI,eAAe,GAAG,qBAAqB,CAAC;AAC5C;AACA;AACA,IAAI,cAAc,GAAG,2BAA2B,CAAC;AACjD;AACA;AACA,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC;AACpB,IAAI,gBAAgB,GAAG,gBAAgB,CAAC;AACxC;AACA;AACA,IAAI,OAAO,GAAG,mBAAmB;AACjC,IAAI,MAAM,GAAG,4BAA4B;AACzC,IAAI,SAAS,GAAG,iBAAiB,CAAC;AAClC;AACA;AACA,IAAI,YAAY,GAAG,kDAAkD;AACrE,IAAI,aAAa,GAAG,OAAO;AAC3B,IAAI,YAAY,GAAG,KAAK;AACxB,IAAI,UAAU,GAAG,kGAAkG,CAAC;AACpH;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG,qBAAqB,CAAC;AACzC;AACA;AACA,IAAI,YAAY,GAAG,UAAU,CAAC;AAC9B;AACA;AACA,IAAI,YAAY,GAAG,6BAA6B,CAAC;AACjD;AACA;AACA,IAAI,QAAQ,GAAG,kBAAkB,CAAC;AAClC;AACA;AACA,IAAI,UAAU,GAAG,OAAOD,cAAM,IAAI,QAAQ,IAAIA,cAAM,IAAIA,cAAM,CAAC,MAAM,KAAK,MAAM,IAAIA,cAAM,CAAC;AAC3F;AACA;AACA,IAAI,QAAQ,GAAG,OAAO,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,IAAI,CAAC;AACjF;AACA;AACA,IAAI,IAAI,GAAG,UAAU,IAAI,QAAQ,IAAI,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;AAC/B,EAAE,OAAO,MAAM,IAAI,IAAI,GAAG,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAClD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE;AAC7B;AACA;AACA,EAAE,IAAI,MAAM,GAAG,KAAK,CAAC;AACrB,EAAE,IAAI,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,CAAC,QAAQ,IAAI,UAAU,EAAE;AAC5D,IAAI,IAAI;AACR,MAAM,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC;AAC9B,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE;AAClB,GAAG;AACH,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC;AACD;AACA;AACA,IAAI,UAAU,GAAG,KAAK,CAAC,SAAS;AAChC,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS;AAClC,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC;AACnC;AACA;AACA,IAAI,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC5C;AACA;AACA,IAAI,UAAU,IAAI,WAAW;AAC7B,EAAE,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;AAC3F,EAAE,OAAO,GAAG,IAAI,gBAAgB,GAAG,GAAG,IAAI,EAAE,CAAC;AAC7C,CAAC,EAAE,CAAC,CAAC;AACL;AACA;AACA,IAAI,YAAY,GAAG,SAAS,CAAC,QAAQ,CAAC;AACtC;AACA;AACA,IAAI,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,GAAG,WAAW,CAAC,QAAQ,CAAC;AAC1C;AACA;AACA,IAAI,UAAU,GAAG,MAAM,CAAC,GAAG;AAC3B,EAAE,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;AACjE,GAAG,OAAO,CAAC,wDAAwD,EAAE,OAAO,CAAC,GAAG,GAAG;AACnF,CAAC,CAAC;AACF;AACA;AACA,IAAIoE,QAAM,GAAG,IAAI,CAAC,MAAM;AACxB,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AAC/B;AACA;AACA,IAAIC,KAAG,GAAG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC;AAChC,IAAI,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC/C;AACA;AACA,IAAI,WAAW,GAAGD,QAAM,GAAGA,QAAM,CAAC,SAAS,GAAG,SAAS;AACvD,IAAI,cAAc,GAAG,WAAW,GAAG,WAAW,CAAC,QAAQ,GAAG,SAAS,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,OAAO,EAAE;AACvB,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC;AAChB,MAAM,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5C;AACA,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;AACf,EAAE,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AAC3B,IAAI,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,GAAG;AACrB,EAAE,IAAI,CAAC,QAAQ,GAAG,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AACzD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,GAAG,EAAE;AACzB,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,GAAG,EAAE;AACtB,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC3B,EAAE,IAAI,YAAY,EAAE;AACpB,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,IAAI,OAAO,MAAM,KAAK,cAAc,GAAG,SAAS,GAAG,MAAM,CAAC;AAC1D,GAAG;AACH,EAAE,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;AAChE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,GAAG,EAAE;AACtB,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC3B,EAAE,OAAO,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACjF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE;AAC7B,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC3B,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,IAAI,KAAK,KAAK,SAAS,IAAI,cAAc,GAAG,KAAK,CAAC;AAC7E,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;AACA;AACA,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC;AACjC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AACtC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,OAAO,CAAC;AAC7B,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,OAAO,CAAC;AAC7B,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,OAAO,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,OAAO,EAAE;AAC5B,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC;AAChB,MAAM,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5C;AACA,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;AACf,EAAE,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AAC3B,IAAI,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,GAAG;AAC1B,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,CAAC,GAAG,EAAE;AAC9B,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ;AAC1B,MAAM,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACtC;AACA,EAAE,IAAI,KAAK,GAAG,CAAC,EAAE;AACjB,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAClC,EAAE,IAAI,KAAK,IAAI,SAAS,EAAE;AAC1B,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAG,MAAM;AACT,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAChC,GAAG;AACH,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,GAAG,EAAE;AAC3B,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ;AAC1B,MAAM,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACtC;AACA,EAAE,OAAO,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,GAAG,EAAE;AAC3B,EAAE,OAAO,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE;AAClC,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ;AAC1B,MAAM,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACtC;AACA,EAAE,IAAI,KAAK,GAAG,CAAC,EAAE;AACjB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5B,GAAG,MAAM;AACT,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;AAC3B,GAAG;AACH,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;AACA;AACA,SAAS,CAAC,SAAS,CAAC,KAAK,GAAG,cAAc,CAAC;AAC3C,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,eAAe,CAAC;AAChD,SAAS,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY,CAAC;AACvC,SAAS,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY,CAAC;AACvC,SAAS,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,OAAO,EAAE;AAC3B,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC;AAChB,MAAM,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5C;AACA,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;AACf,EAAE,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AAC3B,IAAI,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,GAAG;AACzB,EAAE,IAAI,CAAC,QAAQ,GAAG;AAClB,IAAI,MAAM,EAAE,IAAI,IAAI;AACpB,IAAI,KAAK,EAAE,KAAKC,KAAG,IAAI,SAAS,CAAC;AACjC,IAAI,QAAQ,EAAE,IAAI,IAAI;AACtB,GAAG,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,CAAC,GAAG,EAAE;AAC7B,EAAE,OAAO,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAC9C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,GAAG,EAAE;AAC1B,EAAE,OAAO,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,GAAG,EAAE;AAC1B,EAAE,OAAO,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE;AACjC,EAAE,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACxC,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;AACA;AACA,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,aAAa,CAAC;AACzC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC;AAC9C,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW,CAAC;AACrC,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW,CAAC;AACrC,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;AACzC,EAAE,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC7B,EAAE,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AAChE,OAAO,KAAK,KAAK,SAAS,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE;AACjD,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACxB,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE;AAClC,EAAE,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AAC5B,EAAE,OAAO,MAAM,EAAE,EAAE;AACnB,IAAI,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;AACnC,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK;AACL,GAAG;AACH,EAAE,OAAO,CAAC,CAAC,CAAC;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE;AAC7B,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC3C,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,IAAI,OAAO,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,IAAI,UAAU,GAAG,YAAY,CAAC;AACvF,EAAE,OAAO,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AACvC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;AAClD,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACzB,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AACvD;AACA,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC;AAChB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM;AAC1B,MAAM,SAAS,GAAG,MAAM,GAAG,CAAC;AAC5B,MAAM,MAAM,GAAG,MAAM,CAAC;AACtB;AACA,EAAE,OAAO,MAAM,IAAI,IAAI,IAAI,EAAE,KAAK,GAAG,MAAM,EAAE;AAC7C,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,QAAQ,QAAQ,GAAG,KAAK,CAAC;AACzB;AACA,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE;AAC5B,MAAM,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACjC,MAAM,QAAQ,GAAG,UAAU,GAAG,UAAU,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,SAAS,CAAC;AAC5E,MAAM,IAAI,QAAQ,KAAK,SAAS,EAAE;AAClC,QAAQ,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACrC,YAAY,QAAQ;AACpB,aAAa,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACjD,OAAO;AACP,KAAK;AACL,IAAI,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;AACvC,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACzB,GAAG;AACH,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE;AAC7B;AACA,EAAE,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAChC,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AACvB,IAAI,OAAO,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAC5D,GAAG;AACH,EAAE,IAAI,MAAM,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC;AAC5B,EAAE,OAAO,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,KAAK,CAAC,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC;AACrE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,KAAK,EAAE;AACzB,EAAE,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;AACtD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE;AAC9B,EAAE,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC;AAC1B,EAAE,OAAO,SAAS,CAAC,GAAG,CAAC;AACvB,MAAM,IAAI,CAAC,OAAO,GAAG,IAAI,QAAQ,GAAG,QAAQ,GAAG,MAAM,CAAC;AACtD,MAAM,IAAI,CAAC,GAAG,CAAC;AACf,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE;AAChC,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACpC,EAAE,OAAO,YAAY,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,SAAS,CAAC;AACjD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE;AAChC,EAAE,MAAM,GAAG,MAAM,IAAI,IAAI,GAAG,gBAAgB,GAAG,MAAM,CAAC;AACtD,EAAE,OAAO,CAAC,CAAC,MAAM;AACjB,KAAK,OAAO,KAAK,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtD,KAAK,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC;AACrD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE;AAC9B,EAAE,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AACtB,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,IAAI,IAAI,GAAG,OAAO,KAAK,CAAC;AAC1B,EAAE,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,SAAS;AAC/D,MAAM,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AACxC,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;AAC/D,KAAK,MAAM,IAAI,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAChD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,KAAK,EAAE;AAC1B,EAAE,IAAI,IAAI,GAAG,OAAO,KAAK,CAAC;AAC1B,EAAE,OAAO,CAAC,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,SAAS;AACvF,OAAO,KAAK,KAAK,WAAW;AAC5B,OAAO,KAAK,KAAK,IAAI,CAAC,CAAC;AACvB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE;AACxB,EAAE,OAAO,CAAC,CAAC,UAAU,KAAK,UAAU,IAAI,IAAI,CAAC,CAAC;AAC9C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG,OAAO,CAAC,SAAS,MAAM,EAAE;AAC5C,EAAE,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC5B;AACA,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACjC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACpB,GAAG;AACH,EAAE,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;AACpE,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;AAChF,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,KAAK,EAAE;AACtB,EAAE,IAAI,OAAO,KAAK,IAAI,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AACnD,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,IAAI,MAAM,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC;AAC5B,EAAE,OAAO,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,KAAK,CAAC,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC;AACrE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE;AACxB,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE;AACpB,IAAI,IAAI;AACR,MAAM,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE;AAClB,IAAI,IAAI;AACR,MAAM,QAAQ,IAAI,GAAG,EAAE,EAAE;AACzB,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE;AAClB,GAAG;AACH,EAAE,OAAO,EAAE,CAAC;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE;AACjC,EAAE,IAAI,OAAO,IAAI,IAAI,UAAU,KAAK,QAAQ,IAAI,OAAO,QAAQ,IAAI,UAAU,CAAC,EAAE;AAChF,IAAI,MAAM,IAAI,SAAS,CAAC,eAAe,CAAC,CAAC;AACzC,GAAG;AACH,EAAE,IAAI,QAAQ,GAAG,WAAW;AAC5B,IAAI,IAAI,IAAI,GAAG,SAAS;AACxB,QAAQ,GAAG,GAAG,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AAC7D,QAAQ,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;AAC/B;AACA,IAAI,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACxB,MAAM,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5B,KAAK;AACL,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACxC,IAAI,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC5C,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,CAAC;AACJ,EAAE,QAAQ,CAAC,KAAK,GAAG,KAAK,OAAO,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC;AACnD,EAAE,OAAO,QAAQ,CAAC;AAClB,CAAC;AACD;AACA;AACA,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE;AAC1B,EAAE,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,CAAC,CAAC;AACjE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,KAAK,EAAE;AAC3B;AACA;AACA,EAAE,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAC9D,EAAE,OAAO,GAAG,IAAI,OAAO,IAAI,GAAG,IAAI,MAAM,CAAC;AACzC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,KAAK,EAAE;AACzB,EAAE,IAAI,IAAI,GAAG,OAAO,KAAK,CAAC;AAC1B,EAAE,OAAO,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,UAAU,CAAC,CAAC;AAC7D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE;AAC7B,EAAE,OAAO,CAAC,CAAC,KAAK,IAAI,OAAO,KAAK,IAAI,QAAQ,CAAC;AAC7C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,KAAK,EAAE;AACzB,EAAE,OAAO,OAAO,KAAK,IAAI,QAAQ;AACjC,KAAK,YAAY,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,CAAC;AACrE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"}